/* Generated by Cython 0.29.5 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "wings/cpp/OrderBookEntry.h",
            "wings/cpp/PyRef.h"
        ],
        "include_dirs": [
            "./wings"
        ],
        "language": "c++",
        "name": "wings.market.radar_relay_market",
        "sources": [
            "wings/market/radar_relay_market.pyx"
        ]
    },
    "module_name": "wings.market.radar_relay_market"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_5"
#define CYTHON_HEX_VERSION 0x001D05F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__wings__market__radar_relay_market
#define __PYX_HAVE_API__wings__market__radar_relay_market
/* Early includes */
#include <stdint.h>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <utility>
#include <set>
#include <vector>
#include <string.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "cpp/OrderBookEntry.h"
#include <unordered_map>
#include <unordered_set>
#include "cpp/PyRef.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "wings/market/radar_relay_market.pyx",
  "stringsource",
  "__init__.pxd",
  "wings/event_listener.pxd",
  "wings/event_reporter.pxd",
  "type.pxd",
  "wings/pubsub.pxd",
  "wings/order_book.pxd",
  "wings/clock.pxd",
  "wings/time_iterator.pxd",
  "wings/wallet/wallet_base.pxd",
};

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":776
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":778
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":779
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":783
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":784
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":785
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":786
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":790
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":791
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":800
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":801
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":804
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":805
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":806
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":808
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":809
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":811
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":812
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":813
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_5wings_14event_listener_EventListener;
struct __pyx_obj_5wings_14event_reporter_EventReporter;
struct __pyx_obj_5wings_6pubsub_PubSub;
struct __pyx_obj_5wings_10order_book_OrderBook;
struct __pyx_obj_5wings_5clock_Clock;
struct __pyx_obj_5wings_13time_iterator_TimeIterator;
struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase;
struct __pyx_obj_5wings_6market_11market_base_MarketBase;
struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker;
struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket;
struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker;
struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule;
struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order;
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":815
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":816
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":817
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":819
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "pubsub.pxd":11
 * from .event_listener cimport EventListener
 * 
 * ctypedef unordered_set[PyRef] EventListenersCollection             # <<<<<<<<<<<<<<
 * ctypedef unordered_set[PyRef].iterator EventListenersIterator
 * ctypedef unordered_map[int64_t, EventListenersCollection] Events
 */
typedef std::unordered_set<PyRef>  __pyx_t_5wings_6pubsub_EventListenersCollection;

/* "pubsub.pxd":12
 * 
 * ctypedef unordered_set[PyRef] EventListenersCollection
 * ctypedef unordered_set[PyRef].iterator EventListenersIterator             # <<<<<<<<<<<<<<
 * ctypedef unordered_map[int64_t, EventListenersCollection] Events
 * ctypedef unordered_map[int64_t, EventListenersCollection].iterator EventsIterator
 */
typedef std::unordered_set<PyRef> ::iterator __pyx_t_5wings_6pubsub_EventListenersIterator;

/* "pubsub.pxd":13
 * ctypedef unordered_set[PyRef] EventListenersCollection
 * ctypedef unordered_set[PyRef].iterator EventListenersIterator
 * ctypedef unordered_map[int64_t, EventListenersCollection] Events             # <<<<<<<<<<<<<<
 * ctypedef unordered_map[int64_t, EventListenersCollection].iterator EventsIterator
 * ctypedef pair[int64_t, EventListenersCollection] EventsPair
 */
typedef std::unordered_map<int64_t,__pyx_t_5wings_6pubsub_EventListenersCollection>  __pyx_t_5wings_6pubsub_Events;

/* "pubsub.pxd":14
 * ctypedef unordered_set[PyRef].iterator EventListenersIterator
 * ctypedef unordered_map[int64_t, EventListenersCollection] Events
 * ctypedef unordered_map[int64_t, EventListenersCollection].iterator EventsIterator             # <<<<<<<<<<<<<<
 * ctypedef pair[int64_t, EventListenersCollection] EventsPair
 * 
 */
typedef std::unordered_map<int64_t,__pyx_t_5wings_6pubsub_EventListenersCollection> ::iterator __pyx_t_5wings_6pubsub_EventsIterator;

/* "pubsub.pxd":15
 * ctypedef unordered_map[int64_t, EventListenersCollection] Events
 * ctypedef unordered_map[int64_t, EventListenersCollection].iterator EventsIterator
 * ctypedef pair[int64_t, EventListenersCollection] EventsPair             # <<<<<<<<<<<<<<
 * 
 * 
 */
typedef std::pair<int64_t,__pyx_t_5wings_6pubsub_EventListenersCollection>  __pyx_t_5wings_6pubsub_EventsPair;
struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_buy;
struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_sell;

/* "wings/market/market_base.pxd":10
 *     cdef:
 *         EventReporter event_reporter
 *     cdef str c_buy(self, str symbol, double amount, object order_type=*, double price=*, dict kwargs=*)             # <<<<<<<<<<<<<<
 *     cdef str c_sell(self, str symbol, double amount, object order_type=*, double price=*, dict kwargs=*)
 *     cdef c_cancel(self, str symbol, str client_order_id)
 */
struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_buy {
  int __pyx_n;
  PyObject *order_type;
  double price;
  PyObject *kwargs;
};

/* "wings/market/market_base.pxd":11
 *         EventReporter event_reporter
 *     cdef str c_buy(self, str symbol, double amount, object order_type=*, double price=*, dict kwargs=*)
 *     cdef str c_sell(self, str symbol, double amount, object order_type=*, double price=*, dict kwargs=*)             # <<<<<<<<<<<<<<
 *     cdef c_cancel(self, str symbol, str client_order_id)
 *     cdef double c_get_balance(self, str currency) except? -1
 */
struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_sell {
  int __pyx_n;
  PyObject *order_type;
  double price;
  PyObject *kwargs;
};
struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy;
struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell;

/* "wings/market/radar_relay_market.pyx":776
 *             )
 * 
 *     cdef str c_buy(self,             # <<<<<<<<<<<<<<
 *                    str symbol,
 *                    double amount,
 */
struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy {
  int __pyx_n;
  PyObject *order_type;
  double price;
  PyObject *kargs;
};

/* "wings/market/radar_relay_market.pyx":797
 *         return order_id
 * 
 *     cdef str c_sell(self,             # <<<<<<<<<<<<<<
 *                     str symbol,
 *                     double amount,
 */
struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell {
  int __pyx_n;
  PyObject *order_type;
  double price;
  PyObject *kargs;
};

/* "event_listener.pxd":1
 * cdef class EventListener:             # <<<<<<<<<<<<<<
 *     cdef object __weakref__
 *     cdef c_call(self, object arg)
 */
struct __pyx_obj_5wings_14event_listener_EventListener {
  PyObject_HEAD
  struct __pyx_vtabstruct_5wings_14event_listener_EventListener *__pyx_vtab;
  PyObject *__weakref__;
};


/* "wings/event_reporter.pxd":4
 * 
 * 
 * cdef class EventReporter(EventListener):             # <<<<<<<<<<<<<<
 *     cdef:
 *         str event_source
 */
struct __pyx_obj_5wings_14event_reporter_EventReporter {
  struct __pyx_obj_5wings_14event_listener_EventListener __pyx_base;
  PyObject *event_source;
};


/* "pubsub.pxd":18
 * 
 * 
 * cdef class PubSub:             # <<<<<<<<<<<<<<
 *     cdef:
 *         Events _events
 */
struct __pyx_obj_5wings_6pubsub_PubSub {
  PyObject_HEAD
  struct __pyx_vtabstruct_5wings_6pubsub_PubSub *__pyx_vtab;
  __pyx_t_5wings_6pubsub_Events _events;
  PyObject *__weakref__;
};


/* "wings/order_book.pxd":10
 * from .pubsub cimport PubSub
 * 
 * cdef class OrderBook(PubSub):             # <<<<<<<<<<<<<<
 *     cdef set[OrderBookEntry] _bid_book
 *     cdef set[OrderBookEntry] _ask_book
 */
struct __pyx_obj_5wings_10order_book_OrderBook {
  struct __pyx_obj_5wings_6pubsub_PubSub __pyx_base;
  std::set<OrderBookEntry>  _bid_book;
  std::set<OrderBookEntry>  _ask_book;
  int64_t _snapshot_uid;
  int64_t _last_diff_uid;
  double _best_bid;
  double _best_ask;
};


/* "wings/clock.pxd":3
 * # distutils: language=c++
 * 
 * cdef class Clock:             # <<<<<<<<<<<<<<
 *     cdef:
 *         object _clock_mode
 */
struct __pyx_obj_5wings_5clock_Clock {
  PyObject_HEAD
  PyObject *_clock_mode;
  double _tick_size;
  double _start_time;
  double _end_time;
  PyObject *_child_iterators;
  double _current_tick;
  int _started;
};


/* "wings/time_iterator.pxd":8
 * 
 * 
 * cdef class TimeIterator(PubSub):             # <<<<<<<<<<<<<<
 *     cdef:
 *         double _current_timestamp
 */
struct __pyx_obj_5wings_13time_iterator_TimeIterator {
  struct __pyx_obj_5wings_6pubsub_PubSub __pyx_base;
  double _current_timestamp;
  struct __pyx_obj_5wings_5clock_Clock *_clock;
};


/* "wings/wallet/wallet_base.pxd":4
 * 
 * 
 * cdef class WalletBase(TimeIterator):             # <<<<<<<<<<<<<<
 *     cdef double c_get_balance(self, str asset_name) except? -1
 *     cdef object c_get_raw_balance(self, str asset_name)
 */
struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase {
  struct __pyx_obj_5wings_13time_iterator_TimeIterator __pyx_base;
};


/* "wings/market/market_base.pxd":7
 * 
 * 
 * cdef class MarketBase(TimeIterator):             # <<<<<<<<<<<<<<
 *     cdef:
 *         EventReporter event_reporter
 */
struct __pyx_obj_5wings_6market_11market_base_MarketBase {
  struct __pyx_obj_5wings_13time_iterator_TimeIterator __pyx_base;
  struct __pyx_obj_5wings_14event_reporter_EventReporter *event_reporter;
};


/* "wings/transaction_tracker.pxd":4
 * 
 * 
 * cdef class TransactionTracker(TimeIterator):             # <<<<<<<<<<<<<<
 *     cdef:
 *         dict _tx_time_limits
 */
struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker {
  struct __pyx_obj_5wings_13time_iterator_TimeIterator __pyx_base;
  PyObject *_tx_time_limits;
};


/* "wings/market/radar_relay_market.pxd":6
 * 
 * 
 * cdef class RadarRelayMarket(MarketBase):             # <<<<<<<<<<<<<<
 *     cdef:
 *         str _wallet_spender_address
 */
struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket {
  struct __pyx_obj_5wings_6market_11market_base_MarketBase __pyx_base;
  PyObject *_wallet_spender_address;
  PyObject *_wallet;
  PyObject *_provider;
  PyObject *_weth_token;
  PyObject *_order_book_tracker;
  PyObject *_account_balances;
  PyObject *_ev_loop;
  PyObject *_poll_notifier;
  double _last_timestamp;
  double _last_update_limit_order_timestamp;
  double _last_update_market_order_timestamp;
  double _last_update_trading_rules_timestamp;
  double _poll_interval;
  PyObject *_in_flight_limit_orders;
  PyObject *_in_flight_market_orders;
  PyObject *_order_expiry_queue;
  struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *_tx_tracker;
  PyObject *_w3;
  PyObject *_exchange;
  PyObject *_withdraw_rules;
  PyObject *_trading_rules;
  PyObject *_pending_approval_tx_hashes;
  PyObject *_status_polling_task;
  PyObject *_user_stream_event_listener_task;
  PyObject *_approval_tx_polling_task;
  PyObject *_order_tracker_task;
  PyObject *_coro_queue;
  PyObject *_coro_scheduler_task;
  int64_t _latest_salt;
};


/* "wings/market/radar_relay_market.pyx":58
 * 
 * 
 * cdef class RadarRelayTransactionTracker(TransactionTracker):             # <<<<<<<<<<<<<<
 *     cdef:
 *         RadarRelayMarket _owner
 */
struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker {
  struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker __pyx_base;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *_owner;
};


/* "wings/market/radar_relay_market.pyx":71
 * 
 * 
 * cdef class TradingRule:             # <<<<<<<<<<<<<<
 *     cdef:
 *         public str symbol
 */
struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule {
  PyObject_HEAD
  PyObject *symbol;
  double min_order_size;
  double max_order_size;
  int price_precision;
  int price_decimals;
  int amount_decimals;
};


/* "wings/market/radar_relay_market.pyx":117
 * 
 * 
 * cdef class InFlightOrder:             # <<<<<<<<<<<<<<
 *     cdef:
 *         public str client_order_id
 */
struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder {
  PyObject_HEAD
  PyObject *client_order_id;
  PyObject *exchange_order_id;
  PyObject *tx_hash;
  PyObject *symbol;
  int is_buy;
  PyObject *order_type;
  PyObject *amount;
  PyObject *price;
  PyObject *executed_amount;
  PyObject *available_amount;
  PyObject *quote_asset_amount;
  PyObject *gas_fee_amount;
  PyObject *last_state;
  PyObject *zero_ex_order;
};


/* "wings/market/radar_relay_market.pyx":305
 *         return retval
 * 
 *     async def _status_polling_loop(self):             # <<<<<<<<<<<<<<
 *         while True:
 *             try:
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop {
  PyObject_HEAD
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_t_0;
  PyObject *__pyx_t_1;
  PyObject *__pyx_t_2;
  PyObject *__pyx_t_3;
  PyObject *__pyx_t_4;
  PyObject *__pyx_t_5;
};


/* "wings/market/radar_relay_market.pyx":326
 *         self._account_balances = self.wallet.get_all_balances()
 * 
 *     async def list_market(self) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets?include=base"
 *         return await self._api_request(http_method="get", url=url)
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market {
  PyObject_HEAD
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_url;
};


/* "wings/market/radar_relay_market.pyx":330
 *         return await self._api_request(http_method="get", url=url)
 * 
 *     async def _update_trading_rules(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules {
  PyObject_HEAD
  double __pyx_v_current_timestamp;
  PyObject *__pyx_v_markets;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_trading_rule;
  PyObject *__pyx_v_trading_rules_list;
};


/* "wings/market/radar_relay_market.pyx":342
 *             self._last_update_trading_rules_timestamp = current_timestamp
 * 
 *     async def _update_limit_order_status(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status {
  PyObject_HEAD
  double __pyx_v_current_timestamp;
  PyObject *__pyx_7genexpr__pyx_v_o;
  PyObject *__pyx_v_order_executed_amount;
  PyObject *__pyx_v_order_remaining_base_token_amount;
  PyObject *__pyx_v_order_remaining_quote_token_amount;
  PyObject *__pyx_v_order_state;
  PyObject *__pyx_v_order_update;
  PyObject *__pyx_v_previous_is_cancelled;
  PyObject *__pyx_v_previous_is_done;
  PyObject *__pyx_v_previous_is_expired;
  PyObject *__pyx_v_previous_is_failure;
  PyObject *__pyx_v_results;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_tasks;
  PyObject *__pyx_v_total_executed_amount;
  PyObject *__pyx_v_tracked_limit_order;
  PyObject *__pyx_v_tracked_limit_orders;
};


/* "wings/market/radar_relay_market.pyx":443
 *         self._last_update_limit_order_timestamp = current_timestamp
 * 
 *     async def _update_market_order_status(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status {
  PyObject_HEAD
  double __pyx_v_current_timestamp;
  PyObject *__pyx_v_receipt;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_tracked_market_order;
  PyObject *__pyx_v_tracked_market_orders;
};


/* "wings/market/radar_relay_market.pyx":516
 *         self._last_update_market_order_timestamp = current_timestamp
 * 
 *     async def _approval_tx_polling_loop(self):             # <<<<<<<<<<<<<<
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop {
  PyObject_HEAD
  PyObject *__pyx_v_receipt;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_tx_hash;
  PyObject *__pyx_t_0;
  PyObject *__pyx_t_1;
  PyObject *__pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  char const *__pyx_t_5;
  PyObject *__pyx_t_6;
  PyObject *__pyx_t_7;
  PyObject *__pyx_t_8;
};


/* "wings/market/radar_relay_market.pyx":530
 * 
 *     @staticmethod
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):             # <<<<<<<<<<<<<<
 *         while True:
 *             fut, coro = await coro_queue.get()
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler {
  PyObject_HEAD
  PyObject *__pyx_v_coro;
  PyObject *__pyx_v_coro_queue;
  PyObject *__pyx_v_e;
  PyObject *__pyx_v_fut;
  double __pyx_v_interval;
  PyObject *__pyx_t_0;
  PyObject *__pyx_t_1;
  PyObject *__pyx_t_2;
  PyObject *__pyx_t_3;
  PyObject *__pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7;
  char const *__pyx_t_8;
};


/* "wings/market/radar_relay_market.pyx":540
 *                 await asyncio.sleep(interval)
 * 
 *     async def schedule_async_call(self, coro) -> any:             # <<<<<<<<<<<<<<
 *         fut = self._ev_loop.create_future()
 *         self._coro_queue.put_nowait((fut, coro))
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call {
  PyObject_HEAD
  PyObject *__pyx_v_coro;
  PyObject *__pyx_v_fut;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
};


/* "wings/market/radar_relay_market.pyx":545
 *         return await fut
 * 
 *     async def _api_request(self,             # <<<<<<<<<<<<<<
 *                            http_method: str,
 *                            url: str,
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request {
  PyObject_HEAD
  PyObject *__pyx_v_client;
  PyObject *__pyx_v_data;
  PyObject *__pyx_v_headers;
  PyObject *__pyx_v_http_method;
  PyObject *__pyx_v_response;
  PyObject *__pyx_v_response_json;
  PyObject *__pyx_v_response_text;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_url;
  PyObject *__pyx_t_0;
  PyObject *__pyx_t_1;
  PyObject *__pyx_t_2;
  PyObject *__pyx_t_3;
  PyObject *__pyx_t_4;
  PyObject *__pyx_t_5;
  PyObject *__pyx_t_6;
  PyObject *__pyx_t_7;
  PyObject *__pyx_t_8;
  PyObject *__pyx_t_9;
  PyObject *__pyx_t_10;
  PyObject *__pyx_t_11;
  PyObject *__pyx_t_12;
  PyObject *__pyx_t_13;
  PyObject *__pyx_t_14;
};


/* "wings/market/radar_relay_market.pyx":573
 *                                       f"HTTP status is {response.status} - {response_text}.")
 * 
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders {
  PyObject_HEAD
  PyObject *__pyx_v_amount;
  PyObject *__pyx_v_data;
  PyObject *__pyx_v_order_type;
  PyObject *__pyx_v_response_data;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_side;
  PyObject *__pyx_v_symbol;
  PyObject *__pyx_v_url;
};


/* "wings/market/radar_relay_market.pyx":588
 *         return response_data
 * 
 *     async def request_unsigned_limit_order(self, symbol: str, side: TradeType, amount: str, price: str, expires: int)\             # <<<<<<<<<<<<<<
 *             -> Dict[str, any]:
 *         if side is TradeType.BUY:
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order {
  PyObject_HEAD
  PyObject *__pyx_v_amount;
  PyObject *__pyx_v_data;
  PyObject *__pyx_v_expires;
  PyObject *__pyx_v_order_type;
  PyObject *__pyx_v_price;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_side;
  PyObject *__pyx_v_symbol;
  PyObject *__pyx_v_url;
};


/* "wings/market/radar_relay_market.pyx":616
 *         return fixed_signature
 * 
 *     async def submit_market_order(self,             # <<<<<<<<<<<<<<
 *                                   symbol: str,
 *                                   side: TradeType,
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order {
  PyObject_HEAD
  PyObject *__pyx_v_amount;
  PyObject *__pyx_v_amt_with_decimals;
  double __pyx_v_average_price;
  PyObject *__pyx_v_base_asset_decimals;
  PyObject *__pyx_v_order;
  PyObject *__pyx_v_orders;
  PyObject *__pyx_v_response;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_side;
  PyObject *__pyx_v_signatures;
  PyObject *__pyx_v_signed_market_orders;
  PyObject *__pyx_v_symbol;
  PyObject *__pyx_v_tx_hash;
};


/* "wings/market/radar_relay_market.pyx":643
 *         return average_price, tx_hash
 * 
 *     async def submit_limit_order(self,             # <<<<<<<<<<<<<<
 *                                  symbol: str,
 *                                  side: TradeType,
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order {
  PyObject_HEAD
  PyObject *__pyx_v_amount;
  PyObject *__pyx_v_expires;
  PyObject *__pyx_v_order_hash;
  PyObject *__pyx_v_order_hash_hex;
  PyObject *__pyx_v_price;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_side;
  PyObject *__pyx_v_signature;
  PyObject *__pyx_v_signed_limit_order;
  PyObject *__pyx_v_symbol;
  PyObject *__pyx_v_unsigned_limit_order;
  PyObject *__pyx_v_url;
  PyObject *__pyx_v_zero_ex_order;
};


/* "wings/market/radar_relay_market.pyx":667
 *         return order_hash, zero_ex_order
 * 
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:             # <<<<<<<<<<<<<<
 *         incomplete_order_ids = [o.client_order_id
 *                                 for o in self._in_flight_limit_orders.values()
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all {
  PyObject_HEAD
  PyObject *__pyx_v_incomplete_order_ids;
  PyObject *__pyx_8genexpr1__pyx_v_o;
  PyObject *__pyx_8genexpr2__pyx_v_oid;
  PyObject *__pyx_8genexpr3__pyx_v_oid;
  PyObject *__pyx_8genexpr4__pyx_v_oid;
  PyObject *__pyx_v_receipt;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  double __pyx_v_timeout_seconds;
  PyObject *__pyx_v_tx_hash;
  PyObject *__pyx_t_0;
  PyObject *__pyx_t_1;
  PyObject *__pyx_t_2;
  PyObject *__pyx_t_3;
  PyObject *__pyx_t_4;
  PyObject *__pyx_t_5;
  PyObject *__pyx_t_6;
  PyObject *__pyx_t_7;
  PyObject *__pyx_t_8;
  PyObject *__pyx_t_9;
  PyObject *__pyx_t_10;
  PyObject *__pyx_t_11;
};


/* "wings/market/radar_relay_market.pyx":691
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 * 
 *     async def execute_trade(self,             # <<<<<<<<<<<<<<
 *                             order_id: str,
 *                             order_type: OrderType,
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade {
  PyObject_HEAD
  double __pyx_v_amount;
  PyObject *__pyx_v_avg_price;
  PyObject *__pyx_v_exchange_order_id;
  PyObject *__pyx_v_expires;
  int __pyx_v_is_buy;
  PyObject *__pyx_v_order_id;
  PyObject *__pyx_v_order_side;
  PyObject *__pyx_v_order_type;
  double __pyx_v_price;
  PyObject *__pyx_v_q_amt;
  PyObject *__pyx_v_q_price;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_symbol;
  struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_trading_rule;
  PyObject *__pyx_v_tx_hash;
  PyObject *__pyx_v_zero_ex_order;
  PyObject *__pyx_t_0;
  PyObject *__pyx_t_1;
  PyObject *__pyx_t_2;
};


/* "wings/market/radar_relay_market.pyx":818
 *         return order_id
 * 
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         order = self._in_flight_limit_orders.get(client_order_id)
 *         if not order:
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order {
  PyObject_HEAD
  PyObject *__pyx_v_client_order_id;
  PyObject *__pyx_v_order;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
};


/* "wings/market/radar_relay_market.pyx":837
 *         return self.c_get_price(symbol, is_buy)
 * 
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"
 *         response_data = await self._api_request("get", url=url)
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order {
  PyObject_HEAD
  PyObject *__pyx_v_order_hash;
  PyObject *__pyx_v_response_data;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_url;
};


/* "wings/market/radar_relay_market.pyx":845
 *         return self._w3.eth.getTransactionReceipt(tx_hash)
 * 
 *     async def list_account_orders(self) -> List[Dict[str, any]]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/accounts/{self._wallet.address}/orders"
 *         response_data = await self._api_request("get", url=url)
 */
struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders {
  PyObject_HEAD
  PyObject *__pyx_v_response_data;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self;
  PyObject *__pyx_v_url;
};



/* "event_listener.pxd":1
 * cdef class EventListener:             # <<<<<<<<<<<<<<
 *     cdef object __weakref__
 *     cdef c_call(self, object arg)
 */

struct __pyx_vtabstruct_5wings_14event_listener_EventListener {
  PyObject *(*c_call)(struct __pyx_obj_5wings_14event_listener_EventListener *, PyObject *);
};
static struct __pyx_vtabstruct_5wings_14event_listener_EventListener *__pyx_vtabptr_5wings_14event_listener_EventListener;


/* "wings/event_reporter.pxd":4
 * 
 * 
 * cdef class EventReporter(EventListener):             # <<<<<<<<<<<<<<
 *     cdef:
 *         str event_source
 */

struct __pyx_vtabstruct_5wings_14event_reporter_EventReporter {
  struct __pyx_vtabstruct_5wings_14event_listener_EventListener __pyx_base;
};
static struct __pyx_vtabstruct_5wings_14event_reporter_EventReporter *__pyx_vtabptr_5wings_14event_reporter_EventReporter;


/* "pubsub.pxd":18
 * 
 * 
 * cdef class PubSub:             # <<<<<<<<<<<<<<
 *     cdef:
 *         Events _events
 */

struct __pyx_vtabstruct_5wings_6pubsub_PubSub {
  PyObject *(*c_log_exception)(struct __pyx_obj_5wings_6pubsub_PubSub *, int64_t, PyObject *);
  PyObject *(*c_add_listener)(struct __pyx_obj_5wings_6pubsub_PubSub *, int64_t, struct __pyx_obj_5wings_14event_listener_EventListener *);
  PyObject *(*c_remove_listener)(struct __pyx_obj_5wings_6pubsub_PubSub *, int64_t, struct __pyx_obj_5wings_14event_listener_EventListener *);
  PyObject *(*c_remove_dead_listeners)(struct __pyx_obj_5wings_6pubsub_PubSub *, int64_t);
  PyObject *(*c_get_listeners)(struct __pyx_obj_5wings_6pubsub_PubSub *, int64_t);
  PyObject *(*c_trigger_event)(struct __pyx_obj_5wings_6pubsub_PubSub *, int64_t, PyObject *);
};
static struct __pyx_vtabstruct_5wings_6pubsub_PubSub *__pyx_vtabptr_5wings_6pubsub_PubSub;


/* "wings/order_book.pxd":10
 * from .pubsub cimport PubSub
 * 
 * cdef class OrderBook(PubSub):             # <<<<<<<<<<<<<<
 *     cdef set[OrderBookEntry] _bid_book
 *     cdef set[OrderBookEntry] _ask_book
 */

struct __pyx_vtabstruct_5wings_10order_book_OrderBook {
  struct __pyx_vtabstruct_5wings_6pubsub_PubSub __pyx_base;
  PyObject *(*c_apply_diffs)(struct __pyx_obj_5wings_10order_book_OrderBook *, std::vector<OrderBookEntry> , std::vector<OrderBookEntry> , int64_t);
  PyObject *(*c_apply_snapshot)(struct __pyx_obj_5wings_10order_book_OrderBook *, std::vector<OrderBookEntry> , std::vector<OrderBookEntry> , int64_t);
  PyObject *(*c_apply_trade)(struct __pyx_obj_5wings_10order_book_OrderBook *, PyObject *);
  PyObject *(*c_apply_numpy_diffs)(struct __pyx_obj_5wings_10order_book_OrderBook *, PyArrayObject *, PyArrayObject *);
  PyObject *(*c_apply_numpy_snapshot)(struct __pyx_obj_5wings_10order_book_OrderBook *, PyArrayObject *, PyArrayObject *);
  double (*c_get_price)(struct __pyx_obj_5wings_10order_book_OrderBook *, int);
  double (*c_get_price_for_volume)(struct __pyx_obj_5wings_10order_book_OrderBook *, int, double);
  double (*c_get_price_for_quote_volume)(struct __pyx_obj_5wings_10order_book_OrderBook *, int, double);
  double (*c_get_volume_for_price)(struct __pyx_obj_5wings_10order_book_OrderBook *, int, double);
  double (*c_get_quote_volume_for_price)(struct __pyx_obj_5wings_10order_book_OrderBook *, int, double);
  double (*c_get_vwap_for_volume)(struct __pyx_obj_5wings_10order_book_OrderBook *, int, double);
};
static struct __pyx_vtabstruct_5wings_10order_book_OrderBook *__pyx_vtabptr_5wings_10order_book_OrderBook;


/* "wings/time_iterator.pxd":8
 * 
 * 
 * cdef class TimeIterator(PubSub):             # <<<<<<<<<<<<<<
 *     cdef:
 *         double _current_timestamp
 */

struct __pyx_vtabstruct_5wings_13time_iterator_TimeIterator {
  struct __pyx_vtabstruct_5wings_6pubsub_PubSub __pyx_base;
  PyObject *(*c_start)(struct __pyx_obj_5wings_13time_iterator_TimeIterator *, struct __pyx_obj_5wings_5clock_Clock *, double);
  PyObject *(*c_tick)(struct __pyx_obj_5wings_13time_iterator_TimeIterator *, double);
};
static struct __pyx_vtabstruct_5wings_13time_iterator_TimeIterator *__pyx_vtabptr_5wings_13time_iterator_TimeIterator;


/* "wings/wallet/wallet_base.pxd":4
 * 
 * 
 * cdef class WalletBase(TimeIterator):             # <<<<<<<<<<<<<<
 *     cdef double c_get_balance(self, str asset_name) except? -1
 *     cdef object c_get_raw_balance(self, str asset_name)
 */

struct __pyx_vtabstruct_5wings_6wallet_11wallet_base_WalletBase {
  struct __pyx_vtabstruct_5wings_13time_iterator_TimeIterator __pyx_base;
  double (*c_get_balance)(struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase *, PyObject *);
  PyObject *(*c_get_raw_balance)(struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase *, PyObject *);
  PyObject *(*c_send)(struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase *, PyObject *, PyObject *, double);
};
static struct __pyx_vtabstruct_5wings_6wallet_11wallet_base_WalletBase *__pyx_vtabptr_5wings_6wallet_11wallet_base_WalletBase;


/* "wings/market/market_base.pxd":7
 * 
 * 
 * cdef class MarketBase(TimeIterator):             # <<<<<<<<<<<<<<
 *     cdef:
 *         EventReporter event_reporter
 */

struct __pyx_vtabstruct_5wings_6market_11market_base_MarketBase {
  struct __pyx_vtabstruct_5wings_13time_iterator_TimeIterator __pyx_base;
  PyObject *(*c_buy)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double, struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_buy *__pyx_optional_args);
  PyObject *(*c_sell)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double, struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_sell *__pyx_optional_args);
  PyObject *(*c_cancel)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, PyObject *);
  double (*c_get_balance)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *);
  PyObject *(*c_withdraw)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, PyObject *, double);
  PyObject *(*c_deposit)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase *, PyObject *, double);
  struct __pyx_obj_5wings_10order_book_OrderBook *(*c_get_order_book)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *);
  double (*c_get_price)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, int);
  PyObject *(*c_get_order_price_quantum)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double);
  PyObject *(*c_get_order_size_quantum)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double);
  PyObject *(*c_quantize_order_price)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double);
  PyObject *(*c_quantize_order_amount)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double);
};
static struct __pyx_vtabstruct_5wings_6market_11market_base_MarketBase *__pyx_vtabptr_5wings_6market_11market_base_MarketBase;


/* "wings/transaction_tracker.pxd":4
 * 
 * 
 * cdef class TransactionTracker(TimeIterator):             # <<<<<<<<<<<<<<
 *     cdef:
 *         dict _tx_time_limits
 */

struct __pyx_vtabstruct_5wings_19transaction_tracker_TransactionTracker {
  struct __pyx_vtabstruct_5wings_13time_iterator_TimeIterator __pyx_base;
  PyObject *(*c_start_tx_tracking)(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *, PyObject *, float);
  PyObject *(*c_stop_tx_tracking)(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *, PyObject *);
  int (*c_is_tx_tracked)(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *, PyObject *);
  PyObject *(*c_did_timeout_tx)(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *, PyObject *);
  PyObject *(*c_process_tx_timeouts)(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *);
};
static struct __pyx_vtabstruct_5wings_19transaction_tracker_TransactionTracker *__pyx_vtabptr_5wings_19transaction_tracker_TransactionTracker;


/* "wings/market/radar_relay_market.pyx":191
 * 
 * 
 * cdef class RadarRelayMarket(MarketBase):             # <<<<<<<<<<<<<<
 *     MARKET_RECEIVED_ASSET_EVENT_TAG = MarketEvent.ReceivedAsset.value
 *     MARKET_BUY_ORDER_COMPLETED_EVENT_TAG = MarketEvent.BuyOrderCompleted.value
 */

struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket {
  struct __pyx_vtabstruct_5wings_6market_11market_base_MarketBase __pyx_base;
  PyObject *(*c_start_tracking_limit_order)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *, PyObject *, PyObject *, int, PyObject *, PyObject *, PyObject *, int, PyObject *);
  PyObject *(*c_start_tracking_market_order)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *, PyObject *, PyObject *, int, PyObject *, PyObject *, PyObject *);
  PyObject *(*c_expire_order)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *);
  PyObject *(*c_check_and_remove_expired_orders)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *);
  PyObject *(*c_stop_tracking_order)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *);
};
static struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayMarket;


/* "wings/market/radar_relay_market.pyx":58
 * 
 * 
 * cdef class RadarRelayTransactionTracker(TransactionTracker):             # <<<<<<<<<<<<<<
 *     cdef:
 *         RadarRelayMarket _owner
 */

struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker {
  struct __pyx_vtabstruct_5wings_19transaction_tracker_TransactionTracker __pyx_base;
};
static struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_str(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_str(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* IncludeStringH.proto */
#include <string.h>

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* PyUnicode_Unicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj);

/* BuildPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
                                                int prepend_sign, char padding_char);

/* CIntToPyUnicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_int(int value, Py_ssize_t width, char padding_char, char format_char);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* CBIntToPyUnicode.proto */
#define __Pyx_PyUnicode_FromBInt_int(value)\
    ((value) ? __Pyx_NewRef(__pyx_n_u_True) : __Pyx_NewRef(__pyx_n_u_False))

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Coroutine.proto */
#define __Pyx_Coroutine_USED
static PyTypeObject *__pyx_CoroutineType = 0;
static PyTypeObject *__pyx_CoroutineAwaitType = 0;
#define __Pyx_Coroutine_CheckExact(obj) (Py_TYPE(obj) == __pyx_CoroutineType)
#define __Pyx_Coroutine_Check(obj) __Pyx_Coroutine_CheckExact(obj)
#define __Pyx_CoroutineAwait_CheckExact(obj) (Py_TYPE(obj) == __pyx_CoroutineAwaitType)
#define __Pyx_Coroutine_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_CoroutineType, body, code, closure, name, qualname, module_name)
static int __pyx_Coroutine_init(void);
static PyObject *__Pyx__Coroutine_await(PyObject *coroutine);
typedef struct {
    PyObject_HEAD
    PyObject *coroutine;
} __pyx_CoroutineAwaitObject;
static PyObject *__Pyx_CoroutineAwait_Close(__pyx_CoroutineAwaitObject *self, PyObject *arg);
static PyObject *__Pyx_CoroutineAwait_Throw(__pyx_CoroutineAwaitObject *self, PyObject *args);

/* GetAwaitIter.proto */
static CYTHON_INLINE PyObject *__Pyx_Coroutine_GetAwaitableIter(PyObject *o);
static PyObject *__Pyx__Coroutine_GetAwaitableIter(PyObject *o);

/* CoroutineYieldFrom.proto */
static CYTHON_INLINE PyObject* __Pyx_Coroutine_Yield_From(__pyx_CoroutineObject *gen, PyObject *source);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* ReturnWithStopIteration.proto */
#define __Pyx_ReturnWithStopIteration(value)\
    if (value == Py_None) PyErr_SetNone(PyExc_StopIteration); else __Pyx__ReturnWithStopIteration(value)
static void __Pyx__ReturnWithStopIteration(PyObject* value);

/* py_dict_clear.proto */
#define __Pyx_PyDict_Clear(d) (PyDict_Clear(d), 0)

/* py_dict_values.proto */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Values(PyObject* d);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod0.proto */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CallUnboundCMethod0(cfunc, self)\
    (likely((cfunc)->func) ?\
        (likely((cfunc)->flag == METH_NOARGS) ?  (*((cfunc)->func))(self, NULL) :\
         (PY_VERSION_HEX >= 0x030600B1 && likely((cfunc)->flag == METH_FASTCALL) ?\
            (PY_VERSION_HEX >= 0x030700A0 ?\
                (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0) :\
                (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0, NULL)) :\
          (PY_VERSION_HEX >= 0x030700A0 && (cfunc)->flag == (METH_FASTCALL | METH_KEYWORDS) ?\
            (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0, NULL) :\
            (likely((cfunc)->flag == (METH_VARARGS | METH_KEYWORDS)) ?  ((*(PyCFunctionWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, __pyx_empty_tuple, NULL)) :\
               ((cfunc)->flag == METH_VARARGS ?  (*((cfunc)->func))(self, __pyx_empty_tuple) :\
               __Pyx__CallUnboundCMethod0(cfunc, self)))))) :\
        __Pyx__CallUnboundCMethod0(cfunc, self))
#else
#define __Pyx_CallUnboundCMethod0(cfunc, self)  __Pyx__CallUnboundCMethod0(cfunc, self)
#endif

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return __Pyx_PyObject_GetAttrStr(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#else
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* pyobject_as_double.proto */
static double __Pyx__PyObject_AsDouble(PyObject* obj);
#if CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyObject_AsDouble(obj)\
(likely(PyFloat_CheckExact(obj)) ? PyFloat_AS_DOUBLE(obj) :\
 likely(PyInt_CheckExact(obj)) ?\
 PyFloat_AsDouble(obj) : __Pyx__PyObject_AsDouble(obj))
#else
#define __Pyx_PyObject_AsDouble(obj)\
((likely(PyFloat_CheckExact(obj))) ?\
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))
#endif

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* PyDictContains.proto */
static CYTHON_INLINE int __Pyx_PyDict_ContainsTF(PyObject* item, PyObject* dict, int eq) {
    int result = PyDict_Contains(dict, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* CallNextTpDealloc.proto */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyObject *dict);

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* PatchInspect.proto */
static PyObject* __Pyx_patch_inspect(PyObject* module);

/* PatchAsyncIO.proto */
static PyObject* __Pyx_patch_asyncio(PyObject* module);

/* ClassMethod.proto */
#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int64_t(int64_t value);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* None.proto */
#include <new>

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int64_t __Pyx_PyInt_As_int64_t(PyObject *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_c_did_timeout_tx(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self, PyObject *__pyx_v_tx_id); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount, struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount, struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_cancel(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_symbol, PyObject *__pyx_v_client_order_id); /* proto*/
static double __pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_balance(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_currency); /* proto*/
static struct __pyx_obj_5wings_10order_book_OrderBook *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_book(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol); /* proto*/
static double __pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_price(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, int __pyx_v_is_buy); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, struct __pyx_obj_5wings_5clock_Clock *__pyx_v_clock, double __pyx_v_timestamp); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_tick(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_timestamp); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start_tracking_limit_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id, PyObject *__pyx_v_exchange_order_id, PyObject *__pyx_v_symbol, int __pyx_v_is_buy, PyObject *__pyx_v_order_type, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, CYTHON_UNUSED int __pyx_v_expires, PyObject *__pyx_v_zero_ex_order); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start_tracking_market_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id, PyObject *__pyx_v_tx_hash, PyObject *__pyx_v_symbol, int __pyx_v_is_buy, PyObject *__pyx_v_order_type, PyObject *__pyx_v_amount, PyObject *__pyx_v_price); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_expire_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_check_and_remove_expired_orders(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_stop_tracking_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_price_quantum(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_price); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_size_quantum(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount); /* proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_quantize_order_amount(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount); /* proto*/

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'wings.event_listener' */
static PyTypeObject *__pyx_ptype_5wings_14event_listener_EventListener = 0;

/* Module declarations from 'wings.event_reporter' */
static PyTypeObject *__pyx_ptype_5wings_14event_reporter_EventReporter = 0;

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.set' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'wings.OrderBookEntry' */

/* Module declarations from 'libcpp.unordered_map' */

/* Module declarations from 'libcpp.unordered_set' */

/* Module declarations from 'wings.PyRef' */

/* Module declarations from 'wings.pubsub' */
static PyTypeObject *__pyx_ptype_5wings_6pubsub_PubSub = 0;

/* Module declarations from 'wings.order_book' */
static PyTypeObject *__pyx_ptype_5wings_10order_book_OrderBook = 0;

/* Module declarations from 'wings.clock' */
static PyTypeObject *__pyx_ptype_5wings_5clock_Clock = 0;

/* Module declarations from 'wings.time_iterator' */
static PyTypeObject *__pyx_ptype_5wings_13time_iterator_TimeIterator = 0;

/* Module declarations from 'wings.wallet.wallet_base' */
static PyTypeObject *__pyx_ptype_5wings_6wallet_11wallet_base_WalletBase = 0;

/* Module declarations from 'wings.market.market_base' */
static PyTypeObject *__pyx_ptype_5wings_6market_11market_base_MarketBase = 0;

/* Module declarations from 'wings.transaction_tracker' */
static PyTypeObject *__pyx_ptype_5wings_19transaction_tracker_TransactionTracker = 0;

/* Module declarations from 'wings.market.radar_relay_market' */
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market_InFlightOrder = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order = 0;
static PyTypeObject *__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders = 0;
static PyObject *__pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule__set_state(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *, PyObject *); /*proto*/
static PyObject *__pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_InFlightOrder__set_state(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *, PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "wings.market.radar_relay_market"
extern int __pyx_module_is_main_wings__market__radar_relay_market;
int __pyx_module_is_main_wings__market__radar_relay_market = 0;

/* Implementation of 'wings.market.radar_relay_market' */
static PyObject *__pyx_builtin_any;
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_super;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_zip;
static PyObject *__pyx_builtin_IOError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_e[] = "e";
static const char __pyx_k_1e[] = "1e";
static const char __pyx_k__3[] = "')";
static const char __pyx_k__4[] = "-";
static const char __pyx_k__8[] = ": ";
static const char __pyx_k__9[] = ".";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_BUY[] = "BUY";
static const char __pyx_k_NaN[] = "NaN";
static const char __pyx_k__12[] = " - ";
static const char __pyx_k__15[] = "";
static const char __pyx_k__19[] = " ";
static const char __pyx_k__27[] = "'.";
static const char __pyx_k_any[] = "any";
static const char __pyx_k_buy[] = "buy-";
static const char __pyx_k_eth[] = "eth";
static const char __pyx_k_fut[] = "fut";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_set[] = "set";
static const char __pyx_k_url[] = "url";
static const char __pyx_k_zip[] = "zip";
static const char __pyx_k_1e_2[] = "1e-";
static const char __pyx_k_Dict[] = "Dict";
static const char __pyx_k_List[] = "List";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_OPEN[] = "OPEN";
static const char __pyx_k_SELL[] = "SELL";
static const char __pyx_k_True[] = "True";
static const char __pyx_k_Web3[] = "Web3";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_ceil[] = "ceil";
static const char __pyx_k_copy[] = "copy";
static const char __pyx_k_coro[] = "coro";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_info[] = "info";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_json[] = "json";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_math[] = "math";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_post[] = "post";
static const char __pyx_k_salt[] = "salt";
static const char __pyx_k_sell[] = "sell-";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_side[] = "side";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_type[] = "type";
static const char __pyx_k_wait[] = "wait";
static const char __pyx_k_web3[] = "web3";
static const char __pyx_k_Event[] = "Event";
static const char __pyx_k_False[] = "False";
static const char __pyx_k_LIMIT[] = "LIMIT";
static const char __pyx_k_Order[] = "Order";
static const char __pyx_k_Queue[] = "Queue";
static const char __pyx_k_Tuple[] = "Tuple";
static const char __pyx_k_aexit[] = "__aexit__";
static const char __pyx_k_await[] = "__await__";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_deque[] = "deque";
static const char __pyx_k_error[] = "error";
static const char __pyx_k_log10[] = "log10";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_order[] = "order";
static const char __pyx_k_owner[] = "owner";
static const char __pyx_k_price[] = "price";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_sleep[] = "sleep";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_start[] = "start";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_toHex[] = "toHex";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_Filled[] = "Filled ";
static const char __pyx_k_MARKET[] = "MARKET";
static const char __pyx_k_aenter[] = "__aenter__";
static const char __pyx_k_amount[] = "amount";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_gather[] = "gather";
static const char __pyx_k_hexstr[] = "hexstr";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_is_buy[] = "is_buy";
static const char __pyx_k_is_set[] = "is_set";
static const char __pyx_k_logger[] = "logger";
static const char __pyx_k_orders[] = "orders";
static const char __pyx_k_out_of[] = " out of ";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_remove[] = "remove";
static const char __pyx_k_status[] = "status";
static const char __pyx_k_symbol[] = "symbol";
static const char __pyx_k_typing[] = "typing";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_wallet[] = "wallet";
static const char __pyx_k_Decimal[] = "Decimal";
static const char __pyx_k_EXPIRED[] = "EXPIRED";
static const char __pyx_k_IOError[] = "IOError";
static const char __pyx_k_address[] = "address";
static const char __pyx_k_aiohttp[] = "aiohttp";
static const char __pyx_k_asyncio[] = "asyncio";
static const char __pyx_k_decimal[] = "decimal";
static const char __pyx_k_expires[] = "expires";
static const char __pyx_k_headers[] = "headers";
static const char __pyx_k_inspect[] = "inspect";
static const char __pyx_k_is_done[] = "is_done";
static const char __pyx_k_logging[] = "logging";
static const char __pyx_k_markets[] = "/markets/";
static const char __pyx_k_popleft[] = "popleft";
static const char __pyx_k_price_2[] = " price=";
static const char __pyx_k_request[] = "request";
static const char __pyx_k_spender[] = "spender";
static const char __pyx_k_symbols[] = "symbols";
static const char __pyx_k_timeout[] = "timeout";
static const char __pyx_k_tx_hash[] = "tx_hash";
static const char __pyx_k_CANCELED[] = "CANCELED";
static const char __pyx_k_Optional[] = "Optional";
static const char __pyx_k_Skipping[] = ". Skipping.";
static const char __pyx_k_UNFUNDED[] = "UNFUNDED";
static const char __pyx_k_accounts[] = "/accounts/";
static const char __pyx_k_amount_2[] = ", amount=";
static const char __pyx_k_deepcopy[] = "deepcopy";
static const char __pyx_k_exc_info[] = "exc_info";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_interval[] = "interval";
static const char __pyx_k_is_buy_2[] = "', is_buy=";
static const char __pyx_k_order_id[] = "order_id";
static const char __pyx_k_orders_2[] = "/orders";
static const char __pyx_k_orders_3[] = "/orders/";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_quantity[] = "quantity";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_symbol_2[] = "', symbol='";
static const char __pyx_k_web3_url[] = "web3_url";
static const char __pyx_k_wrap_eth[] = "wrap_eth";
static const char __pyx_k_CANCELLED[] = "CANCELLED";
static const char __pyx_k_OrderType[] = "OrderType";
static const char __pyx_k_TradeType[] = "TradeType";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_getLogger[] = "getLogger";
static const char __pyx_k_get_order[] = "get_order";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_sign_hash[] = "sign_hash";
static const char __pyx_k_signature[] = "signature";
static const char __pyx_k_tx_hash_2[] = "', tx_hash='";
static const char __pyx_k_LimitOrder[] = "LimitOrder";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_Web3Wallet[] = "Web3Wallet";
static const char __pyx_k_base_asset[] = "base_asset";
static const char __pyx_k_cancel_all[] = "cancel_all";
static const char __pyx_k_coro_queue[] = "coro_queue";
static const char __pyx_k_expiration[] = "expiration";
static const char __pyx_k_is_expired[] = "is_expired";
static const char __pyx_k_is_failure[] = "is_failure";
static const char __pyx_k_last_state[] = ", last_state='";
static const char __pyx_k_order_side[] = "order_side";
static const char __pyx_k_order_type[] = "order_type";
static const char __pyx_k_put_nowait[] = "put_nowait";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_rrm_logger[] = "rrm_logger";
static const char __pyx_k_set_result[] = "set_result";
static const char __pyx_k_unwrap_eth[] = "unwrap_eth";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_MarketEvent[] = "MarketEvent";
static const char __pyx_k_OrderFilled[] = "OrderFilled";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_TradingRule[] = "TradingRule";
static const char __pyx_k_api_request[] = "_api_request";
static const char __pyx_k_collections[] = "collections";
static const char __pyx_k_http_method[] = "http_method";
static const char __pyx_k_list_market[] = "list_market";
static const char __pyx_k_order_books[] = "order_books";
static const char __pyx_k_order_limit[] = "/order/limit";
static const char __pyx_k_quote_asset[] = "quote_asset";
static const char __pyx_k_s_decimal_0[] = "s_decimal_0";
static const char __pyx_k_EXCHANGE_API[] = "EXCHANGE_API";
static const char __pyx_k_HTTPProvider[] = "HTTPProvider";
static const char __pyx_k_OrderExpired[] = "OrderExpired";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_averagePrice[] = "averagePrice";
static const char __pyx_k_cancel_order[] = "cancel_order";
static const char __pyx_k_is_cancelled[] = "is_cancelled";
static const char __pyx_k_last_state_2[] = "last_state";
static const char __pyx_k_makerAddress[] = "makerAddress";
static const char __pyx_k_maxOrderSize[] = "maxOrderSize";
static const char __pyx_k_minOrderSize[] = "minOrderSize";
static const char __pyx_k_order_market[] = "/order/market";
static const char __pyx_k_order_type_2[] = ", order_type=";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_stringsource[] = "stringsource";
static const char __pyx_k_wings_events[] = "wings.events";
static const char __pyx_k_ClientSession[] = "ClientSession";
static const char __pyx_k_InFlightOrder[] = "InFlightOrder";
static const char __pyx_k_ReceivedAsset[] = "ReceivedAsset";
static const char __pyx_k_WithdrawAsset[] = "WithdrawAsset";
static const char __pyx_k_async_timeout[] = "async_timeout";
static const char __pyx_k_asyncio_tasks[] = "asyncio.tasks";
static const char __pyx_k_create_future[] = "create_future";
static const char __pyx_k_ensure_future[] = "ensure_future";
static const char __pyx_k_execute_trade[] = "execute_trade";
static const char __pyx_k_expiration_ts[] = "expiration_ts";
static const char __pyx_k_fix_signature[] = "fix_signature";
static const char __pyx_k_poll_interval[] = "poll_interval";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_set_exception[] = "set_exception";
static const char __pyx_k_trading_rules[] = "trading_rules";
static const char __pyx_k_zero_ex_order[] = "zero_ex_order";
static const char __pyx_k_CancelledError[] = "CancelledError";
static const char __pyx_k_HTTP_status_is[] = ". HTTP status is ";
static const char __pyx_k_OrderCancelled[] = "OrderCancelled";
static const char __pyx_k_ZeroExExchange[] = "ZeroExExchange";
static const char __pyx_k_coro_scheduler[] = "coro_scheduler";
static const char __pyx_k_gas_fee_amount[] = ", gas_fee_amount=";
static const char __pyx_k_get_event_loop[] = "get_event_loop";
static const char __pyx_k_max_order_size[] = "max_order_size";
static const char __pyx_k_min_order_size[] = "min_order_size";
static const char __pyx_k_price_decimals[] = "price_decimals";
static const char __pyx_k_quoteIncrement[] = "quoteIncrement";
static const char __pyx_k_BuyOrderCreated[] = "BuyOrderCreated";
static const char __pyx_k_The_limit_order[] = "The limit order ";
static const char __pyx_k_amount_decimals[] = "amount_decimals";
static const char __pyx_k_client_order_id[] = "client_order_id";
static const char __pyx_k_current_backend[] = "current_backend";
static const char __pyx_k_executed_amount[] = ", executed_amount=";
static const char __pyx_k_expiration_time[] = "expiration time ";
static const char __pyx_k_price_precision[] = "price_precision";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_update_balances[] = "_update_balances";
static const char __pyx_k_zero_ex_order_2[] = "', zero_ex_order='";
static const char __pyx_k_API_CALL_TIMEOUT[] = "API_CALL_TIMEOUT";
static const char __pyx_k_Buy_order_amount[] = "Buy order amount ";
static const char __pyx_k_OrderFilledEvent[] = "OrderFilledEvent";
static const char __pyx_k_RadarRelayMarket[] = "RadarRelayMarket";
static const char __pyx_k_SellOrderCreated[] = "SellOrderCreated";
static const char __pyx_k_The_market_order[] = "The market order ";
static const char __pyx_k_available_amount[] = ", available_amount=";
static const char __pyx_k_c_did_timeout_tx[] = "c_did_timeout_tx";
static const char __pyx_k_data_source_type[] = "data_source_type";
static const char __pyx_k_exchange_address[] = "exchange_address";
static const char __pyx_k_for_more_details[] = " for more details.";
static const char __pyx_k_gas_fee_amount_2[] = "gas_fee_amount";
static const char __pyx_k_get_all_balances[] = "get_all_balances";
static const char __pyx_k_max_order_size_2[] = ", max_order_size=";
static const char __pyx_k_min_order_size_2[] = "', min_order_size=";
static const char __pyx_k_price_decimals_2[] = ", price_decimals=";
static const char __pyx_k_BuyOrderCompleted[] = "BuyOrderCompleted";
static const char __pyx_k_ORDER_EXPIRY_TIME[] = "ORDER_EXPIRY_TIME";
static const char __pyx_k_OrderExpiredEvent[] = "OrderExpiredEvent";
static const char __pyx_k_amount_decimals_2[] = ", amount_decimals=";
static const char __pyx_k_baseTokenDecimals[] = "baseTokenDecimals";
static const char __pyx_k_exchange_order_id[] = "exchange_order_id";
static const char __pyx_k_executed_amount_2[] = "executed_amount";
static const char __pyx_k_market_buy_orders[] = "market_buy_orders";
static const char __pyx_k_price_precision_2[] = ", price_precision=";
static const char __pyx_k_return_exceptions[] = "return_exceptions";
static const char __pyx_k_wings_limit_order[] = "wings.limit_order";
static const char __pyx_k_CancellationResult[] = "CancellationResult";
static const char __pyx_k_SellOrderCompleted[] = "SellOrderCompleted";
static const char __pyx_k_TradingRule_symbol[] = "TradingRule(symbol='";
static const char __pyx_k_TransactionFailure[] = "TransactionFailure";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_available_amount_2[] = "available_amount";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_get_order_hash_hex[] = "get_order_hash_hex";
static const char __pyx_k_market_sell_orders[] = "market_sell_orders";
static const char __pyx_k_of_the_limit_order[] = " of the limit order ";
static const char __pyx_k_quoteTokenDecimals[] = "quoteTokenDecimals";
static const char __pyx_k_quote_asset_amount[] = ", quote_asset_amount=";
static const char __pyx_k_submit_limit_order[] = "submit_limit_order";
static const char __pyx_k_OrderCancelledEvent[] = "OrderCancelledEvent";
static const char __pyx_k_The_limit_buy_order[] = "The limit buy order ";
static const char __pyx_k_cancel_orders_up_to[] = "cancel_orders_up_to";
static const char __pyx_k_exchange_order_id_2[] = "', exchange_order_id='";
static const char __pyx_k_get_tx_hash_receipt[] = "get_tx_hash_receipt";
static const char __pyx_k_list_account_orders[] = "list_account_orders";
static const char __pyx_k_parse_exchange_info[] = "parse_exchange_info";
static const char __pyx_k_schedule_async_call[] = "schedule_async_call";
static const char __pyx_k_status_polling_loop[] = "_status_polling_loop";
static const char __pyx_k_submit_market_order[] = "submit_market_order";
static const char __pyx_k_zero_ex_order_utils[] = "zero_ex.order_utils";
static const char __pyx_k_BuyOrderCreatedEvent[] = "BuyOrderCreatedEvent";
static const char __pyx_k_The_limit_sell_order[] = "The limit sell order ";
static const char __pyx_k_The_market_buy_order[] = "The market buy order ";
static const char __pyx_k_markets_include_base[] = "/markets?include=base";
static const char __pyx_k_quote_asset_amount_2[] = "quote_asset_amount";
static const char __pyx_k_update_trading_rules[] = "_update_trading_rules";
static const char __pyx_k_Invalid_side_Aborting[] = "Invalid side. Aborting.";
static const char __pyx_k_SellOrderCreatedEvent[] = "SellOrderCreatedEvent";
static const char __pyx_k_The_market_sell_order[] = "The market sell order ";
static const char __pyx_k_UPDATE_RULES_INTERVAL[] = "UPDATE_RULES_INTERVAL";
static const char __pyx_k_getTransactionReceipt[] = "getTransactionReceipt";
static const char __pyx_k_get_zero_ex_signature[] = "get_zero_ex_signature";
static const char __pyx_k_BuyOrderCompletedEvent[] = "BuyOrderCompletedEvent";
static const char __pyx_k_Check_transaction_hash[] = ". Check transaction hash ";
static const char __pyx_k_Failed_to_cancel_order[] = "Failed to cancel order ";
static const char __pyx_k_jsdict_order_to_struct[] = "jsdict_order_to_struct";
static const char __pyx_k_wallet_spender_address[] = "wallet_spender_address";
static const char __pyx_k_wings_zero_ex_exchange[] = "wings.zero_ex_exchange";
static const char __pyx_k_SellOrderCompletedEvent[] = "SellOrderCompletedEvent";
static const char __pyx_k_generate_order_hash_hex[] = "generate_order_hash_hex";
static const char __pyx_k_Error_fetching_data_from[] = "Error fetching data from ";
static const char __pyx_k_Error_parsing_the_symbol[] = "Error parsing the symbol ";
static const char __pyx_k_No_order_book_exists_for[] = "No order book exists for '";
static const char __pyx_k_Server_Error_Bad_Gateway[] = " - Server Error: Bad Gateway.";
static const char __pyx_k_approval_tx_polling_loop[] = "_approval_tx_polling_loop";
static const char __pyx_k_pyx_unpickle_TradingRule[] = "__pyx_unpickle_TradingRule";
static const char __pyx_k_remainingBaseTokenAmount[] = "remainingBaseTokenAmount";
static const char __pyx_k_wings_market_market_base[] = "wings.market.market_base";
static const char __pyx_k_wings_order_book_tracker[] = "wings.order_book_tracker";
static const char __pyx_k_wings_wallet_web3_wallet[] = "wings.wallet.web3_wallet";
static const char __pyx_k_RADAR_RELAY_REST_ENDPOINT[] = "RADAR_RELAY_REST_ENDPOINT";
static const char __pyx_k_remainingQuoteTokenAmount[] = "remainingQuoteTokenAmount";
static const char __pyx_k_update_limit_order_status[] = "_update_limit_order_status";
static const char __pyx_k_wings_cancellation_result[] = "wings.cancellation_result";
static const char __pyx_k_RadarRelayMarket_get_order[] = "RadarRelayMarket.get_order";
static const char __pyx_k_RadarRelayOrderBookTracker[] = "RadarRelayOrderBookTracker";
static const char __pyx_k_pyx_unpickle_InFlightOrder[] = "__pyx_unpickle_InFlightOrder";
static const char __pyx_k_update_market_order_status[] = "_update_market_order_status";
static const char __pyx_k_wings_zero_ex_custom_utils[] = "wings.zero_ex_custom_utils";
static const char __pyx_k_RadarRelayMarket_cancel_all[] = "RadarRelayMarket.cancel_all";
static const char __pyx_k_ZERO_EX_MAINNET_ERC20_PROXY[] = "ZERO_EX_MAINNET_ERC20_PROXY";
static const char __pyx_k_https_api_radarrelay_com_v2[] = "https://api.radarrelay.com/v2";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_RadarRelayMarket_list_market[] = "RadarRelayMarket.list_market";
static const char __pyx_k_RadarRelayTransactionTracker[] = "RadarRelayTransactionTracker";
static const char __pyx_k_request_signed_market_orders[] = "request_signed_market_orders";
static const char __pyx_k_request_unsigned_limit_order[] = "request_unsigned_limit_order";
static const char __pyx_k_InFlightOrder_client_order_id[] = "InFlightOrder(client_order_id='";
static const char __pyx_k_MARKET_ORDER_FILLED_EVENT_TAG[] = "MARKET_ORDER_FILLED_EVENT_TAG";
static const char __pyx_k_MarketTransactionFailureEvent[] = "MarketTransactionFailureEvent";
static const char __pyx_k_RadarRelayMarket__api_request[] = "RadarRelayMarket._api_request";
static const char __pyx_k_RadarRelayMarket_cancel_order[] = "RadarRelayMarket.cancel_order";
static const char __pyx_k_UPDATE_MARKET_ORDERS_INTERVAL[] = "UPDATE_MARKET_ORDERS_INTERVAL";
static const char __pyx_k_MARKET_ORDER_EXPIRED_EVENT_TAG[] = "MARKET_ORDER_EXPIRED_EVENT_TAG";
static const char __pyx_k_OrderBookTrackerDataSourceType[] = "OrderBookTrackerDataSourceType";
static const char __pyx_k_RadarRelayMarket_execute_trade[] = "RadarRelayMarket.execute_trade";
static const char __pyx_k_check_and_fix_approval_amounts[] = "check_and_fix_approval_amounts";
static const char __pyx_k_has_expired_according_to_order[] = " has expired according to order status API.";
static const char __pyx_k_Error_submitting_trade_order_to[] = "Error submitting trade order to Radar Relay for ";
static const char __pyx_k_MARKET_RECEIVED_ASSET_EVENT_TAG[] = "MARKET_RECEIVED_ASSET_EVENT_TAG";
static const char __pyx_k_MARKET_SELL_ORDER_CREATED_EVENT[] = "MARKET_SELL_ORDER_CREATED_EVENT_TAG";
static const char __pyx_k_MARKET_WITHDRAW_ASSET_EVENT_TAG[] = "MARKET_WITHDRAW_ASSET_EVENT_TAG";
static const char __pyx_k_Order_not_found_in_tracked_orde[] = ". Order not found in tracked orders.";
static const char __pyx_k_RadarRelayMarket__update_market[] = "RadarRelayMarket._update_market_order_status";
static const char __pyx_k_RadarRelayMarket_coro_scheduler[] = "RadarRelayMarket.coro_scheduler";
static const char __pyx_k_RadarRelayMarket_request_signed[] = "RadarRelayMarket.request_signed_market_orders";
static const char __pyx_k_RadarRelayMarket_schedule_async[] = "RadarRelayMarket.schedule_async_call";
static const char __pyx_k_Unexpected_error_while_fetching[] = "Unexpected error while fetching account updates.";
static const char __pyx_k_Unrecognized_transaction_status[] = "Unrecognized transaction status for market order ";
static const char __pyx_k_has_cancelled_according_to_orde[] = " has cancelled according to order status API.";
static const char __pyx_k_has_completed_according_to_tran[] = " has completed according to transaction hash ";
static const char __pyx_k_has_failedaccording_to_order_st[] = " has failedaccording to order status API.";
static const char __pyx_k_is_greater_than_the_maximum_ord[] = " is greater than the maximum order size ";
static const char __pyx_k_is_lower_than_the_minimum_order[] = " is lower than the minimum order size  ";
static const char __pyx_k_must_be_greater_than_current_ti[] = " must be greater than current time ";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_wings_market_radar_relay_market[] = "wings.market.radar_relay_market";
static const char __pyx_k_wings_tracker_radar_relay_order[] = "wings.tracker.radar_relay_order_book_tracker";
static const char __pyx_k_0x2240Dab907db71e64d3E0dbA4800c8[] = "0x2240Dab907db71e64d3E0dbA4800c83B5C502d4E";
static const char __pyx_k_0x4F833a24e1f95D70F028921e27040C[] = "0x4F833a24e1f95D70F028921e27040Ca56E09AB0b";
static const char __pyx_k_Error_fetching_status_update_for[] = "Error fetching status update for the order ";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Incompatible_checksums_s_vs_0x12[] = "Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x46[] = "Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))";
static const char __pyx_k_Limit_orders_require_a_price_Abo[] = "Limit orders require a price. Aborting.";
static const char __pyx_k_Limit_orders_require_an_expirati[] = "Limit orders require an expiration timestamp 'expiration_ts'. Aborting.";
static const char __pyx_k_MARKET_BUY_ORDER_COMPLETED_EVENT[] = "MARKET_BUY_ORDER_COMPLETED_EVENT_TAG";
static const char __pyx_k_MARKET_BUY_ORDER_CREATED_EVENT_T[] = "MARKET_BUY_ORDER_CREATED_EVENT_TAG";
static const char __pyx_k_MARKET_ORDER_CANCELLED_EVENT_TAG[] = "MARKET_ORDER_CANCELLED_EVENT_TAG";
static const char __pyx_k_MARKET_SELL_ORDER_COMPLETED_EVEN[] = "MARKET_SELL_ORDER_COMPLETED_EVENT_TAG";
static const char __pyx_k_MARKET_TRANSACTION_FAILURE_EVENT[] = "MARKET_TRANSACTION_FAILURE_EVENT_TAG";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_RadarRelayMarket__approval_tx_po[] = "RadarRelayMarket._approval_tx_polling_loop";
static const char __pyx_k_RadarRelayMarket__status_polling[] = "RadarRelayMarket._status_polling_loop";
static const char __pyx_k_RadarRelayMarket__update_limit_o[] = "RadarRelayMarket._update_limit_order_status";
static const char __pyx_k_RadarRelayMarket__update_trading[] = "RadarRelayMarket._update_trading_rules";
static const char __pyx_k_RadarRelayMarket_list_account_or[] = "RadarRelayMarket.list_account_orders";
static const char __pyx_k_RadarRelayMarket_request_unsigne[] = "RadarRelayMarket.request_unsigned_limit_order";
static const char __pyx_k_RadarRelayMarket_submit_limit_or[] = "RadarRelayMarket.submit_limit_order";
static const char __pyx_k_RadarRelayMarket_submit_market_o[] = "RadarRelayMarket.submit_market_order";
static const char __pyx_k_UPDATE_OPEN_LIMIT_ORDERS_INTERVA[] = "UPDATE_OPEN_LIMIT_ORDERS_INTERVAL";
static const char __pyx_k_Unexpected_error_cancelling_orde[] = "Unexpected error cancelling orders.";
static const char __pyx_k_ZERO_EX_MAINNET_EXCHANGE_ADDRESS[] = "ZERO_EX_MAINNET_EXCHANGE_ADDRESS";
static const char __pyx_k_has_completed_according_to_order[] = "has completed according to order status API.";
static const char __pyx_k_has_failed_according_to_transact[] = "has failed according to transaction hash ";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_order_book_tracker_data_source_t[] = "order_book_tracker_data_source_type";
static const char __pyx_k_self__events_cannot_be_converted[] = "self._events cannot be converted to a Python object for pickling";
static const char __pyx_k_Unexpected_error_while_fetching_2[] = "Unexpected error while fetching approval transactions.";
static const char __pyx_k_wings_market_radar_relay_market_2[] = "wings/market/radar_relay_market.pyx";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_kp_u_0x2240Dab907db71e64d3E0dbA4800c8;
static PyObject *__pyx_kp_u_0x4F833a24e1f95D70F028921e27040C;
static PyObject *__pyx_kp_u_1e;
static PyObject *__pyx_kp_u_1e_2;
static PyObject *__pyx_n_s_API_CALL_TIMEOUT;
static PyObject *__pyx_n_s_BUY;
static PyObject *__pyx_n_u_BUY;
static PyObject *__pyx_n_s_BuyOrderCompleted;
static PyObject *__pyx_n_s_BuyOrderCompletedEvent;
static PyObject *__pyx_n_s_BuyOrderCreated;
static PyObject *__pyx_n_s_BuyOrderCreatedEvent;
static PyObject *__pyx_kp_u_Buy_order_amount;
static PyObject *__pyx_n_u_CANCELED;
static PyObject *__pyx_n_u_CANCELLED;
static PyObject *__pyx_n_s_CancellationResult;
static PyObject *__pyx_n_s_CancelledError;
static PyObject *__pyx_kp_u_Check_transaction_hash;
static PyObject *__pyx_n_s_ClientSession;
static PyObject *__pyx_n_s_Decimal;
static PyObject *__pyx_n_s_Dict;
static PyObject *__pyx_n_s_EXCHANGE_API;
static PyObject *__pyx_n_u_EXPIRED;
static PyObject *__pyx_kp_u_Error_fetching_data_from;
static PyObject *__pyx_kp_u_Error_fetching_status_update_for;
static PyObject *__pyx_kp_u_Error_parsing_the_symbol;
static PyObject *__pyx_kp_u_Error_submitting_trade_order_to;
static PyObject *__pyx_n_s_Event;
static PyObject *__pyx_kp_u_Failed_to_cancel_order;
static PyObject *__pyx_n_u_False;
static PyObject *__pyx_kp_u_Filled;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_HTTPProvider;
static PyObject *__pyx_kp_u_HTTP_status_is;
static PyObject *__pyx_n_s_IOError;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_n_s_InFlightOrder;
static PyObject *__pyx_kp_u_InFlightOrder_client_order_id;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x12;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x46;
static PyObject *__pyx_kp_u_Invalid_side_Aborting;
static PyObject *__pyx_n_s_LIMIT;
static PyObject *__pyx_n_s_LimitOrder;
static PyObject *__pyx_kp_u_Limit_orders_require_a_price_Abo;
static PyObject *__pyx_kp_u_Limit_orders_require_an_expirati;
static PyObject *__pyx_n_s_List;
static PyObject *__pyx_n_s_MARKET;
static PyObject *__pyx_n_s_MARKET_BUY_ORDER_COMPLETED_EVENT;
static PyObject *__pyx_n_s_MARKET_BUY_ORDER_CREATED_EVENT_T;
static PyObject *__pyx_n_s_MARKET_ORDER_CANCELLED_EVENT_TAG;
static PyObject *__pyx_n_s_MARKET_ORDER_EXPIRED_EVENT_TAG;
static PyObject *__pyx_n_s_MARKET_ORDER_FILLED_EVENT_TAG;
static PyObject *__pyx_n_s_MARKET_RECEIVED_ASSET_EVENT_TAG;
static PyObject *__pyx_n_s_MARKET_SELL_ORDER_COMPLETED_EVEN;
static PyObject *__pyx_n_s_MARKET_SELL_ORDER_CREATED_EVENT;
static PyObject *__pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT;
static PyObject *__pyx_n_s_MARKET_WITHDRAW_ASSET_EVENT_TAG;
static PyObject *__pyx_n_s_MarketEvent;
static PyObject *__pyx_n_s_MarketTransactionFailureEvent;
static PyObject *__pyx_n_s_NaN;
static PyObject *__pyx_kp_u_No_order_book_exists_for;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_kp_u_None;
static PyObject *__pyx_n_u_OPEN;
static PyObject *__pyx_n_s_ORDER_EXPIRY_TIME;
static PyObject *__pyx_n_s_Optional;
static PyObject *__pyx_n_s_Order;
static PyObject *__pyx_n_s_OrderBookTrackerDataSourceType;
static PyObject *__pyx_n_s_OrderCancelled;
static PyObject *__pyx_n_s_OrderCancelledEvent;
static PyObject *__pyx_n_s_OrderExpired;
static PyObject *__pyx_n_s_OrderExpiredEvent;
static PyObject *__pyx_n_s_OrderFilled;
static PyObject *__pyx_n_s_OrderFilledEvent;
static PyObject *__pyx_n_s_OrderType;
static PyObject *__pyx_kp_u_Order_not_found_in_tracked_orde;
static PyObject *__pyx_n_s_PickleError;
static PyObject *__pyx_n_s_Queue;
static PyObject *__pyx_n_s_RADAR_RELAY_REST_ENDPOINT;
static PyObject *__pyx_n_s_RadarRelayMarket;
static PyObject *__pyx_n_s_RadarRelayMarket__api_request;
static PyObject *__pyx_n_s_RadarRelayMarket__approval_tx_po;
static PyObject *__pyx_n_s_RadarRelayMarket__status_polling;
static PyObject *__pyx_n_s_RadarRelayMarket__update_limit_o;
static PyObject *__pyx_n_s_RadarRelayMarket__update_market;
static PyObject *__pyx_n_s_RadarRelayMarket__update_trading;
static PyObject *__pyx_n_s_RadarRelayMarket_cancel_all;
static PyObject *__pyx_n_s_RadarRelayMarket_cancel_order;
static PyObject *__pyx_n_s_RadarRelayMarket_coro_scheduler;
static PyObject *__pyx_n_s_RadarRelayMarket_execute_trade;
static PyObject *__pyx_n_s_RadarRelayMarket_get_order;
static PyObject *__pyx_n_s_RadarRelayMarket_list_account_or;
static PyObject *__pyx_n_s_RadarRelayMarket_list_market;
static PyObject *__pyx_n_s_RadarRelayMarket_request_signed;
static PyObject *__pyx_n_s_RadarRelayMarket_request_unsigne;
static PyObject *__pyx_n_s_RadarRelayMarket_schedule_async;
static PyObject *__pyx_n_s_RadarRelayMarket_submit_limit_or;
static PyObject *__pyx_n_s_RadarRelayMarket_submit_market_o;
static PyObject *__pyx_n_s_RadarRelayOrderBookTracker;
static PyObject *__pyx_n_s_RadarRelayTransactionTracker;
static PyObject *__pyx_n_s_ReceivedAsset;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_SELL;
static PyObject *__pyx_n_u_SELL;
static PyObject *__pyx_n_s_SellOrderCompleted;
static PyObject *__pyx_n_s_SellOrderCompletedEvent;
static PyObject *__pyx_n_s_SellOrderCreated;
static PyObject *__pyx_n_s_SellOrderCreatedEvent;
static PyObject *__pyx_kp_u_Server_Error_Bad_Gateway;
static PyObject *__pyx_kp_u_Skipping;
static PyObject *__pyx_kp_u_The_limit_buy_order;
static PyObject *__pyx_kp_u_The_limit_order;
static PyObject *__pyx_kp_u_The_limit_sell_order;
static PyObject *__pyx_kp_u_The_market_buy_order;
static PyObject *__pyx_kp_u_The_market_order;
static PyObject *__pyx_kp_u_The_market_sell_order;
static PyObject *__pyx_n_s_TradeType;
static PyObject *__pyx_n_s_TradingRule;
static PyObject *__pyx_kp_u_TradingRule_symbol;
static PyObject *__pyx_n_s_TransactionFailure;
static PyObject *__pyx_n_u_True;
static PyObject *__pyx_n_s_Tuple;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_u_UNFUNDED;
static PyObject *__pyx_n_s_UPDATE_MARKET_ORDERS_INTERVAL;
static PyObject *__pyx_n_s_UPDATE_OPEN_LIMIT_ORDERS_INTERVA;
static PyObject *__pyx_n_s_UPDATE_RULES_INTERVAL;
static PyObject *__pyx_kp_u_Unexpected_error_cancelling_orde;
static PyObject *__pyx_kp_u_Unexpected_error_while_fetching;
static PyObject *__pyx_kp_u_Unexpected_error_while_fetching_2;
static PyObject *__pyx_kp_u_Unrecognized_transaction_status;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_Web3;
static PyObject *__pyx_n_s_Web3Wallet;
static PyObject *__pyx_n_s_WithdrawAsset;
static PyObject *__pyx_n_s_ZERO_EX_MAINNET_ERC20_PROXY;
static PyObject *__pyx_n_s_ZERO_EX_MAINNET_EXCHANGE_ADDRESS;
static PyObject *__pyx_n_s_ZeroExExchange;
static PyObject *__pyx_kp_u__12;
static PyObject *__pyx_kp_u__15;
static PyObject *__pyx_kp_u__19;
static PyObject *__pyx_kp_u__27;
static PyObject *__pyx_kp_u__3;
static PyObject *__pyx_kp_u__4;
static PyObject *__pyx_kp_u__8;
static PyObject *__pyx_kp_u__9;
static PyObject *__pyx_kp_u_accounts;
static PyObject *__pyx_n_s_address;
static PyObject *__pyx_n_s_aenter;
static PyObject *__pyx_n_s_aexit;
static PyObject *__pyx_n_s_aiohttp;
static PyObject *__pyx_n_s_amount;
static PyObject *__pyx_kp_u_amount_2;
static PyObject *__pyx_n_s_amount_decimals;
static PyObject *__pyx_kp_u_amount_decimals_2;
static PyObject *__pyx_n_s_any;
static PyObject *__pyx_n_s_api_request;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_approval_tx_polling_loop;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_async_timeout;
static PyObject *__pyx_n_s_asyncio;
static PyObject *__pyx_n_s_asyncio_coroutines;
static PyObject *__pyx_n_s_asyncio_tasks;
static PyObject *__pyx_kp_u_available_amount;
static PyObject *__pyx_n_s_available_amount_2;
static PyObject *__pyx_n_u_averagePrice;
static PyObject *__pyx_n_s_await;
static PyObject *__pyx_n_u_baseTokenDecimals;
static PyObject *__pyx_n_s_base_asset;
static PyObject *__pyx_kp_u_buy;
static PyObject *__pyx_n_s_c_did_timeout_tx;
static PyObject *__pyx_n_s_cancel_all;
static PyObject *__pyx_n_s_cancel_order;
static PyObject *__pyx_n_s_cancel_orders_up_to;
static PyObject *__pyx_n_s_ceil;
static PyObject *__pyx_n_s_check_and_fix_approval_amounts;
static PyObject *__pyx_n_s_client_order_id;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_collections;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_s_coro;
static PyObject *__pyx_n_s_coro_queue;
static PyObject *__pyx_n_s_coro_scheduler;
static PyObject *__pyx_n_s_create_future;
static PyObject *__pyx_n_s_current_backend;
static PyObject *__pyx_n_s_data;
static PyObject *__pyx_n_s_data_source_type;
static PyObject *__pyx_n_s_decimal;
static PyObject *__pyx_n_s_deepcopy;
static PyObject *__pyx_n_s_deque;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_ensure_future;
static PyObject *__pyx_n_s_error;
static PyObject *__pyx_n_s_eth;
static PyObject *__pyx_n_s_exc_info;
static PyObject *__pyx_n_s_exchange_address;
static PyObject *__pyx_n_s_exchange_order_id;
static PyObject *__pyx_kp_u_exchange_order_id_2;
static PyObject *__pyx_n_s_execute_trade;
static PyObject *__pyx_kp_u_executed_amount;
static PyObject *__pyx_n_s_executed_amount_2;
static PyObject *__pyx_n_u_expiration;
static PyObject *__pyx_kp_u_expiration_time;
static PyObject *__pyx_n_u_expiration_ts;
static PyObject *__pyx_n_s_expires;
static PyObject *__pyx_n_s_fix_signature;
static PyObject *__pyx_kp_u_for_more_details;
static PyObject *__pyx_n_s_fut;
static PyObject *__pyx_kp_u_gas_fee_amount;
static PyObject *__pyx_n_s_gas_fee_amount_2;
static PyObject *__pyx_n_s_gather;
static PyObject *__pyx_n_s_generate_order_hash_hex;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_u_get;
static PyObject *__pyx_n_s_getLogger;
static PyObject *__pyx_n_s_getTransactionReceipt;
static PyObject *__pyx_n_s_get_all_balances;
static PyObject *__pyx_n_s_get_event_loop;
static PyObject *__pyx_n_s_get_order;
static PyObject *__pyx_n_s_get_order_hash_hex;
static PyObject *__pyx_n_s_get_tx_hash_receipt;
static PyObject *__pyx_n_s_get_zero_ex_signature;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_kp_u_has_cancelled_according_to_orde;
static PyObject *__pyx_kp_u_has_completed_according_to_order;
static PyObject *__pyx_kp_u_has_completed_according_to_tran;
static PyObject *__pyx_kp_u_has_expired_according_to_order;
static PyObject *__pyx_kp_u_has_failed_according_to_transact;
static PyObject *__pyx_kp_u_has_failedaccording_to_order_st;
static PyObject *__pyx_n_s_headers;
static PyObject *__pyx_n_s_hexstr;
static PyObject *__pyx_n_s_http_method;
static PyObject *__pyx_kp_u_https_api_radarrelay_com_v2;
static PyObject *__pyx_n_u_id;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_info;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_inspect;
static PyObject *__pyx_n_s_interval;
static PyObject *__pyx_n_s_is_buy;
static PyObject *__pyx_kp_u_is_buy_2;
static PyObject *__pyx_n_s_is_cancelled;
static PyObject *__pyx_n_s_is_done;
static PyObject *__pyx_n_s_is_expired;
static PyObject *__pyx_n_s_is_failure;
static PyObject *__pyx_kp_u_is_greater_than_the_maximum_ord;
static PyObject *__pyx_kp_u_is_lower_than_the_minimum_order;
static PyObject *__pyx_n_s_is_set;
static PyObject *__pyx_n_s_jsdict_order_to_struct;
static PyObject *__pyx_n_s_json;
static PyObject *__pyx_kp_u_last_state;
static PyObject *__pyx_n_s_last_state_2;
static PyObject *__pyx_n_s_list_account_orders;
static PyObject *__pyx_n_s_list_market;
static PyObject *__pyx_n_s_log10;
static PyObject *__pyx_n_s_logger;
static PyObject *__pyx_n_s_logging;
static PyObject *__pyx_n_s_lower;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_u_makerAddress;
static PyObject *__pyx_n_s_market_buy_orders;
static PyObject *__pyx_n_s_market_sell_orders;
static PyObject *__pyx_kp_u_markets;
static PyObject *__pyx_kp_u_markets_include_base;
static PyObject *__pyx_n_s_math;
static PyObject *__pyx_n_u_maxOrderSize;
static PyObject *__pyx_n_s_max_order_size;
static PyObject *__pyx_kp_u_max_order_size_2;
static PyObject *__pyx_n_u_minOrderSize;
static PyObject *__pyx_n_s_min_order_size;
static PyObject *__pyx_kp_u_min_order_size_2;
static PyObject *__pyx_kp_u_must_be_greater_than_current_ti;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_kp_u_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_u_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_kp_u_of_the_limit_order;
static PyObject *__pyx_n_s_order;
static PyObject *__pyx_n_s_order_book_tracker_data_source_t;
static PyObject *__pyx_n_s_order_books;
static PyObject *__pyx_n_s_order_id;
static PyObject *__pyx_kp_u_order_limit;
static PyObject *__pyx_kp_u_order_market;
static PyObject *__pyx_n_s_order_side;
static PyObject *__pyx_n_s_order_type;
static PyObject *__pyx_kp_u_order_type_2;
static PyObject *__pyx_n_u_orders;
static PyObject *__pyx_kp_u_orders_2;
static PyObject *__pyx_kp_u_orders_3;
static PyObject *__pyx_kp_u_out_of;
static PyObject *__pyx_n_s_owner;
static PyObject *__pyx_n_s_parse_exchange_info;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_poll_interval;
static PyObject *__pyx_n_s_popleft;
static PyObject *__pyx_n_u_post;
static PyObject *__pyx_n_s_price;
static PyObject *__pyx_n_u_price;
static PyObject *__pyx_kp_u_price_2;
static PyObject *__pyx_n_s_price_decimals;
static PyObject *__pyx_kp_u_price_decimals_2;
static PyObject *__pyx_n_s_price_precision;
static PyObject *__pyx_kp_u_price_precision_2;
static PyObject *__pyx_n_s_put_nowait;
static PyObject *__pyx_n_s_pyx_PickleError;
static PyObject *__pyx_n_s_pyx_checksum;
static PyObject *__pyx_n_s_pyx_result;
static PyObject *__pyx_n_s_pyx_state;
static PyObject *__pyx_n_s_pyx_type;
static PyObject *__pyx_n_s_pyx_unpickle_InFlightOrder;
static PyObject *__pyx_n_s_pyx_unpickle_TradingRule;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_u_quantity;
static PyObject *__pyx_n_u_quoteIncrement;
static PyObject *__pyx_n_u_quoteTokenDecimals;
static PyObject *__pyx_n_s_quote_asset;
static PyObject *__pyx_kp_u_quote_asset_amount;
static PyObject *__pyx_n_s_quote_asset_amount_2;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_u_remainingBaseTokenAmount;
static PyObject *__pyx_n_u_remainingQuoteTokenAmount;
static PyObject *__pyx_n_s_remove;
static PyObject *__pyx_n_s_request;
static PyObject *__pyx_n_s_request_signed_market_orders;
static PyObject *__pyx_n_s_request_unsigned_limit_order;
static PyObject *__pyx_n_s_return_exceptions;
static PyObject *__pyx_n_s_rrm_logger;
static PyObject *__pyx_n_s_s_decimal_0;
static PyObject *__pyx_n_u_salt;
static PyObject *__pyx_n_s_schedule_async_call;
static PyObject *__pyx_kp_s_self__events_cannot_be_converted;
static PyObject *__pyx_kp_u_sell;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_set;
static PyObject *__pyx_n_s_set_exception;
static PyObject *__pyx_n_s_set_result;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_side;
static PyObject *__pyx_n_s_sign_hash;
static PyObject *__pyx_n_u_signature;
static PyObject *__pyx_n_s_sleep;
static PyObject *__pyx_n_s_spender;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_start;
static PyObject *__pyx_n_u_state;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_status;
static PyObject *__pyx_n_u_status;
static PyObject *__pyx_n_s_status_polling_loop;
static PyObject *__pyx_kp_s_stringsource;
static PyObject *__pyx_n_s_submit_limit_order;
static PyObject *__pyx_n_s_submit_market_order;
static PyObject *__pyx_n_s_super;
static PyObject *__pyx_n_s_symbol;
static PyObject *__pyx_kp_u_symbol_2;
static PyObject *__pyx_n_s_symbols;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_text;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_time;
static PyObject *__pyx_n_s_timeout;
static PyObject *__pyx_n_s_toHex;
static PyObject *__pyx_n_s_trading_rules;
static PyObject *__pyx_n_s_tx_hash;
static PyObject *__pyx_kp_u_tx_hash_2;
static PyObject *__pyx_n_u_type;
static PyObject *__pyx_n_s_typing;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_unwrap_eth;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_update_balances;
static PyObject *__pyx_n_s_update_limit_order_status;
static PyObject *__pyx_n_s_update_market_order_status;
static PyObject *__pyx_n_s_update_trading_rules;
static PyObject *__pyx_n_s_url;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_wait;
static PyObject *__pyx_n_s_wallet;
static PyObject *__pyx_n_s_wallet_spender_address;
static PyObject *__pyx_n_s_web3;
static PyObject *__pyx_n_s_web3_url;
static PyObject *__pyx_n_s_wings_cancellation_result;
static PyObject *__pyx_n_s_wings_events;
static PyObject *__pyx_n_s_wings_limit_order;
static PyObject *__pyx_n_s_wings_market_market_base;
static PyObject *__pyx_n_s_wings_market_radar_relay_market;
static PyObject *__pyx_kp_s_wings_market_radar_relay_market_2;
static PyObject *__pyx_n_s_wings_order_book_tracker;
static PyObject *__pyx_n_s_wings_tracker_radar_relay_order;
static PyObject *__pyx_n_s_wings_wallet_web3_wallet;
static PyObject *__pyx_n_s_wings_zero_ex_custom_utils;
static PyObject *__pyx_n_s_wings_zero_ex_exchange;
static PyObject *__pyx_n_s_wrap_eth;
static PyObject *__pyx_n_s_zero_ex_order;
static PyObject *__pyx_kp_u_zero_ex_order_2;
static PyObject *__pyx_n_s_zero_ex_order_utils;
static PyObject *__pyx_n_s_zip;
static int __pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker___init__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self, struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_owner); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_parse_exchange_info(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_markets); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_2__init__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_min_order_size, double __pyx_v_max_order_size, PyObject *__pyx_v_price_precision, PyObject *__pyx_v_price_decimals, PyObject *__pyx_v_amount_decimals); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_4__repr__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15price_precision___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6__reduce_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_8__setstate_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder___init__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_client_order_id, PyObject *__pyx_v_exchange_order_id, PyObject *__pyx_v_tx_hash, PyObject *__pyx_v_symbol, PyObject *__pyx_v_is_buy, PyObject *__pyx_v_order_type, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, PyObject *__pyx_v_zero_ex_order); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_2__repr__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7is_done___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_12is_cancelled___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10is_expired___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10is_failure___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10base_asset___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_11quote_asset___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_4__reduce_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6__setstate_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_logger(CYTHON_UNUSED PyTypeObject *__pyx_v_cls); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_2__init__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_wallet, PyObject *__pyx_v_web3_url, double __pyx_v_poll_interval, PyObject *__pyx_v_order_book_tracker_data_source_type, PyObject *__pyx_v_wallet_spender_address, PyObject *__pyx_v_symbols); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_5ready___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_11order_books___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_6wallet___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_13trading_rules___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_22in_flight_limit_orders___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_23in_flight_market_orders___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_12limit_orders___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_4_status_polling_loop(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_7_update_balances(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_9list_market(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_12_update_trading_rules(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_15_update_limit_order_status(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_18_update_market_order_status(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_21_approval_tx_polling_loop(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_24coro_scheduler(PyObject *__pyx_v_coro_queue, double __pyx_v_interval); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_27schedule_async_call(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_coro); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_30_api_request(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_http_method, PyObject *__pyx_v_url, PyObject *__pyx_v_data, PyObject *__pyx_v_headers); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_33request_signed_market_orders(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_36request_unsigned_limit_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, PyObject *__pyx_v_expires); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_39get_order_hash_hex(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_unsigned_order); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_41get_zero_ex_signature(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_hash_hex); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_43submit_market_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_46submit_limit_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, PyObject *__pyx_v_expires); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_49cancel_all(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_timeout_seconds); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_52execute_trade(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id, PyObject *__pyx_v_order_type, PyObject *__pyx_v_order_side, PyObject *__pyx_v_symbol, double __pyx_v_amount, double __pyx_v_price, PyObject *__pyx_v_expires); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_55cancel_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_client_order_id); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_58get_all_balances(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_60get_balance(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_currency); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_62get_price(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_is_buy); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_64get_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_hash); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_67get_tx_hash_receipt(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_tx_hash); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_69list_account_orders(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_72wrap_eth(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_amount); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_74unwrap_eth(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_amount); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_76__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_78__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_2__pyx_unpickle_InFlightOrder(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_RadarRelayMarket(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_TradingRule(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_InFlightOrder(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, &__pyx_n_s_get, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_values = {0, &__pyx_n_s_values, 0, 0, 0};
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_1e6;
static PyObject *__pyx_float_10_0;
static PyObject *__pyx_float_60_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_200;
static PyObject *__pyx_int_201;
static PyObject *__pyx_int_502;
static PyObject *__pyx_int_19757352;
static PyObject *__pyx_int_73811978;
static PyObject *__pyx_k__5;
static PyObject *__pyx_k__6;
static PyObject *__pyx_k__20;
static double __pyx_k__21;
static PyObject *__pyx_k__22;
static PyObject *__pyx_k__23;
static double __pyx_k__24;
static PyObject *__pyx_k__25;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_codeobj__11;
static PyObject *__pyx_codeobj__40;
static PyObject *__pyx_codeobj__42;
/* Late includes */

/* "wings/market/radar_relay_market.pyx":62
 *         RadarRelayMarket _owner
 * 
 *     def __init__(self, owner: RadarRelayMarket):             # <<<<<<<<<<<<<<
 *         super().__init__()
 *         self._owner = owner
 */

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_owner = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_owner,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_owner)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 62, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_owner = ((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 62, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayTransactionTracker.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_owner), __pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket, 1, "owner", 0))) __PYX_ERR(0, 62, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker___init__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)__pyx_v_self), __pyx_v_owner);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker___init__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self, struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_owner) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "wings/market/radar_relay_market.pyx":63
 * 
 *     def __init__(self, owner: RadarRelayMarket):
 *         super().__init__()             # <<<<<<<<<<<<<<
 *         self._owner = owner
 * 
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":64
 *     def __init__(self, owner: RadarRelayMarket):
 *         super().__init__()
 *         self._owner = owner             # <<<<<<<<<<<<<<
 * 
 *     cdef c_did_timeout_tx(self, str tx_id):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_owner));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_owner));
  __Pyx_GOTREF(__pyx_v_self->_owner);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_owner));
  __pyx_v_self->_owner = __pyx_v_owner;

  /* "wings/market/radar_relay_market.pyx":62
 *         RadarRelayMarket _owner
 * 
 *     def __init__(self, owner: RadarRelayMarket):             # <<<<<<<<<<<<<<
 *         super().__init__()
 *         self._owner = owner
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayTransactionTracker.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":66
 *         self._owner = owner
 * 
 *     cdef c_did_timeout_tx(self, str tx_id):             # <<<<<<<<<<<<<<
 *         TransactionTracker.c_did_timeout_tx(self, tx_id)
 *         self._owner.c_did_timeout_tx(tx_id)
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_c_did_timeout_tx(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self, PyObject *__pyx_v_tx_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("c_did_timeout_tx", 0);

  /* "wings/market/radar_relay_market.pyx":67
 * 
 *     cdef c_did_timeout_tx(self, str tx_id):
 *         TransactionTracker.c_did_timeout_tx(self, tx_id)             # <<<<<<<<<<<<<<
 *         self._owner.c_did_timeout_tx(tx_id)
 * 
 */
  __pyx_t_1 = __pyx_vtabptr_5wings_19transaction_tracker_TransactionTracker->c_did_timeout_tx(((struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *)__pyx_v_self), __pyx_v_tx_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":68
 *     cdef c_did_timeout_tx(self, str tx_id):
 *         TransactionTracker.c_did_timeout_tx(self, tx_id)
 *         self._owner.c_did_timeout_tx(tx_id)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_owner), __pyx_n_s_c_did_timeout_tx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_tx_id) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_tx_id);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":66
 *         self._owner = owner
 * 
 *     cdef c_did_timeout_tx(self, str tx_id):             # <<<<<<<<<<<<<<
 *         TransactionTracker.c_did_timeout_tx(self, tx_id)
 *         self._owner.c_did_timeout_tx(tx_id)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayTransactionTracker.c_did_timeout_tx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_2__reduce_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayTransactionTracker.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_4__setstate_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayTransactionTracker.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":81
 * 
 *     @classmethod
 *     def parse_exchange_info(cls, markets: List[Dict[str, any]]) -> List[TradingRule]:             # <<<<<<<<<<<<<<
 *         cdef:
 *             list retval = []
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_1parse_exchange_info(PyObject *__pyx_v_cls, PyObject *__pyx_v_markets); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_1parse_exchange_info(PyObject *__pyx_v_cls, PyObject *__pyx_v_markets) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse_exchange_info (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_parse_exchange_info(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_markets));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_parse_exchange_info(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_markets) {
  PyObject *__pyx_v_retval = 0;
  PyObject *__pyx_v_market = NULL;
  PyObject *__pyx_v_symbol = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  int __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_UCS4 __pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  __Pyx_RefNannySetupContext("parse_exchange_info", 0);

  /* "wings/market/radar_relay_market.pyx":83
 *     def parse_exchange_info(cls, markets: List[Dict[str, any]]) -> List[TradingRule]:
 *         cdef:
 *             list retval = []             # <<<<<<<<<<<<<<
 *         for market in markets:
 *             try:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_retval = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":84
 *         cdef:
 *             list retval = []
 *         for market in markets:             # <<<<<<<<<<<<<<
 *             try:
 *                 symbol = market["id"]
 */
  if (likely(PyList_CheckExact(__pyx_v_markets)) || PyTuple_CheckExact(__pyx_v_markets)) {
    __pyx_t_1 = __pyx_v_markets; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_markets); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 84, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 84, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 84, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 84, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_market, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "wings/market/radar_relay_market.pyx":85
 *             list retval = []
 *         for market in markets:
 *             try:             # <<<<<<<<<<<<<<
 *                 symbol = market["id"]
 *                 retval.append(TradingRule(symbol,
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      /*try:*/ {

        /* "wings/market/radar_relay_market.pyx":86
 *         for market in markets:
 *             try:
 *                 symbol = market["id"]             # <<<<<<<<<<<<<<
 *                 retval.append(TradingRule(symbol,
 *                                           float(market["minOrderSize"]),
 */
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_market, __pyx_n_u_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 86, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_XDECREF_SET(__pyx_v_symbol, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "wings/market/radar_relay_market.pyx":88
 *                 symbol = market["id"]
 *                 retval.append(TradingRule(symbol,
 *                                           float(market["minOrderSize"]),             # <<<<<<<<<<<<<<
 *                                           float(market["maxOrderSize"]),
 *                                           market["quoteIncrement"],
 */
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_market, __pyx_n_u_minOrderSize); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 88, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = __Pyx_PyNumber_Float(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 88, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "wings/market/radar_relay_market.pyx":89
 *                 retval.append(TradingRule(symbol,
 *                                           float(market["minOrderSize"]),
 *                                           float(market["maxOrderSize"]),             # <<<<<<<<<<<<<<
 *                                           market["quoteIncrement"],
 *                                           market["quoteTokenDecimals"],
 */
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_market, __pyx_n_u_maxOrderSize); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 89, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = __Pyx_PyNumber_Float(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 89, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "wings/market/radar_relay_market.pyx":90
 *                                           float(market["minOrderSize"]),
 *                                           float(market["maxOrderSize"]),
 *                                           market["quoteIncrement"],             # <<<<<<<<<<<<<<
 *                                           market["quoteTokenDecimals"],
 *                                           market["baseTokenDecimals"]))
 */
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_market, __pyx_n_u_quoteIncrement); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 90, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_4);

        /* "wings/market/radar_relay_market.pyx":91
 *                                           float(market["maxOrderSize"]),
 *                                           market["quoteIncrement"],
 *                                           market["quoteTokenDecimals"],             # <<<<<<<<<<<<<<
 *                                           market["baseTokenDecimals"]))
 *             except Exception:
 */
        __pyx_t_10 = __Pyx_PyObject_Dict_GetItem(__pyx_v_market, __pyx_n_u_quoteTokenDecimals); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 91, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_10);

        /* "wings/market/radar_relay_market.pyx":92
 *                                           market["quoteIncrement"],
 *                                           market["quoteTokenDecimals"],
 *                                           market["baseTokenDecimals"]))             # <<<<<<<<<<<<<<
 *             except Exception:
 *                 RadarRelayMarket.logger().error(f"Error parsing the symbol {symbol}. Skipping.", exc_info=True)
 */
        __pyx_t_11 = __Pyx_PyObject_Dict_GetItem(__pyx_v_market, __pyx_n_u_baseTokenDecimals); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 92, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_11);

        /* "wings/market/radar_relay_market.pyx":87
 *             try:
 *                 symbol = market["id"]
 *                 retval.append(TradingRule(symbol,             # <<<<<<<<<<<<<<
 *                                           float(market["minOrderSize"]),
 *                                           float(market["maxOrderSize"]),
 */
        __pyx_t_12 = PyTuple_New(6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 87, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_INCREF(__pyx_v_symbol);
        __Pyx_GIVEREF(__pyx_v_symbol);
        PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_v_symbol);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_12, 4, __pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_12, 5, __pyx_t_11);
        __pyx_t_8 = 0;
        __pyx_t_9 = 0;
        __pyx_t_4 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule), __pyx_t_12, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 87, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_13 = __Pyx_PyList_Append(__pyx_v_retval, __pyx_t_11); if (unlikely(__pyx_t_13 == ((int)-1))) __PYX_ERR(0, 87, __pyx_L5_error)
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

        /* "wings/market/radar_relay_market.pyx":85
 *             list retval = []
 *         for market in markets:
 *             try:             # <<<<<<<<<<<<<<
 *                 symbol = market["id"]
 *                 retval.append(TradingRule(symbol,
 */
      }
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L12_try_end;
      __pyx_L5_error:;
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "wings/market/radar_relay_market.pyx":93
 *                                           market["quoteTokenDecimals"],
 *                                           market["baseTokenDecimals"]))
 *             except Exception:             # <<<<<<<<<<<<<<
 *                 RadarRelayMarket.logger().error(f"Error parsing the symbol {symbol}. Skipping.", exc_info=True)
 *         return retval
 */
      __pyx_t_14 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
      if (__pyx_t_14) {
        __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.parse_exchange_info", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_11, &__pyx_t_12, &__pyx_t_10) < 0) __PYX_ERR(0, 93, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GOTREF(__pyx_t_10);

        /* "wings/market/radar_relay_market.pyx":94
 *                                           market["baseTokenDecimals"]))
 *             except Exception:
 *                 RadarRelayMarket.logger().error(f"Error parsing the symbol {symbol}. Skipping.", exc_info=True)             # <<<<<<<<<<<<<<
 *         return retval
 * 
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket), __pyx_n_s_logger); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
          }
        }
        __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_error); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_15 = 0;
        __pyx_t_16 = 127;
        __Pyx_INCREF(__pyx_kp_u_Error_parsing_the_symbol);
        __pyx_t_15 += 25;
        __Pyx_GIVEREF(__pyx_kp_u_Error_parsing_the_symbol);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Error_parsing_the_symbol);
        if (unlikely(!__pyx_v_symbol)) { __Pyx_RaiseUnboundLocalError("symbol"); __PYX_ERR(0, 94, __pyx_L7_except_error) }
        __pyx_t_8 = __Pyx_PyObject_FormatSimple(__pyx_v_symbol, __pyx_empty_unicode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_16 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_16) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_16;
        __pyx_t_15 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
        __pyx_t_8 = 0;
        __Pyx_INCREF(__pyx_kp_u_Skipping);
        __pyx_t_15 += 11;
        __Pyx_GIVEREF(__pyx_kp_u_Skipping);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_Skipping);
        __pyx_t_8 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_15, __pyx_t_16); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8);
        __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_8);
        if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_exc_info, Py_True) < 0) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_4, __pyx_t_8); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 94, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L6_exception_handled;
      }
      goto __pyx_L7_except_error;
      __pyx_L7_except_error:;

      /* "wings/market/radar_relay_market.pyx":85
 *             list retval = []
 *         for market in markets:
 *             try:             # <<<<<<<<<<<<<<
 *                 symbol = market["id"]
 *                 retval.append(TradingRule(symbol,
 */
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
      goto __pyx_L1_error;
      __pyx_L6_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
      __pyx_L12_try_end:;
    }

    /* "wings/market/radar_relay_market.pyx":84
 *         cdef:
 *             list retval = []
 *         for market in markets:             # <<<<<<<<<<<<<<
 *             try:
 *                 symbol = market["id"]
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":95
 *             except Exception:
 *                 RadarRelayMarket.logger().error(f"Error parsing the symbol {symbol}. Skipping.", exc_info=True)
 *         return retval             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_retval);
  __pyx_r = __pyx_v_retval;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":81
 * 
 *     @classmethod
 *     def parse_exchange_info(cls, markets: List[Dict[str, any]]) -> List[TradingRule]:             # <<<<<<<<<<<<<<
 *         cdef:
 *             list retval = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.parse_exchange_info", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_retval);
  __Pyx_XDECREF(__pyx_v_market);
  __Pyx_XDECREF(__pyx_v_symbol);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":97
 *         return retval
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  symbol: str,
 *                  min_order_size: float,
 */

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_symbol = 0;
  double __pyx_v_min_order_size;
  double __pyx_v_max_order_size;
  PyObject *__pyx_v_price_precision = 0;
  PyObject *__pyx_v_price_decimals = 0;
  PyObject *__pyx_v_amount_decimals = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_symbol,&__pyx_n_s_min_order_size,&__pyx_n_s_max_order_size,&__pyx_n_s_price_precision,&__pyx_n_s_price_decimals,&__pyx_n_s_amount_decimals,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_min_order_size)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 1); __PYX_ERR(0, 97, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_max_order_size)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 2); __PYX_ERR(0, 97, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_price_precision)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 3); __PYX_ERR(0, 97, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_price_decimals)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 4); __PYX_ERR(0, 97, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount_decimals)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 5); __PYX_ERR(0, 97, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 97, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_symbol = ((PyObject*)values[0]);
    __pyx_v_min_order_size = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_min_order_size == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 99, __pyx_L3_error)
    __pyx_v_max_order_size = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_max_order_size == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 100, __pyx_L3_error)
    __pyx_v_price_precision = values[3];
    __pyx_v_price_decimals = values[4];
    __pyx_v_amount_decimals = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 97, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 98, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_2__init__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), __pyx_v_symbol, __pyx_v_min_order_size, __pyx_v_max_order_size, __pyx_v_price_precision, __pyx_v_price_decimals, __pyx_v_amount_decimals);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_2__init__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_min_order_size, double __pyx_v_max_order_size, PyObject *__pyx_v_price_precision, PyObject *__pyx_v_price_decimals, PyObject *__pyx_v_amount_decimals) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "wings/market/radar_relay_market.pyx":104
 *                  price_decimals: int,
 *                  amount_decimals: int):
 *         self.symbol = symbol             # <<<<<<<<<<<<<<
 *         self.min_order_size = min_order_size
 *         self.max_order_size = max_order_size
 */
  __Pyx_INCREF(__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_v_symbol);
  __Pyx_GOTREF(__pyx_v_self->symbol);
  __Pyx_DECREF(__pyx_v_self->symbol);
  __pyx_v_self->symbol = __pyx_v_symbol;

  /* "wings/market/radar_relay_market.pyx":105
 *                  amount_decimals: int):
 *         self.symbol = symbol
 *         self.min_order_size = min_order_size             # <<<<<<<<<<<<<<
 *         self.max_order_size = max_order_size
 *         self.price_precision = price_precision
 */
  __pyx_v_self->min_order_size = __pyx_v_min_order_size;

  /* "wings/market/radar_relay_market.pyx":106
 *         self.symbol = symbol
 *         self.min_order_size = min_order_size
 *         self.max_order_size = max_order_size             # <<<<<<<<<<<<<<
 *         self.price_precision = price_precision
 *         self.price_decimals = price_decimals
 */
  __pyx_v_self->max_order_size = __pyx_v_max_order_size;

  /* "wings/market/radar_relay_market.pyx":107
 *         self.min_order_size = min_order_size
 *         self.max_order_size = max_order_size
 *         self.price_precision = price_precision             # <<<<<<<<<<<<<<
 *         self.price_decimals = price_decimals
 *         self.amount_decimals = amount_decimals
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_price_precision); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 107, __pyx_L1_error)
  __pyx_v_self->price_precision = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":108
 *         self.max_order_size = max_order_size
 *         self.price_precision = price_precision
 *         self.price_decimals = price_decimals             # <<<<<<<<<<<<<<
 *         self.amount_decimals = amount_decimals
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_price_decimals); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L1_error)
  __pyx_v_self->price_decimals = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":109
 *         self.price_precision = price_precision
 *         self.price_decimals = price_decimals
 *         self.amount_decimals = amount_decimals             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self) -> str:
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_amount_decimals); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 109, __pyx_L1_error)
  __pyx_v_self->amount_decimals = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":97
 *         return retval
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  symbol: str,
 *                  min_order_size: float,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":111
 *         self.amount_decimals = amount_decimals
 * 
 *     def __repr__(self) -> str:             # <<<<<<<<<<<<<<
 *         return f"TradingRule(symbol='{self.symbol}', min_order_size={self.min_order_size}, " \
 *                f"max_order_size={self.max_order_size}, price_precision={self.price_precision}, "\
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_4__repr__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_4__repr__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "wings/market/radar_relay_market.pyx":112
 * 
 *     def __repr__(self) -> str:
 *         return f"TradingRule(symbol='{self.symbol}', min_order_size={self.min_order_size}, " \             # <<<<<<<<<<<<<<
 *                f"max_order_size={self.max_order_size}, price_precision={self.price_precision}, "\
 *                f"price_decimals={self.price_decimals}, amount_decimals={self.amount_decimals}"
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_INCREF(__pyx_kp_u_TradingRule_symbol);
  __pyx_t_2 += 20;
  __Pyx_GIVEREF(__pyx_kp_u_TradingRule_symbol);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_TradingRule_symbol);
  __pyx_t_4 = __Pyx_PyUnicode_Unicode(__pyx_v_self->symbol); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_min_order_size_2);
  __pyx_t_2 += 18;
  __Pyx_GIVEREF(__pyx_kp_u_min_order_size_2);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_min_order_size_2);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->min_order_size); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u_max_order_size_2);
  __pyx_t_2 += 17;
  __Pyx_GIVEREF(__pyx_kp_u_max_order_size_2);
  PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_kp_u_max_order_size_2);

  /* "wings/market/radar_relay_market.pyx":113
 *     def __repr__(self) -> str:
 *         return f"TradingRule(symbol='{self.symbol}', min_order_size={self.min_order_size}, " \
 *                f"max_order_size={self.max_order_size}, price_precision={self.price_precision}, "\             # <<<<<<<<<<<<<<
 *                f"price_decimals={self.price_decimals}, amount_decimals={self.amount_decimals}"
 * 
 */
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->max_order_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_price_precision_2);
  __pyx_t_2 += 18;
  __Pyx_GIVEREF(__pyx_kp_u_price_precision_2);
  PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_kp_u_price_precision_2);
  __pyx_t_4 = __Pyx_PyUnicode_From_int(__pyx_v_self->price_precision, 0, ' ', 'd'); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 7, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_price_decimals_2);
  __pyx_t_2 += 17;
  __Pyx_GIVEREF(__pyx_kp_u_price_decimals_2);
  PyTuple_SET_ITEM(__pyx_t_1, 8, __pyx_kp_u_price_decimals_2);

  /* "wings/market/radar_relay_market.pyx":114
 *         return f"TradingRule(symbol='{self.symbol}', min_order_size={self.min_order_size}, " \
 *                f"max_order_size={self.max_order_size}, price_precision={self.price_precision}, "\
 *                f"price_decimals={self.price_decimals}, amount_decimals={self.amount_decimals}"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = __Pyx_PyUnicode_From_int(__pyx_v_self->price_decimals, 0, ' ', 'd'); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 9, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_amount_decimals_2);
  __pyx_t_2 += 18;
  __Pyx_GIVEREF(__pyx_kp_u_amount_decimals_2);
  PyTuple_SET_ITEM(__pyx_t_1, 10, __pyx_kp_u_amount_decimals_2);
  __pyx_t_4 = __Pyx_PyUnicode_From_int(__pyx_v_self->amount_decimals, 0, ' ', 'd'); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 11, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "wings/market/radar_relay_market.pyx":112
 * 
 *     def __repr__(self) -> str:
 *         return f"TradingRule(symbol='{self.symbol}', min_order_size={self.min_order_size}, " \             # <<<<<<<<<<<<<<
 *                f"max_order_size={self.max_order_size}, price_precision={self.price_precision}, "\
 *                f"price_decimals={self.price_decimals}, amount_decimals={self.amount_decimals}"
 */
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 12, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":111
 *         self.amount_decimals = amount_decimals
 * 
 *     def __repr__(self) -> str:             # <<<<<<<<<<<<<<
 *         return f"TradingRule(symbol='{self.symbol}', min_order_size={self.min_order_size}, " \
 *                f"max_order_size={self.max_order_size}, price_precision={self.price_precision}, "\
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":73
 * cdef class TradingRule:
 *     cdef:
 *         public str symbol             # <<<<<<<<<<<<<<
 *         public double min_order_size            # Calculated min base token size based on last trade price
 *         public double max_order_size            # Calculated max base token size
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->symbol);
  __pyx_r = __pyx_v_self->symbol;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 73, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->symbol);
  __Pyx_DECREF(__pyx_v_self->symbol);
  __pyx_v_self->symbol = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.symbol.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6symbol_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->symbol);
  __Pyx_DECREF(__pyx_v_self->symbol);
  __pyx_v_self->symbol = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":74
 *     cdef:
 *         public str symbol
 *         public double min_order_size            # Calculated min base token size based on last trade price             # <<<<<<<<<<<<<<
 *         public double max_order_size            # Calculated max base token size
 *         public int price_precision              # Maximum precision allowed for the market. Example: 7 (decimal places)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->min_order_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.min_order_size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_v_self->min_order_size = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.min_order_size.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":75
 *         public str symbol
 *         public double min_order_size            # Calculated min base token size based on last trade price
 *         public double max_order_size            # Calculated max base token size             # <<<<<<<<<<<<<<
 *         public int price_precision              # Maximum precision allowed for the market. Example: 7 (decimal places)
 *         public int price_decimals               # Max amount of decimals in base token (price)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->max_order_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.max_order_size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 75, __pyx_L1_error)
  __pyx_v_self->max_order_size = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.max_order_size.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":76
 *         public double min_order_size            # Calculated min base token size based on last trade price
 *         public double max_order_size            # Calculated max base token size
 *         public int price_precision              # Maximum precision allowed for the market. Example: 7 (decimal places)             # <<<<<<<<<<<<<<
 *         public int price_decimals               # Max amount of decimals in base token (price)
 *         public int amount_decimals              # Max amount of decimals in quote token (amount)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15price_precision___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15price_precision___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->price_precision); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.price_precision.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 76, __pyx_L1_error)
  __pyx_v_self->price_precision = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.price_precision.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":77
 *         public double max_order_size            # Calculated max base token size
 *         public int price_precision              # Maximum precision allowed for the market. Example: 7 (decimal places)
 *         public int price_decimals               # Max amount of decimals in base token (price)             # <<<<<<<<<<<<<<
 *         public int amount_decimals              # Max amount of decimals in quote token (amount)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->price_decimals); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.price_decimals.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 77, __pyx_L1_error)
  __pyx_v_self->price_decimals = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.price_decimals.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":78
 *         public int price_precision              # Maximum precision allowed for the market. Example: 7 (decimal places)
 *         public int price_decimals               # Max amount of decimals in base token (price)
 *         public int amount_decimals              # Max amount of decimals in quote token (amount)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->amount_decimals); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.amount_decimals.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L1_error)
  __pyx_v_self->amount_decimals = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.amount_decimals.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6__reduce_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_6__reduce_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.amount_decimals, self.max_order_size, self.min_order_size, self.price_decimals, self.price_precision, self.symbol)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->amount_decimals); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->max_order_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->min_order_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->price_decimals); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->price_precision); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(6); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_5);
  __Pyx_INCREF(__pyx_v_self->symbol);
  __Pyx_GIVEREF(__pyx_v_self->symbol);
  PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_v_self->symbol);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.amount_decimals, self.max_order_size, self.min_order_size, self.price_decimals, self.price_precision, self.symbol)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.amount_decimals, self.max_order_size, self.min_order_size, self.price_decimals, self.price_precision, self.symbol)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.symbol is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.amount_decimals, self.max_order_size, self.min_order_size, self.price_decimals, self.price_precision, self.symbol)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.symbol is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, None), state
 */
  /*else*/ {
    __pyx_t_8 = (__pyx_v_self->symbol != ((PyObject*)Py_None));
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.symbol is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.symbol is not None
 *     if use_setstate:
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_TradingRule); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_19757352);
    __Pyx_GIVEREF(__pyx_int_19757352);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_19757352);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.symbol is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, None), state
 *     else:
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_TradingRule__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_TradingRule); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_19757352);
    __Pyx_GIVEREF(__pyx_int_19757352);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_19757352);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_TradingRule__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_8__setstate_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_11TradingRule_8__setstate_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_TradingRule__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_TradingRule, (type(self), 0x12d7928, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_TradingRule__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.TradingRule.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":134
 *         public object zero_ex_order
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  client_order_id: str,
 *                  exchange_order_id: str,
 */

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_client_order_id = 0;
  PyObject *__pyx_v_exchange_order_id = 0;
  PyObject *__pyx_v_tx_hash = 0;
  PyObject *__pyx_v_symbol = 0;
  PyObject *__pyx_v_is_buy = 0;
  PyObject *__pyx_v_order_type = 0;
  PyObject *__pyx_v_amount = 0;
  PyObject *__pyx_v_price = 0;
  PyObject *__pyx_v_zero_ex_order = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_client_order_id,&__pyx_n_s_exchange_order_id,&__pyx_n_s_tx_hash,&__pyx_n_s_symbol,&__pyx_n_s_is_buy,&__pyx_n_s_order_type,&__pyx_n_s_amount,&__pyx_n_s_price,&__pyx_n_s_zero_ex_order,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};

    /* "wings/market/radar_relay_market.pyx":143
 *                  amount: Decimal,
 *                  price: Decimal,
 *                  zero_ex_order: Order = None):             # <<<<<<<<<<<<<<
 *         self.client_order_id = client_order_id
 *         self.exchange_order_id = exchange_order_id
 */
    values[8] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_client_order_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_exchange_order_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 1); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tx_hash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 2); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 3); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_is_buy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 4); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order_type)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 5); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 6); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_price)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, 7); __PYX_ERR(0, 134, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_zero_ex_order);
          if (value) { values[8] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 134, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_client_order_id = ((PyObject*)values[0]);
    __pyx_v_exchange_order_id = ((PyObject*)values[1]);
    __pyx_v_tx_hash = ((PyObject*)values[2]);
    __pyx_v_symbol = ((PyObject*)values[3]);
    __pyx_v_is_buy = values[4];
    __pyx_v_order_type = values[5];
    __pyx_v_amount = values[6];
    __pyx_v_price = values[7];
    __pyx_v_zero_ex_order = values[8];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 8, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 134, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_client_order_id), (&PyUnicode_Type), 1, "client_order_id", 1))) __PYX_ERR(0, 135, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_exchange_order_id), (&PyUnicode_Type), 1, "exchange_order_id", 1))) __PYX_ERR(0, 136, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tx_hash), (&PyUnicode_Type), 1, "tx_hash", 1))) __PYX_ERR(0, 137, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 138, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder___init__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), __pyx_v_client_order_id, __pyx_v_exchange_order_id, __pyx_v_tx_hash, __pyx_v_symbol, __pyx_v_is_buy, __pyx_v_order_type, __pyx_v_amount, __pyx_v_price, __pyx_v_zero_ex_order);

  /* "wings/market/radar_relay_market.pyx":134
 *         public object zero_ex_order
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  client_order_id: str,
 *                  exchange_order_id: str,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder___init__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_client_order_id, PyObject *__pyx_v_exchange_order_id, PyObject *__pyx_v_tx_hash, PyObject *__pyx_v_symbol, PyObject *__pyx_v_is_buy, PyObject *__pyx_v_order_type, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, PyObject *__pyx_v_zero_ex_order) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "wings/market/radar_relay_market.pyx":144
 *                  price: Decimal,
 *                  zero_ex_order: Order = None):
 *         self.client_order_id = client_order_id             # <<<<<<<<<<<<<<
 *         self.exchange_order_id = exchange_order_id
 *         self.tx_hash = tx_hash
 */
  __Pyx_INCREF(__pyx_v_client_order_id);
  __Pyx_GIVEREF(__pyx_v_client_order_id);
  __Pyx_GOTREF(__pyx_v_self->client_order_id);
  __Pyx_DECREF(__pyx_v_self->client_order_id);
  __pyx_v_self->client_order_id = __pyx_v_client_order_id;

  /* "wings/market/radar_relay_market.pyx":145
 *                  zero_ex_order: Order = None):
 *         self.client_order_id = client_order_id
 *         self.exchange_order_id = exchange_order_id             # <<<<<<<<<<<<<<
 *         self.tx_hash = tx_hash
 *         self.symbol = symbol
 */
  __Pyx_INCREF(__pyx_v_exchange_order_id);
  __Pyx_GIVEREF(__pyx_v_exchange_order_id);
  __Pyx_GOTREF(__pyx_v_self->exchange_order_id);
  __Pyx_DECREF(__pyx_v_self->exchange_order_id);
  __pyx_v_self->exchange_order_id = __pyx_v_exchange_order_id;

  /* "wings/market/radar_relay_market.pyx":146
 *         self.client_order_id = client_order_id
 *         self.exchange_order_id = exchange_order_id
 *         self.tx_hash = tx_hash             # <<<<<<<<<<<<<<
 *         self.symbol = symbol
 *         self.is_buy = is_buy
 */
  __Pyx_INCREF(__pyx_v_tx_hash);
  __Pyx_GIVEREF(__pyx_v_tx_hash);
  __Pyx_GOTREF(__pyx_v_self->tx_hash);
  __Pyx_DECREF(__pyx_v_self->tx_hash);
  __pyx_v_self->tx_hash = __pyx_v_tx_hash;

  /* "wings/market/radar_relay_market.pyx":147
 *         self.exchange_order_id = exchange_order_id
 *         self.tx_hash = tx_hash
 *         self.symbol = symbol             # <<<<<<<<<<<<<<
 *         self.is_buy = is_buy
 *         self.order_type = order_type
 */
  __Pyx_INCREF(__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_v_symbol);
  __Pyx_GOTREF(__pyx_v_self->symbol);
  __Pyx_DECREF(__pyx_v_self->symbol);
  __pyx_v_self->symbol = __pyx_v_symbol;

  /* "wings/market/radar_relay_market.pyx":148
 *         self.tx_hash = tx_hash
 *         self.symbol = symbol
 *         self.is_buy = is_buy             # <<<<<<<<<<<<<<
 *         self.order_type = order_type
 *         self.amount = amount # initial amount (constant)
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_is_buy); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 148, __pyx_L1_error)
  __pyx_v_self->is_buy = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":149
 *         self.symbol = symbol
 *         self.is_buy = is_buy
 *         self.order_type = order_type             # <<<<<<<<<<<<<<
 *         self.amount = amount # initial amount (constant)
 *         self.available_amount = amount
 */
  __Pyx_INCREF(__pyx_v_order_type);
  __Pyx_GIVEREF(__pyx_v_order_type);
  __Pyx_GOTREF(__pyx_v_self->order_type);
  __Pyx_DECREF(__pyx_v_self->order_type);
  __pyx_v_self->order_type = __pyx_v_order_type;

  /* "wings/market/radar_relay_market.pyx":150
 *         self.is_buy = is_buy
 *         self.order_type = order_type
 *         self.amount = amount # initial amount (constant)             # <<<<<<<<<<<<<<
 *         self.available_amount = amount
 *         self.price = price
 */
  __Pyx_INCREF(__pyx_v_amount);
  __Pyx_GIVEREF(__pyx_v_amount);
  __Pyx_GOTREF(__pyx_v_self->amount);
  __Pyx_DECREF(__pyx_v_self->amount);
  __pyx_v_self->amount = __pyx_v_amount;

  /* "wings/market/radar_relay_market.pyx":151
 *         self.order_type = order_type
 *         self.amount = amount # initial amount (constant)
 *         self.available_amount = amount             # <<<<<<<<<<<<<<
 *         self.price = price
 *         self.executed_amount = s_decimal_0
 */
  __Pyx_INCREF(__pyx_v_amount);
  __Pyx_GIVEREF(__pyx_v_amount);
  __Pyx_GOTREF(__pyx_v_self->available_amount);
  __Pyx_DECREF(__pyx_v_self->available_amount);
  __pyx_v_self->available_amount = __pyx_v_amount;

  /* "wings/market/radar_relay_market.pyx":152
 *         self.amount = amount # initial amount (constant)
 *         self.available_amount = amount
 *         self.price = price             # <<<<<<<<<<<<<<
 *         self.executed_amount = s_decimal_0
 *         self.quote_asset_amount = s_decimal_0
 */
  __Pyx_INCREF(__pyx_v_price);
  __Pyx_GIVEREF(__pyx_v_price);
  __Pyx_GOTREF(__pyx_v_self->price);
  __Pyx_DECREF(__pyx_v_self->price);
  __pyx_v_self->price = __pyx_v_price;

  /* "wings/market/radar_relay_market.pyx":153
 *         self.available_amount = amount
 *         self.price = price
 *         self.executed_amount = s_decimal_0             # <<<<<<<<<<<<<<
 *         self.quote_asset_amount = s_decimal_0
 *         self.gas_fee_amount = s_decimal_0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->executed_amount);
  __Pyx_DECREF(__pyx_v_self->executed_amount);
  __pyx_v_self->executed_amount = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":154
 *         self.price = price
 *         self.executed_amount = s_decimal_0
 *         self.quote_asset_amount = s_decimal_0             # <<<<<<<<<<<<<<
 *         self.gas_fee_amount = s_decimal_0
 *         self.last_state = "OPEN"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->quote_asset_amount);
  __Pyx_DECREF(__pyx_v_self->quote_asset_amount);
  __pyx_v_self->quote_asset_amount = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":155
 *         self.executed_amount = s_decimal_0
 *         self.quote_asset_amount = s_decimal_0
 *         self.gas_fee_amount = s_decimal_0             # <<<<<<<<<<<<<<
 *         self.last_state = "OPEN"
 *         self.zero_ex_order = zero_ex_order
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->gas_fee_amount);
  __Pyx_DECREF(__pyx_v_self->gas_fee_amount);
  __pyx_v_self->gas_fee_amount = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":156
 *         self.quote_asset_amount = s_decimal_0
 *         self.gas_fee_amount = s_decimal_0
 *         self.last_state = "OPEN"             # <<<<<<<<<<<<<<
 *         self.zero_ex_order = zero_ex_order
 * 
 */
  __Pyx_INCREF(__pyx_n_u_OPEN);
  __Pyx_GIVEREF(__pyx_n_u_OPEN);
  __Pyx_GOTREF(__pyx_v_self->last_state);
  __Pyx_DECREF(__pyx_v_self->last_state);
  __pyx_v_self->last_state = __pyx_n_u_OPEN;

  /* "wings/market/radar_relay_market.pyx":157
 *         self.gas_fee_amount = s_decimal_0
 *         self.last_state = "OPEN"
 *         self.zero_ex_order = zero_ex_order             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self) -> str:
 */
  __Pyx_INCREF(__pyx_v_zero_ex_order);
  __Pyx_GIVEREF(__pyx_v_zero_ex_order);
  __Pyx_GOTREF(__pyx_v_self->zero_ex_order);
  __Pyx_DECREF(__pyx_v_self->zero_ex_order);
  __pyx_v_self->zero_ex_order = __pyx_v_zero_ex_order;

  /* "wings/market/radar_relay_market.pyx":134
 *         public object zero_ex_order
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  client_order_id: str,
 *                  exchange_order_id: str,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":159
 *         self.zero_ex_order = zero_ex_order
 * 
 *     def __repr__(self) -> str:             # <<<<<<<<<<<<<<
 *         return f"InFlightOrder(client_order_id='{self.client_order_id}', exchange_order_id='{self.exchange_order_id}', " \
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_2__repr__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_2__repr__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "wings/market/radar_relay_market.pyx":160
 * 
 *     def __repr__(self) -> str:
 *         return f"InFlightOrder(client_order_id='{self.client_order_id}', exchange_order_id='{self.exchange_order_id}', " \             # <<<<<<<<<<<<<<
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \
 *                f"amount={self.amount}, available_amount={self.available_amount} price={self.price}, " \
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(29); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_INCREF(__pyx_kp_u_InFlightOrder_client_order_id);
  __pyx_t_2 += 31;
  __Pyx_GIVEREF(__pyx_kp_u_InFlightOrder_client_order_id);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_InFlightOrder_client_order_id);
  __pyx_t_4 = __Pyx_PyUnicode_Unicode(__pyx_v_self->client_order_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_exchange_order_id_2);
  __pyx_t_2 += 22;
  __Pyx_GIVEREF(__pyx_kp_u_exchange_order_id_2);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_exchange_order_id_2);
  __pyx_t_4 = __Pyx_PyUnicode_Unicode(__pyx_v_self->exchange_order_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_tx_hash_2);
  __pyx_t_2 += 12;
  __Pyx_GIVEREF(__pyx_kp_u_tx_hash_2);
  PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_kp_u_tx_hash_2);

  /* "wings/market/radar_relay_market.pyx":161
 *     def __repr__(self) -> str:
 *         return f"InFlightOrder(client_order_id='{self.client_order_id}', exchange_order_id='{self.exchange_order_id}', " \
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \             # <<<<<<<<<<<<<<
 *                f"amount={self.amount}, available_amount={self.available_amount} price={self.price}, " \
 *                f"executed_amount={self.executed_amount}, quote_asset_amount={self.quote_asset_amount}, "\
 */
  __pyx_t_4 = __Pyx_PyUnicode_Unicode(__pyx_v_self->tx_hash); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_symbol_2);
  __pyx_t_2 += 11;
  __Pyx_GIVEREF(__pyx_kp_u_symbol_2);
  PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_kp_u_symbol_2);
  __pyx_t_4 = __Pyx_PyUnicode_Unicode(__pyx_v_self->symbol); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 7, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_is_buy_2);
  __pyx_t_2 += 10;
  __Pyx_GIVEREF(__pyx_kp_u_is_buy_2);
  PyTuple_SET_ITEM(__pyx_t_1, 8, __pyx_kp_u_is_buy_2);
  __pyx_t_4 = __Pyx_PyUnicode_FromBInt_int(__pyx_v_self->is_buy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 9, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_order_type_2);
  __pyx_t_2 += 13;
  __Pyx_GIVEREF(__pyx_kp_u_order_type_2);
  PyTuple_SET_ITEM(__pyx_t_1, 10, __pyx_kp_u_order_type_2);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->order_type, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 11, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_amount_2);
  __pyx_t_2 += 9;
  __Pyx_GIVEREF(__pyx_kp_u_amount_2);
  PyTuple_SET_ITEM(__pyx_t_1, 12, __pyx_kp_u_amount_2);

  /* "wings/market/radar_relay_market.pyx":162
 *         return f"InFlightOrder(client_order_id='{self.client_order_id}', exchange_order_id='{self.exchange_order_id}', " \
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \
 *                f"amount={self.amount}, available_amount={self.available_amount} price={self.price}, " \             # <<<<<<<<<<<<<<
 *                f"executed_amount={self.executed_amount}, quote_asset_amount={self.quote_asset_amount}, "\
 *                f"gas_fee_amount={self.gas_fee_amount}, last_state='{self.last_state}', zero_ex_order='{self.zero_ex_order}')"
 */
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->amount, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 13, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_available_amount);
  __pyx_t_2 += 19;
  __Pyx_GIVEREF(__pyx_kp_u_available_amount);
  PyTuple_SET_ITEM(__pyx_t_1, 14, __pyx_kp_u_available_amount);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->available_amount, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 15, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_price_2);
  __pyx_t_2 += 7;
  __Pyx_GIVEREF(__pyx_kp_u_price_2);
  PyTuple_SET_ITEM(__pyx_t_1, 16, __pyx_kp_u_price_2);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->price, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 17, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_executed_amount);
  __pyx_t_2 += 18;
  __Pyx_GIVEREF(__pyx_kp_u_executed_amount);
  PyTuple_SET_ITEM(__pyx_t_1, 18, __pyx_kp_u_executed_amount);

  /* "wings/market/radar_relay_market.pyx":163
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \
 *                f"amount={self.amount}, available_amount={self.available_amount} price={self.price}, " \
 *                f"executed_amount={self.executed_amount}, quote_asset_amount={self.quote_asset_amount}, "\             # <<<<<<<<<<<<<<
 *                f"gas_fee_amount={self.gas_fee_amount}, last_state='{self.last_state}', zero_ex_order='{self.zero_ex_order}')"
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->executed_amount, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 19, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_quote_asset_amount);
  __pyx_t_2 += 21;
  __Pyx_GIVEREF(__pyx_kp_u_quote_asset_amount);
  PyTuple_SET_ITEM(__pyx_t_1, 20, __pyx_kp_u_quote_asset_amount);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->quote_asset_amount, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 21, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_gas_fee_amount);
  __pyx_t_2 += 17;
  __Pyx_GIVEREF(__pyx_kp_u_gas_fee_amount);
  PyTuple_SET_ITEM(__pyx_t_1, 22, __pyx_kp_u_gas_fee_amount);

  /* "wings/market/radar_relay_market.pyx":164
 *                f"amount={self.amount}, available_amount={self.available_amount} price={self.price}, " \
 *                f"executed_amount={self.executed_amount}, quote_asset_amount={self.quote_asset_amount}, "\
 *                f"gas_fee_amount={self.gas_fee_amount}, last_state='{self.last_state}', zero_ex_order='{self.zero_ex_order}')"             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->gas_fee_amount, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 23, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_last_state);
  __pyx_t_2 += 14;
  __Pyx_GIVEREF(__pyx_kp_u_last_state);
  PyTuple_SET_ITEM(__pyx_t_1, 24, __pyx_kp_u_last_state);
  __pyx_t_4 = __Pyx_PyUnicode_Unicode(__pyx_v_self->last_state); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 25, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_zero_ex_order_2);
  __pyx_t_2 += 18;
  __Pyx_GIVEREF(__pyx_kp_u_zero_ex_order_2);
  PyTuple_SET_ITEM(__pyx_t_1, 26, __pyx_kp_u_zero_ex_order_2);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_self->zero_ex_order, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 27, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__3);
  __pyx_t_2 += 2;
  __Pyx_GIVEREF(__pyx_kp_u__3);
  PyTuple_SET_ITEM(__pyx_t_1, 28, __pyx_kp_u__3);

  /* "wings/market/radar_relay_market.pyx":160
 * 
 *     def __repr__(self) -> str:
 *         return f"InFlightOrder(client_order_id='{self.client_order_id}', exchange_order_id='{self.exchange_order_id}', " \             # <<<<<<<<<<<<<<
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \
 *                f"amount={self.amount}, available_amount={self.available_amount} price={self.price}, " \
 */
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 29, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":159
 *         self.zero_ex_order = zero_ex_order
 * 
 *     def __repr__(self) -> str:             # <<<<<<<<<<<<<<
 *         return f"InFlightOrder(client_order_id='{self.client_order_id}', exchange_order_id='{self.exchange_order_id}', " \
 *                f"tx_hash='{self.tx_hash}', symbol='{self.symbol}', is_buy={self.is_buy}, order_type={self.order_type}, " \
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":167
 * 
 *     @property
 *     def is_done(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.available_amount == s_decimal_0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7is_done_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7is_done_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7is_done___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7is_done___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":168
 *     @property
 *     def is_done(self) -> bool:
 *         return self.available_amount == s_decimal_0             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_self->available_amount, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":167
 * 
 *     @property
 *     def is_done(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.available_amount == s_decimal_0
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.is_done.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":171
 * 
 *     @property
 *     def is_cancelled(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.last_state in {"CANCELED", "CANCELLED"}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_12is_cancelled_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_12is_cancelled_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_12is_cancelled___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_12is_cancelled___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":172
 *     @property
 *     def is_cancelled(self) -> bool:
 *         return self.last_state in {"CANCELED", "CANCELLED"}             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->last_state);
  __pyx_t_1 = __pyx_v_self->last_state;
  __pyx_t_3 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_CANCELED, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 172, __pyx_L1_error)
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (!__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_CANCELLED, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 172, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_3;
  __pyx_L3_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":171
 * 
 *     @property
 *     def is_cancelled(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.last_state in {"CANCELED", "CANCELLED"}
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.is_cancelled.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":175
 * 
 *     @property
 *     def is_expired(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.last_state in {"EXPIRED"}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10is_expired_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10is_expired_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10is_expired___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10is_expired___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":176
 *     @property
 *     def is_expired(self) -> bool:
 *         return self.last_state in {"EXPIRED"}             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->last_state);
  __pyx_t_1 = __pyx_v_self->last_state;
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_EXPIRED, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyBool_FromLong((__pyx_t_2 != 0)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":175
 * 
 *     @property
 *     def is_expired(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.last_state in {"EXPIRED"}
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.is_expired.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":179
 * 
 *     @property
 *     def is_failure(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.last_state in {"UNFUNDED"}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10is_failure_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10is_failure_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10is_failure___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10is_failure___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":180
 *     @property
 *     def is_failure(self) -> bool:
 *         return self.last_state in {"UNFUNDED"}             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->last_state);
  __pyx_t_1 = __pyx_v_self->last_state;
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_UNFUNDED, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyBool_FromLong((__pyx_t_2 != 0)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":179
 * 
 *     @property
 *     def is_failure(self) -> bool:             # <<<<<<<<<<<<<<
 *         return self.last_state in {"UNFUNDED"}
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.is_failure.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":183
 * 
 *     @property
 *     def base_asset(self) -> str:             # <<<<<<<<<<<<<<
 *         return self.symbol.split('-')[0]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10base_asset_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10base_asset_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10base_asset___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10base_asset___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":184
 *     @property
 *     def base_asset(self) -> str:
 *         return self.symbol.split('-')[0]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->symbol == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "split");
    __PYX_ERR(0, 184, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_Split(__pyx_v_self->symbol, __pyx_kp_u__4, -1L); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":183
 * 
 *     @property
 *     def base_asset(self) -> str:             # <<<<<<<<<<<<<<
 *         return self.symbol.split('-')[0]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.base_asset.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":187
 * 
 *     @property
 *     def quote_asset(self) -> str:             # <<<<<<<<<<<<<<
 *         return self.symbol.split('-')[1]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_11quote_asset_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_11quote_asset_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_11quote_asset___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_11quote_asset___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":188
 *     @property
 *     def quote_asset(self) -> str:
 *         return self.symbol.split('-')[1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->symbol == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "split");
    __PYX_ERR(0, 188, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_Split(__pyx_v_self->symbol, __pyx_kp_u__4, -1L); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":187
 * 
 *     @property
 *     def quote_asset(self) -> str:             # <<<<<<<<<<<<<<
 *         return self.symbol.split('-')[1]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.quote_asset.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":119
 * cdef class InFlightOrder:
 *     cdef:
 *         public str client_order_id             # <<<<<<<<<<<<<<
 *         public str exchange_order_id,
 *         public str tx_hash,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->client_order_id);
  __pyx_r = __pyx_v_self->client_order_id;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 119, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->client_order_id);
  __Pyx_DECREF(__pyx_v_self->client_order_id);
  __pyx_v_self->client_order_id = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.client_order_id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->client_order_id);
  __Pyx_DECREF(__pyx_v_self->client_order_id);
  __pyx_v_self->client_order_id = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":120
 *     cdef:
 *         public str client_order_id
 *         public str exchange_order_id,             # <<<<<<<<<<<<<<
 *         public str tx_hash,
 *         public str symbol
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->exchange_order_id);
  __pyx_r = __pyx_v_self->exchange_order_id;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 120, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->exchange_order_id);
  __Pyx_DECREF(__pyx_v_self->exchange_order_id);
  __pyx_v_self->exchange_order_id = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.exchange_order_id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->exchange_order_id);
  __Pyx_DECREF(__pyx_v_self->exchange_order_id);
  __pyx_v_self->exchange_order_id = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":121
 *         public str client_order_id
 *         public str exchange_order_id,
 *         public str tx_hash,             # <<<<<<<<<<<<<<
 *         public str symbol
 *         public bint is_buy
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->tx_hash);
  __pyx_r = __pyx_v_self->tx_hash;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 121, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->tx_hash);
  __Pyx_DECREF(__pyx_v_self->tx_hash);
  __pyx_v_self->tx_hash = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.tx_hash.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->tx_hash);
  __Pyx_DECREF(__pyx_v_self->tx_hash);
  __pyx_v_self->tx_hash = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":122
 *         public str exchange_order_id,
 *         public str tx_hash,
 *         public str symbol             # <<<<<<<<<<<<<<
 *         public bint is_buy
 *         public object order_type
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->symbol);
  __pyx_r = __pyx_v_self->symbol;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 122, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->symbol);
  __Pyx_DECREF(__pyx_v_self->symbol);
  __pyx_v_self->symbol = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.symbol.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->symbol);
  __Pyx_DECREF(__pyx_v_self->symbol);
  __pyx_v_self->symbol = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":123
 *         public str tx_hash,
 *         public str symbol
 *         public bint is_buy             # <<<<<<<<<<<<<<
 *         public object order_type
 *         public object amount
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->is_buy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.is_buy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L1_error)
  __pyx_v_self->is_buy = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.is_buy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":124
 *         public str symbol
 *         public bint is_buy
 *         public object order_type             # <<<<<<<<<<<<<<
 *         public object amount
 *         public object price
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->order_type);
  __pyx_r = __pyx_v_self->order_type;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->order_type);
  __Pyx_DECREF(__pyx_v_self->order_type);
  __pyx_v_self->order_type = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->order_type);
  __Pyx_DECREF(__pyx_v_self->order_type);
  __pyx_v_self->order_type = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":125
 *         public bint is_buy
 *         public object order_type
 *         public object amount             # <<<<<<<<<<<<<<
 *         public object price
 *         public object executed_amount
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->amount);
  __pyx_r = __pyx_v_self->amount;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->amount);
  __Pyx_DECREF(__pyx_v_self->amount);
  __pyx_v_self->amount = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->amount);
  __Pyx_DECREF(__pyx_v_self->amount);
  __pyx_v_self->amount = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":126
 *         public object order_type
 *         public object amount
 *         public object price             # <<<<<<<<<<<<<<
 *         public object executed_amount
 *         public object available_amount
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->price);
  __pyx_r = __pyx_v_self->price;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->price);
  __Pyx_DECREF(__pyx_v_self->price);
  __pyx_v_self->price = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_5price_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->price);
  __Pyx_DECREF(__pyx_v_self->price);
  __pyx_v_self->price = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":127
 *         public object amount
 *         public object price
 *         public object executed_amount             # <<<<<<<<<<<<<<
 *         public object available_amount
 *         public object quote_asset_amount
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->executed_amount);
  __pyx_r = __pyx_v_self->executed_amount;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->executed_amount);
  __Pyx_DECREF(__pyx_v_self->executed_amount);
  __pyx_v_self->executed_amount = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->executed_amount);
  __Pyx_DECREF(__pyx_v_self->executed_amount);
  __pyx_v_self->executed_amount = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":128
 *         public object price
 *         public object executed_amount
 *         public object available_amount             # <<<<<<<<<<<<<<
 *         public object quote_asset_amount
 *         public object gas_fee_amount
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->available_amount);
  __pyx_r = __pyx_v_self->available_amount;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->available_amount);
  __Pyx_DECREF(__pyx_v_self->available_amount);
  __pyx_v_self->available_amount = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->available_amount);
  __Pyx_DECREF(__pyx_v_self->available_amount);
  __pyx_v_self->available_amount = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":129
 *         public object executed_amount
 *         public object available_amount
 *         public object quote_asset_amount             # <<<<<<<<<<<<<<
 *         public object gas_fee_amount
 *         public str last_state
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->quote_asset_amount);
  __pyx_r = __pyx_v_self->quote_asset_amount;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->quote_asset_amount);
  __Pyx_DECREF(__pyx_v_self->quote_asset_amount);
  __pyx_v_self->quote_asset_amount = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->quote_asset_amount);
  __Pyx_DECREF(__pyx_v_self->quote_asset_amount);
  __pyx_v_self->quote_asset_amount = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":130
 *         public object available_amount
 *         public object quote_asset_amount
 *         public object gas_fee_amount             # <<<<<<<<<<<<<<
 *         public str last_state
 *         public object zero_ex_order
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->gas_fee_amount);
  __pyx_r = __pyx_v_self->gas_fee_amount;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->gas_fee_amount);
  __Pyx_DECREF(__pyx_v_self->gas_fee_amount);
  __pyx_v_self->gas_fee_amount = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->gas_fee_amount);
  __Pyx_DECREF(__pyx_v_self->gas_fee_amount);
  __pyx_v_self->gas_fee_amount = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":131
 *         public object quote_asset_amount
 *         public object gas_fee_amount
 *         public str last_state             # <<<<<<<<<<<<<<
 *         public object zero_ex_order
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->last_state);
  __pyx_r = __pyx_v_self->last_state;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 131, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->last_state);
  __Pyx_DECREF(__pyx_v_self->last_state);
  __pyx_v_self->last_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.last_state.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->last_state);
  __Pyx_DECREF(__pyx_v_self->last_state);
  __pyx_v_self->last_state = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":132
 *         public object gas_fee_amount
 *         public str last_state
 *         public object zero_ex_order             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->zero_ex_order);
  __pyx_r = __pyx_v_self->zero_ex_order;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->zero_ex_order);
  __Pyx_DECREF(__pyx_v_self->zero_ex_order);
  __pyx_v_self->zero_ex_order = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->zero_ex_order);
  __Pyx_DECREF(__pyx_v_self->zero_ex_order);
  __pyx_v_self->zero_ex_order = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_4__reduce_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_4__reduce_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.amount, self.available_amount, self.client_order_id, self.exchange_order_id, self.executed_amount, self.gas_fee_amount, self.is_buy, self.last_state, self.order_type, self.price, self.quote_asset_amount, self.symbol, self.tx_hash, self.zero_ex_order)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->is_buy); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(14); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->amount);
  __Pyx_GIVEREF(__pyx_v_self->amount);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self->amount);
  __Pyx_INCREF(__pyx_v_self->available_amount);
  __Pyx_GIVEREF(__pyx_v_self->available_amount);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_self->available_amount);
  __Pyx_INCREF(__pyx_v_self->client_order_id);
  __Pyx_GIVEREF(__pyx_v_self->client_order_id);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_self->client_order_id);
  __Pyx_INCREF(__pyx_v_self->exchange_order_id);
  __Pyx_GIVEREF(__pyx_v_self->exchange_order_id);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_v_self->exchange_order_id);
  __Pyx_INCREF(__pyx_v_self->executed_amount);
  __Pyx_GIVEREF(__pyx_v_self->executed_amount);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_v_self->executed_amount);
  __Pyx_INCREF(__pyx_v_self->gas_fee_amount);
  __Pyx_GIVEREF(__pyx_v_self->gas_fee_amount);
  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_v_self->gas_fee_amount);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->last_state);
  __Pyx_GIVEREF(__pyx_v_self->last_state);
  PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_v_self->last_state);
  __Pyx_INCREF(__pyx_v_self->order_type);
  __Pyx_GIVEREF(__pyx_v_self->order_type);
  PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_v_self->order_type);
  __Pyx_INCREF(__pyx_v_self->price);
  __Pyx_GIVEREF(__pyx_v_self->price);
  PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_v_self->price);
  __Pyx_INCREF(__pyx_v_self->quote_asset_amount);
  __Pyx_GIVEREF(__pyx_v_self->quote_asset_amount);
  PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_v_self->quote_asset_amount);
  __Pyx_INCREF(__pyx_v_self->symbol);
  __Pyx_GIVEREF(__pyx_v_self->symbol);
  PyTuple_SET_ITEM(__pyx_t_2, 11, __pyx_v_self->symbol);
  __Pyx_INCREF(__pyx_v_self->tx_hash);
  __Pyx_GIVEREF(__pyx_v_self->tx_hash);
  PyTuple_SET_ITEM(__pyx_t_2, 12, __pyx_v_self->tx_hash);
  __Pyx_INCREF(__pyx_v_self->zero_ex_order);
  __Pyx_GIVEREF(__pyx_v_self->zero_ex_order);
  PyTuple_SET_ITEM(__pyx_t_2, 13, __pyx_v_self->zero_ex_order);
  __pyx_t_1 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.amount, self.available_amount, self.client_order_id, self.exchange_order_id, self.executed_amount, self.gas_fee_amount, self.is_buy, self.last_state, self.order_type, self.price, self.quote_asset_amount, self.symbol, self.tx_hash, self.zero_ex_order)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_2 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v__dict = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "(tree fragment)":7
 *     state = (self.amount, self.available_amount, self.client_order_id, self.exchange_order_id, self.executed_amount, self.gas_fee_amount, self.is_buy, self.last_state, self.order_type, self.price, self.quote_asset_amount, self.symbol, self.tx_hash, self.zero_ex_order)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_3 = (__pyx_v__dict != Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v__dict);
    __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.amount is not None or self.available_amount is not None or self.client_order_id is not None or self.exchange_order_id is not None or self.executed_amount is not None or self.gas_fee_amount is not None or self.last_state is not None or self.order_type is not None or self.price is not None or self.quote_asset_amount is not None or self.symbol is not None or self.tx_hash is not None or self.zero_ex_order is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.amount, self.available_amount, self.client_order_id, self.exchange_order_id, self.executed_amount, self.gas_fee_amount, self.is_buy, self.last_state, self.order_type, self.price, self.quote_asset_amount, self.symbol, self.tx_hash, self.zero_ex_order)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.amount is not None or self.available_amount is not None or self.client_order_id is not None or self.exchange_order_id is not None or self.executed_amount is not None or self.gas_fee_amount is not None or self.last_state is not None or self.order_type is not None or self.price is not None or self.quote_asset_amount is not None or self.symbol is not None or self.tx_hash is not None or self.zero_ex_order is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, None), state
 */
  /*else*/ {
    __pyx_t_3 = (__pyx_v_self->amount != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->available_amount != Py_None);
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->client_order_id != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->exchange_order_id != ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->executed_amount != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->gas_fee_amount != Py_None);
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->last_state != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->order_type != Py_None);
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->price != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->quote_asset_amount != Py_None);
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->symbol != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->tx_hash != ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->zero_ex_order != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    __pyx_t_4 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_4;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.amount is not None or self.available_amount is not None or self.client_order_id is not None or self.exchange_order_id is not None or self.executed_amount is not None or self.gas_fee_amount is not None or self.last_state is not None or self.order_type is not None or self.price is not None or self.quote_asset_amount is not None or self.symbol is not None or self.tx_hash is not None or self.zero_ex_order is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, None), state
 *     else:
 */
  __pyx_t_4 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_4) {

    /* "(tree fragment)":13
 *         use_setstate = self.amount is not None or self.available_amount is not None or self.client_order_id is not None or self.exchange_order_id is not None or self.executed_amount is not None or self.gas_fee_amount is not None or self.last_state is not None or self.order_type is not None or self.price is not None or self.quote_asset_amount is not None or self.symbol is not None or self.tx_hash is not None or self.zero_ex_order is not None
 *     if use_setstate:
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyx_unpickle_InFlightOrder); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_73811978);
    __Pyx_GIVEREF(__pyx_int_73811978);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_73811978);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_2, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_1 = 0;
    __pyx_t_2 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.amount is not None or self.available_amount is not None or self.client_order_id is not None or self.exchange_order_id is not None or self.executed_amount is not None or self.gas_fee_amount is not None or self.last_state is not None or self.order_type is not None or self.price is not None or self.quote_asset_amount is not None or self.symbol is not None or self.tx_hash is not None or self.zero_ex_order is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, None), state
 *     else:
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_InFlightOrder__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_InFlightOrder); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_73811978);
    __Pyx_GIVEREF(__pyx_int_73811978);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_73811978);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_state);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
    __pyx_t_6 = 0;
    __pyx_t_2 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_InFlightOrder__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6__setstate_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_13InFlightOrder_6__setstate_cython__(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_InFlightOrder__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_InFlightOrder__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_InFlightOrder, (type(self), 0x466480a, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_InFlightOrder__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.InFlightOrder.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":210
 * 
 *     @classmethod
 *     def logger(cls) -> logging.Logger:             # <<<<<<<<<<<<<<
 *         global rrm_logger
 *         if rrm_logger is None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_1logger(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_1logger(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("logger (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_logger(((PyTypeObject*)__pyx_v_cls));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_logger(CYTHON_UNUSED PyTypeObject *__pyx_v_cls) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("logger", 0);

  /* "wings/market/radar_relay_market.pyx":212
 *     def logger(cls) -> logging.Logger:
 *         global rrm_logger
 *         if rrm_logger is None:             # <<<<<<<<<<<<<<
 *             rrm_logger = logging.getLogger(__name__)
 *         return rrm_logger
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rrm_logger); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "wings/market/radar_relay_market.pyx":213
 *         global rrm_logger
 *         if rrm_logger is None:
 *             rrm_logger = logging.getLogger(__name__)             # <<<<<<<<<<<<<<
 *         return rrm_logger
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_logging); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_getLogger); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_rrm_logger, __pyx_t_1) < 0) __PYX_ERR(0, 213, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "wings/market/radar_relay_market.pyx":212
 *     def logger(cls) -> logging.Logger:
 *         global rrm_logger
 *         if rrm_logger is None:             # <<<<<<<<<<<<<<
 *             rrm_logger = logging.getLogger(__name__)
 *         return rrm_logger
 */
  }

  /* "wings/market/radar_relay_market.pyx":214
 *         if rrm_logger is None:
 *             rrm_logger = logging.getLogger(__name__)
 *         return rrm_logger             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rrm_logger); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":210
 * 
 *     @classmethod
 *     def logger(cls) -> logging.Logger:             # <<<<<<<<<<<<<<
 *         global rrm_logger
 *         if rrm_logger is None:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.logger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":216
 *         return rrm_logger
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  wallet: Web3Wallet,
 *                  web3_url: str,
 */

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_wallet = 0;
  PyObject *__pyx_v_web3_url = 0;
  double __pyx_v_poll_interval;
  PyObject *__pyx_v_order_book_tracker_data_source_type = 0;
  PyObject *__pyx_v_wallet_spender_address = 0;
  PyObject *__pyx_v_symbols = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wallet,&__pyx_n_s_web3_url,&__pyx_n_s_poll_interval,&__pyx_n_s_order_book_tracker_data_source_t,&__pyx_n_s_wallet_spender_address,&__pyx_n_s_symbols,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[3] = __pyx_k__5;
    values[4] = __pyx_k__6;

    /* "wings/market/radar_relay_market.pyx":223
 *                     OrderBookTrackerDataSourceType.EXCHANGE_API,
 *                  wallet_spender_address: str = ZERO_EX_MAINNET_ERC20_PROXY,
 *                  symbols: Optional[List[str]] = None):             # <<<<<<<<<<<<<<
 *         super().__init__()
 *         self._order_book_tracker = RadarRelayOrderBookTracker(data_source_type=order_book_tracker_data_source_type,
 */
    values[5] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wallet)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_web3_url)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 6, 1); __PYX_ERR(0, 216, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_poll_interval);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order_book_tracker_data_source_t);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wallet_spender_address);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbols);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 216, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_wallet = values[0];
    __pyx_v_web3_url = ((PyObject*)values[1]);
    if (values[2]) {
      __pyx_v_poll_interval = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_poll_interval == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 219, __pyx_L3_error)
    } else {
      __pyx_v_poll_interval = ((double)5.0);
    }
    __pyx_v_order_book_tracker_data_source_type = values[3];
    __pyx_v_wallet_spender_address = ((PyObject*)values[4]);
    __pyx_v_symbols = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 216, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_web3_url), (&PyUnicode_Type), 1, "web3_url", 1))) __PYX_ERR(0, 218, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_wallet_spender_address), (&PyUnicode_Type), 1, "wallet_spender_address", 1))) __PYX_ERR(0, 222, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_2__init__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_wallet, __pyx_v_web3_url, __pyx_v_poll_interval, __pyx_v_order_book_tracker_data_source_type, __pyx_v_wallet_spender_address, __pyx_v_symbols);

  /* "wings/market/radar_relay_market.pyx":216
 *         return rrm_logger
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  wallet: Web3Wallet,
 *                  web3_url: str,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_2__init__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_wallet, PyObject *__pyx_v_web3_url, double __pyx_v_poll_interval, PyObject *__pyx_v_order_book_tracker_data_source_type, PyObject *__pyx_v_wallet_spender_address, PyObject *__pyx_v_symbols) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "wings/market/radar_relay_market.pyx":224
 *                  wallet_spender_address: str = ZERO_EX_MAINNET_ERC20_PROXY,
 *                  symbols: Optional[List[str]] = None):
 *         super().__init__()             # <<<<<<<<<<<<<<
 *         self._order_book_tracker = RadarRelayOrderBookTracker(data_source_type=order_book_tracker_data_source_type,
 *                                                               symbols=symbols)
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":225
 *                  symbols: Optional[List[str]] = None):
 *         super().__init__()
 *         self._order_book_tracker = RadarRelayOrderBookTracker(data_source_type=order_book_tracker_data_source_type,             # <<<<<<<<<<<<<<
 *                                                               symbols=symbols)
 *         self._account_balances = {}
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RadarRelayOrderBookTracker); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_data_source_type, __pyx_v_order_book_tracker_data_source_type) < 0) __PYX_ERR(0, 225, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":226
 *         super().__init__()
 *         self._order_book_tracker = RadarRelayOrderBookTracker(data_source_type=order_book_tracker_data_source_type,
 *                                                               symbols=symbols)             # <<<<<<<<<<<<<<
 *         self._account_balances = {}
 *         self._ev_loop = asyncio.get_event_loop()
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_symbols, __pyx_v_symbols) < 0) __PYX_ERR(0, 225, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":225
 *                  symbols: Optional[List[str]] = None):
 *         super().__init__()
 *         self._order_book_tracker = RadarRelayOrderBookTracker(data_source_type=order_book_tracker_data_source_type,             # <<<<<<<<<<<<<<
 *                                                               symbols=symbols)
 *         self._account_balances = {}
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_order_book_tracker);
  __Pyx_DECREF(__pyx_v_self->_order_book_tracker);
  __pyx_v_self->_order_book_tracker = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":227
 *         self._order_book_tracker = RadarRelayOrderBookTracker(data_source_type=order_book_tracker_data_source_type,
 *                                                               symbols=symbols)
 *         self._account_balances = {}             # <<<<<<<<<<<<<<
 *         self._ev_loop = asyncio.get_event_loop()
 *         self._poll_notifier = asyncio.Event()
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_account_balances);
  __Pyx_DECREF(__pyx_v_self->_account_balances);
  __pyx_v_self->_account_balances = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":228
 *                                                               symbols=symbols)
 *         self._account_balances = {}
 *         self._ev_loop = asyncio.get_event_loop()             # <<<<<<<<<<<<<<
 *         self._poll_notifier = asyncio.Event()
 *         self._last_timestamp = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_get_event_loop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_ev_loop);
  __Pyx_DECREF(__pyx_v_self->_ev_loop);
  __pyx_v_self->_ev_loop = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":229
 *         self._account_balances = {}
 *         self._ev_loop = asyncio.get_event_loop()
 *         self._poll_notifier = asyncio.Event()             # <<<<<<<<<<<<<<
 *         self._last_timestamp = 0
 *         self._last_update_limit_order_timestamp = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Event); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_poll_notifier);
  __Pyx_DECREF(__pyx_v_self->_poll_notifier);
  __pyx_v_self->_poll_notifier = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":230
 *         self._ev_loop = asyncio.get_event_loop()
 *         self._poll_notifier = asyncio.Event()
 *         self._last_timestamp = 0             # <<<<<<<<<<<<<<
 *         self._last_update_limit_order_timestamp = 0
 *         self._last_update_market_order_timestamp = 0
 */
  __pyx_v_self->_last_timestamp = 0.0;

  /* "wings/market/radar_relay_market.pyx":231
 *         self._poll_notifier = asyncio.Event()
 *         self._last_timestamp = 0
 *         self._last_update_limit_order_timestamp = 0             # <<<<<<<<<<<<<<
 *         self._last_update_market_order_timestamp = 0
 *         self._last_update_trading_rules_timestamp = 0
 */
  __pyx_v_self->_last_update_limit_order_timestamp = 0.0;

  /* "wings/market/radar_relay_market.pyx":232
 *         self._last_timestamp = 0
 *         self._last_update_limit_order_timestamp = 0
 *         self._last_update_market_order_timestamp = 0             # <<<<<<<<<<<<<<
 *         self._last_update_trading_rules_timestamp = 0
 *         self._poll_interval = poll_interval
 */
  __pyx_v_self->_last_update_market_order_timestamp = 0.0;

  /* "wings/market/radar_relay_market.pyx":233
 *         self._last_update_limit_order_timestamp = 0
 *         self._last_update_market_order_timestamp = 0
 *         self._last_update_trading_rules_timestamp = 0             # <<<<<<<<<<<<<<
 *         self._poll_interval = poll_interval
 *         self._in_flight_limit_orders = {} # limit orders are off chain
 */
  __pyx_v_self->_last_update_trading_rules_timestamp = 0.0;

  /* "wings/market/radar_relay_market.pyx":234
 *         self._last_update_market_order_timestamp = 0
 *         self._last_update_trading_rules_timestamp = 0
 *         self._poll_interval = poll_interval             # <<<<<<<<<<<<<<
 *         self._in_flight_limit_orders = {} # limit orders are off chain
 *         self._in_flight_market_orders = {} # market orders are on chain
 */
  __pyx_v_self->_poll_interval = __pyx_v_poll_interval;

  /* "wings/market/radar_relay_market.pyx":235
 *         self._last_update_trading_rules_timestamp = 0
 *         self._poll_interval = poll_interval
 *         self._in_flight_limit_orders = {} # limit orders are off chain             # <<<<<<<<<<<<<<
 *         self._in_flight_market_orders = {} # market orders are on chain
 *         self._order_expiry_queue = deque()
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_in_flight_limit_orders);
  __Pyx_DECREF(__pyx_v_self->_in_flight_limit_orders);
  __pyx_v_self->_in_flight_limit_orders = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":236
 *         self._poll_interval = poll_interval
 *         self._in_flight_limit_orders = {} # limit orders are off chain
 *         self._in_flight_market_orders = {} # market orders are on chain             # <<<<<<<<<<<<<<
 *         self._order_expiry_queue = deque()
 *         self._tx_tracker = RadarRelayTransactionTracker(self)
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_in_flight_market_orders);
  __Pyx_DECREF(__pyx_v_self->_in_flight_market_orders);
  __pyx_v_self->_in_flight_market_orders = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":237
 *         self._in_flight_limit_orders = {} # limit orders are off chain
 *         self._in_flight_market_orders = {} # market orders are on chain
 *         self._order_expiry_queue = deque()             # <<<<<<<<<<<<<<
 *         self._tx_tracker = RadarRelayTransactionTracker(self)
 *         self._w3 = Web3(Web3.HTTPProvider(web3_url))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_deque); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_order_expiry_queue);
  __Pyx_DECREF(__pyx_v_self->_order_expiry_queue);
  __pyx_v_self->_order_expiry_queue = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":238
 *         self._in_flight_market_orders = {} # market orders are on chain
 *         self._order_expiry_queue = deque()
 *         self._tx_tracker = RadarRelayTransactionTracker(self)             # <<<<<<<<<<<<<<
 *         self._w3 = Web3(Web3.HTTPProvider(web3_url))
 *         self._provider = Web3.HTTPProvider(web3_url)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_tx_tracker);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_tx_tracker));
  __pyx_v_self->_tx_tracker = ((struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":239
 *         self._order_expiry_queue = deque()
 *         self._tx_tracker = RadarRelayTransactionTracker(self)
 *         self._w3 = Web3(Web3.HTTPProvider(web3_url))             # <<<<<<<<<<<<<<
 *         self._provider = Web3.HTTPProvider(web3_url)
 *         self._withdraw_rules = {}
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Web3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_Web3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_HTTPProvider); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_v_web3_url) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_web3_url);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_w3);
  __Pyx_DECREF(__pyx_v_self->_w3);
  __pyx_v_self->_w3 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":240
 *         self._tx_tracker = RadarRelayTransactionTracker(self)
 *         self._w3 = Web3(Web3.HTTPProvider(web3_url))
 *         self._provider = Web3.HTTPProvider(web3_url)             # <<<<<<<<<<<<<<
 *         self._withdraw_rules = {}
 *         self._trading_rules = {}
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Web3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_HTTPProvider); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_v_web3_url) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_web3_url);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_provider);
  __Pyx_DECREF(__pyx_v_self->_provider);
  __pyx_v_self->_provider = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":241
 *         self._w3 = Web3(Web3.HTTPProvider(web3_url))
 *         self._provider = Web3.HTTPProvider(web3_url)
 *         self._withdraw_rules = {}             # <<<<<<<<<<<<<<
 *         self._trading_rules = {}
 *         self._pending_approval_tx_hashes = set()
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_withdraw_rules);
  __Pyx_DECREF(__pyx_v_self->_withdraw_rules);
  __pyx_v_self->_withdraw_rules = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":242
 *         self._provider = Web3.HTTPProvider(web3_url)
 *         self._withdraw_rules = {}
 *         self._trading_rules = {}             # <<<<<<<<<<<<<<
 *         self._pending_approval_tx_hashes = set()
 *         self._status_polling_task = None
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_trading_rules);
  __Pyx_DECREF(__pyx_v_self->_trading_rules);
  __pyx_v_self->_trading_rules = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":243
 *         self._withdraw_rules = {}
 *         self._trading_rules = {}
 *         self._pending_approval_tx_hashes = set()             # <<<<<<<<<<<<<<
 *         self._status_polling_task = None
 *         self._order_tracker_task = None
 */
  __pyx_t_3 = PySet_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_pending_approval_tx_hashes);
  __Pyx_DECREF(__pyx_v_self->_pending_approval_tx_hashes);
  __pyx_v_self->_pending_approval_tx_hashes = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":244
 *         self._trading_rules = {}
 *         self._pending_approval_tx_hashes = set()
 *         self._status_polling_task = None             # <<<<<<<<<<<<<<
 *         self._order_tracker_task = None
 *         self._approval_tx_polling_task = None
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_status_polling_task);
  __Pyx_DECREF(__pyx_v_self->_status_polling_task);
  __pyx_v_self->_status_polling_task = Py_None;

  /* "wings/market/radar_relay_market.pyx":245
 *         self._pending_approval_tx_hashes = set()
 *         self._status_polling_task = None
 *         self._order_tracker_task = None             # <<<<<<<<<<<<<<
 *         self._approval_tx_polling_task = None
 *         self._coro_queue = asyncio.Queue()
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_order_tracker_task);
  __Pyx_DECREF(__pyx_v_self->_order_tracker_task);
  __pyx_v_self->_order_tracker_task = Py_None;

  /* "wings/market/radar_relay_market.pyx":246
 *         self._status_polling_task = None
 *         self._order_tracker_task = None
 *         self._approval_tx_polling_task = None             # <<<<<<<<<<<<<<
 *         self._coro_queue = asyncio.Queue()
 *         self._coro_scheduler_task = None
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_approval_tx_polling_task);
  __Pyx_DECREF(__pyx_v_self->_approval_tx_polling_task);
  __pyx_v_self->_approval_tx_polling_task = Py_None;

  /* "wings/market/radar_relay_market.pyx":247
 *         self._order_tracker_task = None
 *         self._approval_tx_polling_task = None
 *         self._coro_queue = asyncio.Queue()             # <<<<<<<<<<<<<<
 *         self._coro_scheduler_task = None
 *         self._wallet = wallet
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Queue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_coro_queue);
  __Pyx_DECREF(__pyx_v_self->_coro_queue);
  __pyx_v_self->_coro_queue = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":248
 *         self._approval_tx_polling_task = None
 *         self._coro_queue = asyncio.Queue()
 *         self._coro_scheduler_task = None             # <<<<<<<<<<<<<<
 *         self._wallet = wallet
 *         self._wallet_spender_address = wallet_spender_address
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_coro_scheduler_task);
  __Pyx_DECREF(__pyx_v_self->_coro_scheduler_task);
  __pyx_v_self->_coro_scheduler_task = Py_None;

  /* "wings/market/radar_relay_market.pyx":249
 *         self._coro_queue = asyncio.Queue()
 *         self._coro_scheduler_task = None
 *         self._wallet = wallet             # <<<<<<<<<<<<<<
 *         self._wallet_spender_address = wallet_spender_address
 *         self._exchange = ZeroExExchange(self._w3, ZERO_EX_MAINNET_EXCHANGE_ADDRESS, wallet)
 */
  __Pyx_INCREF(__pyx_v_wallet);
  __Pyx_GIVEREF(__pyx_v_wallet);
  __Pyx_GOTREF(__pyx_v_self->_wallet);
  __Pyx_DECREF(__pyx_v_self->_wallet);
  __pyx_v_self->_wallet = __pyx_v_wallet;

  /* "wings/market/radar_relay_market.pyx":250
 *         self._coro_scheduler_task = None
 *         self._wallet = wallet
 *         self._wallet_spender_address = wallet_spender_address             # <<<<<<<<<<<<<<
 *         self._exchange = ZeroExExchange(self._w3, ZERO_EX_MAINNET_EXCHANGE_ADDRESS, wallet)
 *         self._latest_salt = -1
 */
  __Pyx_INCREF(__pyx_v_wallet_spender_address);
  __Pyx_GIVEREF(__pyx_v_wallet_spender_address);
  __Pyx_GOTREF(__pyx_v_self->_wallet_spender_address);
  __Pyx_DECREF(__pyx_v_self->_wallet_spender_address);
  __pyx_v_self->_wallet_spender_address = __pyx_v_wallet_spender_address;

  /* "wings/market/radar_relay_market.pyx":251
 *         self._wallet = wallet
 *         self._wallet_spender_address = wallet_spender_address
 *         self._exchange = ZeroExExchange(self._w3, ZERO_EX_MAINNET_EXCHANGE_ADDRESS, wallet)             # <<<<<<<<<<<<<<
 *         self._latest_salt = -1
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ZeroExExchange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ZERO_EX_MAINNET_EXCHANGE_ADDRESS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_v_self->_w3, __pyx_t_1, __pyx_v_wallet};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_v_self->_w3, __pyx_t_1, __pyx_v_wallet};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_v_self->_w3);
    __Pyx_GIVEREF(__pyx_v_self->_w3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_v_self->_w3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_wallet);
    __Pyx_GIVEREF(__pyx_v_wallet);
    PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_6, __pyx_v_wallet);
    __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_exchange);
  __Pyx_DECREF(__pyx_v_self->_exchange);
  __pyx_v_self->_exchange = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":252
 *         self._wallet_spender_address = wallet_spender_address
 *         self._exchange = ZeroExExchange(self._w3, ZERO_EX_MAINNET_EXCHANGE_ADDRESS, wallet)
 *         self._latest_salt = -1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_v_self->_latest_salt = -1L;

  /* "wings/market/radar_relay_market.pyx":216
 *         return rrm_logger
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  wallet: Web3Wallet,
 *                  web3_url: str,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":255
 * 
 *     @property
 *     def ready(self) -> bool:             # <<<<<<<<<<<<<<
 *         return len(self._account_balances) > 0 \
 *                and len(self._trading_rules) > 0 \
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_5ready_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_5ready_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_5ready___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_5ready___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":256
 *     @property
 *     def ready(self) -> bool:
 *         return len(self._account_balances) > 0 \             # <<<<<<<<<<<<<<
 *                and len(self._trading_rules) > 0 \
 *                and len(self._order_book_tracker.order_books) > 0 \
 */
  __Pyx_XDECREF(__pyx_r);

  /* "wings/market/radar_relay_market.pyx":257
 *     def ready(self) -> bool:
 *         return len(self._account_balances) > 0 \
 *                and len(self._trading_rules) > 0 \             # <<<<<<<<<<<<<<
 *                and len(self._order_book_tracker.order_books) > 0 \
 *                and len(self._pending_approval_tx_hashes) == 0
 */
  __pyx_t_2 = __pyx_v_self->_account_balances;
  __Pyx_INCREF(__pyx_t_2);

  /* "wings/market/radar_relay_market.pyx":256
 *     @property
 *     def ready(self) -> bool:
 *         return len(self._account_balances) > 0 \             # <<<<<<<<<<<<<<
 *                and len(self._trading_rules) > 0 \
 *                and len(self._order_book_tracker.order_books) > 0 \
 */
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 256, __pyx_L1_error)
  }
  __pyx_t_3 = PyDict_Size(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 > 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3_bool_binop_done;
  }

  /* "wings/market/radar_relay_market.pyx":257
 *     def ready(self) -> bool:
 *         return len(self._account_balances) > 0 \
 *                and len(self._trading_rules) > 0 \             # <<<<<<<<<<<<<<
 *                and len(self._order_book_tracker.order_books) > 0 \
 *                and len(self._pending_approval_tx_hashes) == 0
 */
  __pyx_t_2 = __pyx_v_self->_trading_rules;
  __Pyx_INCREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 257, __pyx_L1_error)
  }
  __pyx_t_3 = PyDict_Size(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 > 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3_bool_binop_done;
  }

  /* "wings/market/radar_relay_market.pyx":258
 *         return len(self._account_balances) > 0 \
 *                and len(self._trading_rules) > 0 \
 *                and len(self._order_book_tracker.order_books) > 0 \             # <<<<<<<<<<<<<<
 *                and len(self._pending_approval_tx_hashes) == 0
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_order_book_tracker, __pyx_n_s_order_books); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 > 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3_bool_binop_done;
  }

  /* "wings/market/radar_relay_market.pyx":259
 *                and len(self._trading_rules) > 0 \
 *                and len(self._order_book_tracker.order_books) > 0 \
 *                and len(self._pending_approval_tx_hashes) == 0             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __pyx_v_self->_pending_approval_tx_hashes;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 == 0);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":255
 * 
 *     @property
 *     def ready(self) -> bool:             # <<<<<<<<<<<<<<
 *         return len(self._account_balances) > 0 \
 *                and len(self._trading_rules) > 0 \
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.ready.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":262
 * 
 *     @property
 *     def order_books(self) -> Dict[str, OrderBook]:             # <<<<<<<<<<<<<<
 *         return self._order_book_tracker.order_books
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_11order_books_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_11order_books_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_11order_books___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_11order_books___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":263
 *     @property
 *     def order_books(self) -> Dict[str, OrderBook]:
 *         return self._order_book_tracker.order_books             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_order_book_tracker, __pyx_n_s_order_books); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":262
 * 
 *     @property
 *     def order_books(self) -> Dict[str, OrderBook]:             # <<<<<<<<<<<<<<
 *         return self._order_book_tracker.order_books
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.order_books.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":266
 * 
 *     @property
 *     def wallet(self) -> Web3Wallet:             # <<<<<<<<<<<<<<
 *         return self._wallet
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_6wallet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_6wallet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_6wallet___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_6wallet___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":267
 *     @property
 *     def wallet(self) -> Web3Wallet:
 *         return self._wallet             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_wallet);
  __pyx_r = __pyx_v_self->_wallet;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":266
 * 
 *     @property
 *     def wallet(self) -> Web3Wallet:             # <<<<<<<<<<<<<<
 *         return self._wallet
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":270
 * 
 *     @property
 *     def trading_rules(self) -> Dict[str, TradingRule]:             # <<<<<<<<<<<<<<
 *         return self._trading_rules
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_13trading_rules_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_13trading_rules_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_13trading_rules___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_13trading_rules___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":271
 *     @property
 *     def trading_rules(self) -> Dict[str, TradingRule]:
 *         return self._trading_rules             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_trading_rules);
  __pyx_r = __pyx_v_self->_trading_rules;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":270
 * 
 *     @property
 *     def trading_rules(self) -> Dict[str, TradingRule]:             # <<<<<<<<<<<<<<
 *         return self._trading_rules
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":274
 * 
 *     @property
 *     def in_flight_limit_orders(self) -> Dict[str, InFlightOrder]:             # <<<<<<<<<<<<<<
 *         return self._in_flight_limit_orders
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_22in_flight_limit_orders_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_22in_flight_limit_orders_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_22in_flight_limit_orders___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_22in_flight_limit_orders___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":275
 *     @property
 *     def in_flight_limit_orders(self) -> Dict[str, InFlightOrder]:
 *         return self._in_flight_limit_orders             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_in_flight_limit_orders);
  __pyx_r = __pyx_v_self->_in_flight_limit_orders;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":274
 * 
 *     @property
 *     def in_flight_limit_orders(self) -> Dict[str, InFlightOrder]:             # <<<<<<<<<<<<<<
 *         return self._in_flight_limit_orders
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":278
 * 
 *     @property
 *     def in_flight_market_orders(self) -> Dict[str, InFlightOrder]:             # <<<<<<<<<<<<<<
 *         return self._in_flight_market_orders
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_23in_flight_market_orders_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_23in_flight_market_orders_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_23in_flight_market_orders___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_23in_flight_market_orders___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":279
 *     @property
 *     def in_flight_market_orders(self) -> Dict[str, InFlightOrder]:
 *         return self._in_flight_market_orders             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_in_flight_market_orders);
  __pyx_r = __pyx_v_self->_in_flight_market_orders;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":278
 * 
 *     @property
 *     def in_flight_market_orders(self) -> Dict[str, InFlightOrder]:             # <<<<<<<<<<<<<<
 *         return self._in_flight_market_orders
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":282
 * 
 *     @property
 *     def limit_orders(self) -> List[LimitOrder]:             # <<<<<<<<<<<<<<
 *         cdef:
 *             list retval = []
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_12limit_orders_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_12limit_orders_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_12limit_orders___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_12limit_orders___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_v_retval = 0;
  struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v_typed_in_flight_order = 0;
  PyObject *__pyx_v_base_currency = 0;
  PyObject *__pyx_v_quote_currency = 0;
  PyObject *__pyx_v_in_flight_order = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_t_17;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "wings/market/radar_relay_market.pyx":284
 *     def limit_orders(self) -> List[LimitOrder]:
 *         cdef:
 *             list retval = []             # <<<<<<<<<<<<<<
 *             InFlightOrder typed_in_flight_order
 *             str base_currency
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_retval = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":289
 *             str quote_currency
 * 
 *         for in_flight_order in self._in_flight_limit_orders:             # <<<<<<<<<<<<<<
 *             typed_in_flight_order = in_flight_order
 *             if typed_in_flight_order.order_type is not OrderType.LIMIT:
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->_in_flight_limit_orders == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 289, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_self->_in_flight_limit_orders, 1, ((PyObject *)NULL), (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_6 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, NULL, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_6 == 0)) break;
    if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_in_flight_order, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":290
 * 
 *         for in_flight_order in self._in_flight_limit_orders:
 *             typed_in_flight_order = in_flight_order             # <<<<<<<<<<<<<<
 *             if typed_in_flight_order.order_type is not OrderType.LIMIT:
 *                 continue
 */
    if (!(likely(((__pyx_v_in_flight_order) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_in_flight_order, __pyx_ptype_5wings_6market_18radar_relay_market_InFlightOrder))))) __PYX_ERR(0, 290, __pyx_L1_error)
    __pyx_t_5 = __pyx_v_in_flight_order;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_typed_in_flight_order, ((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":291
 *         for in_flight_order in self._in_flight_limit_orders:
 *             typed_in_flight_order = in_flight_order
 *             if typed_in_flight_order.order_type is not OrderType.LIMIT:             # <<<<<<<<<<<<<<
 *                 continue
 *             base_currency, quote_currency = in_flight_order.symbol.split("-")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_LIMIT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = (__pyx_v_typed_in_flight_order->order_type != __pyx_t_7);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_9 = (__pyx_t_8 != 0);
    if (__pyx_t_9) {

      /* "wings/market/radar_relay_market.pyx":292
 *             typed_in_flight_order = in_flight_order
 *             if typed_in_flight_order.order_type is not OrderType.LIMIT:
 *                 continue             # <<<<<<<<<<<<<<
 *             base_currency, quote_currency = in_flight_order.symbol.split("-")
 *             retval.append(LimitOrder(
 */
      goto __pyx_L3_continue;

      /* "wings/market/radar_relay_market.pyx":291
 *         for in_flight_order in self._in_flight_limit_orders:
 *             typed_in_flight_order = in_flight_order
 *             if typed_in_flight_order.order_type is not OrderType.LIMIT:             # <<<<<<<<<<<<<<
 *                 continue
 *             base_currency, quote_currency = in_flight_order.symbol.split("-")
 */
    }

    /* "wings/market/radar_relay_market.pyx":293
 *             if typed_in_flight_order.order_type is not OrderType.LIMIT:
 *                 continue
 *             base_currency, quote_currency = in_flight_order.symbol.split("-")             # <<<<<<<<<<<<<<
 *             retval.append(LimitOrder(
 *                 typed_in_flight_order.client_order_id,
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_in_flight_order, __pyx_n_s_symbol); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_5, __pyx_kp_u__4) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_kp_u__4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_7))) || (PyList_CheckExact(__pyx_t_7))) {
      PyObject* sequence = __pyx_t_7;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 293, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_10 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_5 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_5);
      #else
      __pyx_t_10 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 293, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 293, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      #endif
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 293, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_12 = Py_TYPE(__pyx_t_11)->tp_iternext;
      index = 0; __pyx_t_10 = __pyx_t_12(__pyx_t_11); if (unlikely(!__pyx_t_10)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      index = 1; __pyx_t_5 = __pyx_t_12(__pyx_t_11); if (unlikely(!__pyx_t_5)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_12(__pyx_t_11), 2) < 0) __PYX_ERR(0, 293, __pyx_L1_error)
      __pyx_t_12 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_12 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 293, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    if (!(likely(PyUnicode_CheckExact(__pyx_t_10))||((__pyx_t_10) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_10)->tp_name), 0))) __PYX_ERR(0, 293, __pyx_L1_error)
    if (!(likely(PyUnicode_CheckExact(__pyx_t_5))||((__pyx_t_5) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_5)->tp_name), 0))) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_base_currency, ((PyObject*)__pyx_t_10));
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_quote_currency, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":294
 *                 continue
 *             base_currency, quote_currency = in_flight_order.symbol.split("-")
 *             retval.append(LimitOrder(             # <<<<<<<<<<<<<<
 *                 typed_in_flight_order.client_order_id,
 *                 typed_in_flight_order.symbol,
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_LimitOrder); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);

    /* "wings/market/radar_relay_market.pyx":297
 *                 typed_in_flight_order.client_order_id,
 *                 typed_in_flight_order.symbol,
 *                 typed_in_flight_order.is_buy,             # <<<<<<<<<<<<<<
 *                 base_currency,
 *                 quote_currency,
 */
    __pyx_t_10 = __Pyx_PyBool_FromLong(__pyx_v_typed_in_flight_order->is_buy); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);

    /* "wings/market/radar_relay_market.pyx":300
 *                 base_currency,
 *                 quote_currency,
 *                 Decimal(in_flight_order.price),             # <<<<<<<<<<<<<<
 *                 Decimal(in_flight_order.amount)
 *             ))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_in_flight_order, __pyx_n_s_price); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_15 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_15)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_15);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
      }
    }
    __pyx_t_11 = (__pyx_t_15) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_15, __pyx_t_14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_t_14);
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "wings/market/radar_relay_market.pyx":301
 *                 quote_currency,
 *                 Decimal(in_flight_order.price),
 *                 Decimal(in_flight_order.amount)             # <<<<<<<<<<<<<<
 *             ))
 *         return retval
 */
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_in_flight_order, __pyx_n_s_amount); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_16 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
      __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_14);
      if (likely(__pyx_t_16)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
        __Pyx_INCREF(__pyx_t_16);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_14, function);
      }
    }
    __pyx_t_13 = (__pyx_t_16) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_16, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_t_15);
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_t_14 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_14)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[8] = {__pyx_t_14, __pyx_v_typed_in_flight_order->client_order_id, __pyx_v_typed_in_flight_order->symbol, __pyx_t_10, __pyx_v_base_currency, __pyx_v_quote_currency, __pyx_t_11, __pyx_t_13};
      __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_6, 7+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[8] = {__pyx_t_14, __pyx_v_typed_in_flight_order->client_order_id, __pyx_v_typed_in_flight_order->symbol, __pyx_t_10, __pyx_v_base_currency, __pyx_v_quote_currency, __pyx_t_11, __pyx_t_13};
      __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_6, 7+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    } else
    #endif
    {
      __pyx_t_15 = PyTuple_New(7+__pyx_t_6); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      if (__pyx_t_14) {
        __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_14); __pyx_t_14 = NULL;
      }
      __Pyx_INCREF(__pyx_v_typed_in_flight_order->client_order_id);
      __Pyx_GIVEREF(__pyx_v_typed_in_flight_order->client_order_id);
      PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_6, __pyx_v_typed_in_flight_order->client_order_id);
      __Pyx_INCREF(__pyx_v_typed_in_flight_order->symbol);
      __Pyx_GIVEREF(__pyx_v_typed_in_flight_order->symbol);
      PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_6, __pyx_v_typed_in_flight_order->symbol);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_15, 2+__pyx_t_6, __pyx_t_10);
      __Pyx_INCREF(__pyx_v_base_currency);
      __Pyx_GIVEREF(__pyx_v_base_currency);
      PyTuple_SET_ITEM(__pyx_t_15, 3+__pyx_t_6, __pyx_v_base_currency);
      __Pyx_INCREF(__pyx_v_quote_currency);
      __Pyx_GIVEREF(__pyx_v_quote_currency);
      PyTuple_SET_ITEM(__pyx_t_15, 4+__pyx_t_6, __pyx_v_quote_currency);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_15, 5+__pyx_t_6, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_15, 6+__pyx_t_6, __pyx_t_13);
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      __pyx_t_13 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_15, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":294
 *                 continue
 *             base_currency, quote_currency = in_flight_order.symbol.split("-")
 *             retval.append(LimitOrder(             # <<<<<<<<<<<<<<
 *                 typed_in_flight_order.client_order_id,
 *                 typed_in_flight_order.symbol,
 */
    __pyx_t_17 = __Pyx_PyList_Append(__pyx_v_retval, __pyx_t_7); if (unlikely(__pyx_t_17 == ((int)-1))) __PYX_ERR(0, 294, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":303
 *                 Decimal(in_flight_order.amount)
 *             ))
 *         return retval             # <<<<<<<<<<<<<<
 * 
 *     async def _status_polling_loop(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_retval);
  __pyx_r = __pyx_v_retval;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":282
 * 
 *     @property
 *     def limit_orders(self) -> List[LimitOrder]:             # <<<<<<<<<<<<<<
 *         cdef:
 *             list retval = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.limit_orders.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_retval);
  __Pyx_XDECREF((PyObject *)__pyx_v_typed_in_flight_order);
  __Pyx_XDECREF(__pyx_v_base_currency);
  __Pyx_XDECREF(__pyx_v_quote_currency);
  __Pyx_XDECREF(__pyx_v_in_flight_order);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_6generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":305
 *         return retval
 * 
 *     async def _status_polling_loop(self):             # <<<<<<<<<<<<<<
 *         while True:
 *             try:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_5_status_polling_loop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_5_status_polling_loop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_status_polling_loop (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_4_status_polling_loop(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_4_status_polling_loop(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_status_polling_loop", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 305, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_6generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_status_polling_loop, __pyx_n_s_RadarRelayMarket__status_polling, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 305, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._status_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_6generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_status_polling_loop", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L14_resume_from_await;
    case 2: goto __pyx_L15_resume_from_await;
    case 3: goto __pyx_L20_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 305, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":306
 * 
 *     async def _status_polling_loop(self):
 *         while True:             # <<<<<<<<<<<<<<
 *             try:
 *                 self._poll_notifier = asyncio.Event()
 */
  while (1) {

    /* "wings/market/radar_relay_market.pyx":307
 *     async def _status_polling_loop(self):
 *         while True:
 *             try:             # <<<<<<<<<<<<<<
 *                 self._poll_notifier = asyncio.Event()
 *                 await self._poll_notifier.wait()
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_3);
      /*try:*/ {

        /* "wings/market/radar_relay_market.pyx":308
 *         while True:
 *             try:
 *                 self._poll_notifier = asyncio.Event()             # <<<<<<<<<<<<<<
 *                 await self._poll_notifier.wait()
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 308, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_Event); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 308, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 308, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GIVEREF(__pyx_t_4);
        __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_self->_poll_notifier);
        __Pyx_DECREF(__pyx_cur_scope->__pyx_v_self->_poll_notifier);
        __pyx_cur_scope->__pyx_v_self->_poll_notifier = __pyx_t_4;
        __pyx_t_4 = 0;

        /* "wings/market/radar_relay_market.pyx":309
 *             try:
 *                 self._poll_notifier = asyncio.Event()
 *                 await self._poll_notifier.wait()             # <<<<<<<<<<<<<<
 * 
 *                 self._update_balances()
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_poll_notifier, __pyx_n_s_wait); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 309, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 309, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_t_1);
          __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
          __Pyx_XGIVEREF(__pyx_t_2);
          __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
          __Pyx_XGIVEREF(__pyx_t_3);
          __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 1;
          return __pyx_r;
          __pyx_L14_resume_from_await:;
          __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
          __pyx_cur_scope->__pyx_t_0 = 0;
          __Pyx_XGOTREF(__pyx_t_1);
          __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
          __pyx_cur_scope->__pyx_t_1 = 0;
          __Pyx_XGOTREF(__pyx_t_2);
          __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
          __pyx_cur_scope->__pyx_t_2 = 0;
          __Pyx_XGOTREF(__pyx_t_3);
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 309, __pyx_L6_error)
        } else {
          PyObject* exc_type = __Pyx_PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
            else __PYX_ERR(0, 309, __pyx_L6_error)
          }
        }

        /* "wings/market/radar_relay_market.pyx":311
 *                 await self._poll_notifier.wait()
 * 
 *                 self._update_balances()             # <<<<<<<<<<<<<<
 *                 await asyncio.gather(
 *                     self._update_trading_rules(),
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_update_balances); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 311, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 311, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "wings/market/radar_relay_market.pyx":312
 * 
 *                 self._update_balances()
 *                 await asyncio.gather(             # <<<<<<<<<<<<<<
 *                     self._update_trading_rules(),
 *                     self._update_limit_order_status(),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 312, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_gather); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 312, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "wings/market/radar_relay_market.pyx":313
 *                 self._update_balances()
 *                 await asyncio.gather(
 *                     self._update_trading_rules(),             # <<<<<<<<<<<<<<
 *                     self._update_limit_order_status(),
 *                     self._update_market_order_status()
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_update_trading_rules); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 313, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 313, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "wings/market/radar_relay_market.pyx":314
 *                 await asyncio.gather(
 *                     self._update_trading_rules(),
 *                     self._update_limit_order_status(),             # <<<<<<<<<<<<<<
 *                     self._update_market_order_status()
 *                 )
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_update_limit_order_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 314, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_9 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_7 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 314, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "wings/market/radar_relay_market.pyx":315
 *                     self._update_trading_rules(),
 *                     self._update_limit_order_status(),
 *                     self._update_market_order_status()             # <<<<<<<<<<<<<<
 *                 )
 *             except asyncio.CancelledError:
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_update_market_order_status); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 315, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
          }
        }
        __pyx_t_8 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 315, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = NULL;
        __pyx_t_11 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_11 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_9, __pyx_t_6, __pyx_t_7, __pyx_t_8};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_11, 3+__pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L6_error)
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_9, __pyx_t_6, __pyx_t_7, __pyx_t_8};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_11, 3+__pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L6_error)
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        } else
        #endif
        {
          __pyx_t_10 = PyTuple_New(3+__pyx_t_11); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 312, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_10);
          if (__pyx_t_9) {
            __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __pyx_t_9 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_11, __pyx_t_6);
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_11, __pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_11, __pyx_t_8);
          __pyx_t_6 = 0;
          __pyx_t_7 = 0;
          __pyx_t_8 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_10, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_t_1);
          __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
          __Pyx_XGIVEREF(__pyx_t_2);
          __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
          __Pyx_XGIVEREF(__pyx_t_3);
          __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 2;
          return __pyx_r;
          __pyx_L15_resume_from_await:;
          __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
          __pyx_cur_scope->__pyx_t_0 = 0;
          __Pyx_XGOTREF(__pyx_t_1);
          __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
          __pyx_cur_scope->__pyx_t_1 = 0;
          __Pyx_XGOTREF(__pyx_t_2);
          __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
          __pyx_cur_scope->__pyx_t_2 = 0;
          __Pyx_XGOTREF(__pyx_t_3);
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 312, __pyx_L6_error)
        } else {
          PyObject* exc_type = __Pyx_PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
            else __PYX_ERR(0, 312, __pyx_L6_error)
          }
        }

        /* "wings/market/radar_relay_market.pyx":307
 *     async def _status_polling_loop(self):
 *         while True:
 *             try:             # <<<<<<<<<<<<<<
 *                 self._poll_notifier = asyncio.Event()
 *                 await self._poll_notifier.wait()
 */
      }
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L13_try_end;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "wings/market/radar_relay_market.pyx":317
 *                     self._update_market_order_status()
 *                 )
 *             except asyncio.CancelledError:             # <<<<<<<<<<<<<<
 *                 raise
 *             except Exception:
 */
      __Pyx_ErrFetch(&__pyx_t_4, &__pyx_t_5, &__pyx_t_10);
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 317, __pyx_L8_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_CancelledError); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 317, __pyx_L8_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_11 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_4, __pyx_t_7);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_ErrRestore(__pyx_t_4, __pyx_t_5, __pyx_t_10);
      __pyx_t_4 = 0; __pyx_t_5 = 0; __pyx_t_10 = 0;
      if (__pyx_t_11) {
        __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._status_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_5, &__pyx_t_4) < 0) __PYX_ERR(0, 317, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_t_4);

        /* "wings/market/radar_relay_market.pyx":318
 *                 )
 *             except asyncio.CancelledError:
 *                 raise             # <<<<<<<<<<<<<<
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching account updates.", exc_info=True)
 */
        __Pyx_GIVEREF(__pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_4);
        __Pyx_ErrRestoreWithState(__pyx_t_10, __pyx_t_5, __pyx_t_4);
        __pyx_t_10 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0; 
        __PYX_ERR(0, 318, __pyx_L8_except_error)
      }

      /* "wings/market/radar_relay_market.pyx":319
 *             except asyncio.CancelledError:
 *                 raise
 *             except Exception:             # <<<<<<<<<<<<<<
 *                 self.logger().error("Unexpected error while fetching account updates.", exc_info=True)
 *                 await asyncio.sleep(0.5)
 */
      __pyx_t_11 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
      if (__pyx_t_11) {
        __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._status_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_10) < 0) __PYX_ERR(0, 319, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_t_10);

        /* "wings/market/radar_relay_market.pyx":320
 *                 raise
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching account updates.", exc_info=True)             # <<<<<<<<<<<<<<
 *                 await asyncio.sleep(0.5)
 * 
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 320, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 320, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_error); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 320, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 320, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_7);
        if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_exc_info, Py_True) < 0) __PYX_ERR(0, 320, __pyx_L8_except_error)
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__7, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 320, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "wings/market/radar_relay_market.pyx":321
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching account updates.", exc_info=True)
 *                 await asyncio.sleep(0.5)             # <<<<<<<<<<<<<<
 * 
 *     def _update_balances(self):
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 321, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sleep); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 321, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_float_0_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_float_0_5);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 321, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_6);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_t_1);
          __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
          __Pyx_XGIVEREF(__pyx_t_2);
          __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
          __Pyx_XGIVEREF(__pyx_t_3);
          __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
          __Pyx_XGIVEREF(__pyx_t_4);
          __pyx_cur_scope->__pyx_t_3 = __pyx_t_4;
          __Pyx_XGIVEREF(__pyx_t_5);
          __pyx_cur_scope->__pyx_t_4 = __pyx_t_5;
          __Pyx_XGIVEREF(__pyx_t_10);
          __pyx_cur_scope->__pyx_t_5 = __pyx_t_10;
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_SwapException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 3;
          return __pyx_r;
          __pyx_L20_resume_from_await:;
          __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
          __pyx_cur_scope->__pyx_t_0 = 0;
          __Pyx_XGOTREF(__pyx_t_1);
          __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
          __pyx_cur_scope->__pyx_t_1 = 0;
          __Pyx_XGOTREF(__pyx_t_2);
          __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
          __pyx_cur_scope->__pyx_t_2 = 0;
          __Pyx_XGOTREF(__pyx_t_3);
          __pyx_t_4 = __pyx_cur_scope->__pyx_t_3;
          __pyx_cur_scope->__pyx_t_3 = 0;
          __Pyx_XGOTREF(__pyx_t_4);
          __pyx_t_5 = __pyx_cur_scope->__pyx_t_4;
          __pyx_cur_scope->__pyx_t_4 = 0;
          __Pyx_XGOTREF(__pyx_t_5);
          __pyx_t_10 = __pyx_cur_scope->__pyx_t_5;
          __pyx_cur_scope->__pyx_t_5 = 0;
          __Pyx_XGOTREF(__pyx_t_10);
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 321, __pyx_L8_except_error)
        } else {
          PyObject* exc_type = __Pyx_PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
            else __PYX_ERR(0, 321, __pyx_L8_except_error)
          }
        }
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L7_exception_handled;
      }
      goto __pyx_L8_except_error;
      __pyx_L8_except_error:;

      /* "wings/market/radar_relay_market.pyx":307
 *     async def _status_polling_loop(self):
 *         while True:
 *             try:             # <<<<<<<<<<<<<<
 *                 self._poll_notifier = asyncio.Event()
 *                 await self._poll_notifier.wait()
 */
      __Pyx_XGIVEREF(__pyx_t_1);
      __Pyx_XGIVEREF(__pyx_t_2);
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
      goto __pyx_L1_error;
      __pyx_L7_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_1);
      __Pyx_XGIVEREF(__pyx_t_2);
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
      __pyx_L13_try_end:;
    }
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":305
 *         return retval
 * 
 *     async def _status_polling_loop(self):             # <<<<<<<<<<<<<<
 *         while True:
 *             try:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("_status_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":323
 *                 await asyncio.sleep(0.5)
 * 
 *     def _update_balances(self):             # <<<<<<<<<<<<<<
 *         self._account_balances = self.wallet.get_all_balances()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_8_update_balances(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_8_update_balances(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_balances (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_7_update_balances(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_7_update_balances(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("_update_balances", 0);

  /* "wings/market/radar_relay_market.pyx":324
 * 
 *     def _update_balances(self):
 *         self._account_balances = self.wallet.get_all_balances()             # <<<<<<<<<<<<<<
 * 
 *     async def list_market(self) -> Dict[str, any]:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_wallet); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_get_all_balances); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_account_balances);
  __Pyx_DECREF(__pyx_v_self->_account_balances);
  __pyx_v_self->_account_balances = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":323
 *                 await asyncio.sleep(0.5)
 * 
 *     def _update_balances(self):             # <<<<<<<<<<<<<<
 *         self._account_balances = self.wallet.get_all_balances()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._update_balances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_11generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":326
 *         self._account_balances = self.wallet.get_all_balances()
 * 
 *     async def list_market(self) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets?include=base"
 *         return await self._api_request(http_method="get", url=url)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_10list_market(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_10list_market(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_market (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_9list_market(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_9list_market(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_market", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 326, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_11generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_list_market, __pyx_n_s_RadarRelayMarket_list_market, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 326, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.list_market", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_11generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_market", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L4_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 326, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":327
 * 
 *     async def list_market(self) -> Dict[str, any]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets?include=base"             # <<<<<<<<<<<<<<
 *         return await self._api_request(http_method="get", url=url)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_t_2, __pyx_kp_u_markets_include_base); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_url = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":328
 *     async def list_market(self) -> Dict[str, any]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets?include=base"
 *         return await self._api_request(http_method="get", url=url)             # <<<<<<<<<<<<<<
 * 
 *     async def _update_trading_rules(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_api_request); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_http_method, __pyx_n_u_get) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L4_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 328, __pyx_L1_error)
    __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_3 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":326
 *         self._account_balances = self.wallet.get_all_balances()
 * 
 *     async def list_market(self) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets?include=base"
 *         return await self._api_request(http_method="get", url=url)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("list_market", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_14generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":330
 *         return await self._api_request(http_method="get", url=url)
 * 
 *     async def _update_trading_rules(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_13_update_trading_rules(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_13_update_trading_rules(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_trading_rules (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_12_update_trading_rules(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_12_update_trading_rules(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_trading_rules", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 330, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_14generator2, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_update_trading_rules, __pyx_n_s_RadarRelayMarket__update_trading, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 330, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._update_trading_rules", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_14generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  double __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_trading_rules", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 330, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":332
 *     async def _update_trading_rules(self):
 *         cdef:
 *             double current_timestamp = self._current_timestamp             # <<<<<<<<<<<<<<
 * 
 *         if current_timestamp - self._last_update_trading_rules_timestamp > self.UPDATE_RULES_INTERVAL or len(self._trading_rules) < 1:
 */
  __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp;
  __pyx_cur_scope->__pyx_v_current_timestamp = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":334
 *             double current_timestamp = self._current_timestamp
 * 
 *         if current_timestamp - self._last_update_trading_rules_timestamp > self.UPDATE_RULES_INTERVAL or len(self._trading_rules) < 1:             # <<<<<<<<<<<<<<
 *             markets = await self.list_market()
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)
 */
  __pyx_t_3 = PyFloat_FromDouble((__pyx_cur_scope->__pyx_v_current_timestamp - __pyx_cur_scope->__pyx_v_self->_last_update_trading_rules_timestamp)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_UPDATE_RULES_INTERVAL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_t_4, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!__pyx_t_6) {
  } else {
    __pyx_t_2 = __pyx_t_6;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_5 = __pyx_cur_scope->__pyx_v_self->_trading_rules;
  __Pyx_INCREF(__pyx_t_5);
  if (unlikely(__pyx_t_5 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 334, __pyx_L1_error)
  }
  __pyx_t_7 = PyDict_Size(__pyx_t_5); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_6 = ((__pyx_t_7 < 1) != 0);
  __pyx_t_2 = __pyx_t_6;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_2) {

    /* "wings/market/radar_relay_market.pyx":335
 * 
 *         if current_timestamp - self._last_update_trading_rules_timestamp > self.UPDATE_RULES_INTERVAL or len(self._trading_rules) < 1:
 *             markets = await self.list_market()             # <<<<<<<<<<<<<<
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)
 *             self._trading_rules.clear()
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_list_market); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_5);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XGOTREF(__pyx_r);
    if (likely(__pyx_r)) {
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
      /* return from generator, awaiting value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_await:;
      if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 335, __pyx_L1_error)
      __pyx_t_5 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_5);
    } else {
      __pyx_t_5 = NULL;
      if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_5) < 0) __PYX_ERR(0, 335, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
    }
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_cur_scope->__pyx_v_markets = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":336
 *         if current_timestamp - self._last_update_trading_rules_timestamp > self.UPDATE_RULES_INTERVAL or len(self._trading_rules) < 1:
 *             markets = await self.list_market()
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)             # <<<<<<<<<<<<<<
 *             self._trading_rules.clear()
 *             for trading_rule in trading_rules_list:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule), __pyx_n_s_parse_exchange_info); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_cur_scope->__pyx_v_markets) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_cur_scope->__pyx_v_markets);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_cur_scope->__pyx_v_trading_rules_list = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":337
 *             markets = await self.list_market()
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)
 *             self._trading_rules.clear()             # <<<<<<<<<<<<<<
 *             for trading_rule in trading_rules_list:
 *                 self._trading_rules[trading_rule.symbol] = trading_rule
 */
    if (unlikely(__pyx_cur_scope->__pyx_v_self->_trading_rules == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "clear");
      __PYX_ERR(0, 337, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_PyDict_Clear(__pyx_cur_scope->__pyx_v_self->_trading_rules); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 337, __pyx_L1_error)

    /* "wings/market/radar_relay_market.pyx":338
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)
 *             self._trading_rules.clear()
 *             for trading_rule in trading_rules_list:             # <<<<<<<<<<<<<<
 *                 self._trading_rules[trading_rule.symbol] = trading_rule
 *             self._last_update_trading_rules_timestamp = current_timestamp
 */
    if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_trading_rules_list)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_trading_rules_list)) {
      __pyx_t_5 = __pyx_cur_scope->__pyx_v_trading_rules_list; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_trading_rules_list); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 338, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_9 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 338, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 338, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 338, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_9(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 338, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_trading_rule);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_trading_rule, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;

      /* "wings/market/radar_relay_market.pyx":339
 *             self._trading_rules.clear()
 *             for trading_rule in trading_rules_list:
 *                 self._trading_rules[trading_rule.symbol] = trading_rule             # <<<<<<<<<<<<<<
 *             self._last_update_trading_rules_timestamp = current_timestamp
 * 
 */
      if (unlikely(__pyx_cur_scope->__pyx_v_self->_trading_rules == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 339, __pyx_L1_error)
      }
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_trading_rule, __pyx_n_s_symbol); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 339, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyDict_SetItem(__pyx_cur_scope->__pyx_v_self->_trading_rules, __pyx_t_4, __pyx_cur_scope->__pyx_v_trading_rule) < 0)) __PYX_ERR(0, 339, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "wings/market/radar_relay_market.pyx":338
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)
 *             self._trading_rules.clear()
 *             for trading_rule in trading_rules_list:             # <<<<<<<<<<<<<<
 *                 self._trading_rules[trading_rule.symbol] = trading_rule
 *             self._last_update_trading_rules_timestamp = current_timestamp
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "wings/market/radar_relay_market.pyx":340
 *             for trading_rule in trading_rules_list:
 *                 self._trading_rules[trading_rule.symbol] = trading_rule
 *             self._last_update_trading_rules_timestamp = current_timestamp             # <<<<<<<<<<<<<<
 * 
 *     async def _update_limit_order_status(self):
 */
    __pyx_cur_scope->__pyx_v_self->_last_update_trading_rules_timestamp = __pyx_cur_scope->__pyx_v_current_timestamp;

    /* "wings/market/radar_relay_market.pyx":334
 *             double current_timestamp = self._current_timestamp
 * 
 *         if current_timestamp - self._last_update_trading_rules_timestamp > self.UPDATE_RULES_INTERVAL or len(self._trading_rules) < 1:             # <<<<<<<<<<<<<<
 *             markets = await self.list_market()
 *             trading_rules_list = TradingRule.parse_exchange_info(markets)
 */
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":330
 *         return await self._api_request(http_method="get", url=url)
 * 
 *     async def _update_trading_rules(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("_update_trading_rules", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_17generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":342
 *             self._last_update_trading_rules_timestamp = current_timestamp
 * 
 *     async def _update_limit_order_status(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_16_update_limit_order_status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_16_update_limit_order_status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_limit_order_status (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_15_update_limit_order_status(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_15_update_limit_order_status(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_limit_order_status", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 342, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_17generator3, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_update_limit_order_status, __pyx_n_s_RadarRelayMarket__update_limit_o, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._update_limit_order_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_17generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *(*__pyx_t_11)(PyObject *);
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  Py_UCS4 __pyx_t_14;
  int64_t __pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  int __pyx_t_20;
  PyObject *__pyx_t_21 = NULL;
  int __pyx_t_22;
  PyObject *__pyx_t_23 = NULL;
  PyObject *__pyx_t_24 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_limit_order_status", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 342, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":344
 *     async def _update_limit_order_status(self):
 *         cdef:
 *             double current_timestamp = self._current_timestamp             # <<<<<<<<<<<<<<
 * 
 *         if current_timestamp - self._last_update_limit_order_timestamp <= self.UPDATE_OPEN_LIMIT_ORDERS_INTERVAL:
 */
  __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp;
  __pyx_cur_scope->__pyx_v_current_timestamp = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":346
 *             double current_timestamp = self._current_timestamp
 * 
 *         if current_timestamp - self._last_update_limit_order_timestamp <= self.UPDATE_OPEN_LIMIT_ORDERS_INTERVAL:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble((__pyx_cur_scope->__pyx_v_current_timestamp - __pyx_cur_scope->__pyx_v_self->_last_update_limit_order_timestamp)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_UPDATE_OPEN_LIMIT_ORDERS_INTERVA); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_LE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_5) {

    /* "wings/market/radar_relay_market.pyx":347
 * 
 *         if current_timestamp - self._last_update_limit_order_timestamp <= self.UPDATE_OPEN_LIMIT_ORDERS_INTERVAL:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if len(self._in_flight_limit_orders) > 0:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "wings/market/radar_relay_market.pyx":346
 *             double current_timestamp = self._current_timestamp
 * 
 *         if current_timestamp - self._last_update_limit_order_timestamp <= self.UPDATE_OPEN_LIMIT_ORDERS_INTERVAL:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "wings/market/radar_relay_market.pyx":349
 *             return
 * 
 *         if len(self._in_flight_limit_orders) > 0:             # <<<<<<<<<<<<<<
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())
 *             tasks = [self.get_order(o.exchange_order_id)
 */
  __pyx_t_4 = __pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders;
  __Pyx_INCREF(__pyx_t_4);
  if (unlikely(__pyx_t_4 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 349, __pyx_L1_error)
  }
  __pyx_t_6 = PyDict_Size(__pyx_t_4); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = ((__pyx_t_6 > 0) != 0);
  if (__pyx_t_5) {

    /* "wings/market/radar_relay_market.pyx":350
 * 
 *         if len(self._in_flight_limit_orders) > 0:
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())             # <<<<<<<<<<<<<<
 *             tasks = [self.get_order(o.exchange_order_id)
 *                      for o in tracked_limit_orders
 */
    if (unlikely(__pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 350, __pyx_L1_error)
    }
    __pyx_t_4 = __Pyx_PyDict_Values(__pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PySequence_List(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_cur_scope->__pyx_v_tracked_limit_orders = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":351
 *         if len(self._in_flight_limit_orders) > 0:
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())
 *             tasks = [self.get_order(o.exchange_order_id)             # <<<<<<<<<<<<<<
 *                      for o in tracked_limit_orders
 *                      if o.exchange_order_id]
 */
    { /* enter inner scope */
      __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);

      /* "wings/market/radar_relay_market.pyx":352
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())
 *             tasks = [self.get_order(o.exchange_order_id)
 *                      for o in tracked_limit_orders             # <<<<<<<<<<<<<<
 *                      if o.exchange_order_id]
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 */
      __pyx_t_4 = __pyx_cur_scope->__pyx_v_tracked_limit_orders; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
      for (;;) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 352, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
        __Pyx_XGOTREF(__pyx_cur_scope->__pyx_7genexpr__pyx_v_o);
        __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_7genexpr__pyx_v_o, __pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_2);
        __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":353
 *             tasks = [self.get_order(o.exchange_order_id)
 *                      for o in tracked_limit_orders
 *                      if o.exchange_order_id]             # <<<<<<<<<<<<<<
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_7genexpr__pyx_v_o, __pyx_n_s_exchange_order_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 353, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_5) {

          /* "wings/market/radar_relay_market.pyx":351
 *         if len(self._in_flight_limit_orders) > 0:
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())
 *             tasks = [self.get_order(o.exchange_order_id)             # <<<<<<<<<<<<<<
 *                      for o in tracked_limit_orders
 *                      if o.exchange_order_id]
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_get_order); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_7genexpr__pyx_v_o, __pyx_n_s_exchange_order_id); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_9 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_9)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_9);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_9, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "wings/market/radar_relay_market.pyx":353
 *             tasks = [self.get_order(o.exchange_order_id)
 *                      for o in tracked_limit_orders
 *                      if o.exchange_order_id]             # <<<<<<<<<<<<<<
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 */
        }

        /* "wings/market/radar_relay_market.pyx":352
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())
 *             tasks = [self.get_order(o.exchange_order_id)
 *                      for o in tracked_limit_orders             # <<<<<<<<<<<<<<
 *                      if o.exchange_order_id]
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 */
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } /* exit inner scope */
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_cur_scope->__pyx_v_tasks = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":354
 *                      for o in tracked_limit_orders
 *                      if o.exchange_order_id]
 *             results = await asyncio.gather(*tasks, return_exceptions=True)             # <<<<<<<<<<<<<<
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 *                 if isinstance(order_update, Exception):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_gather); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PySequence_Tuple(__pyx_cur_scope->__pyx_v_tasks); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_return_exceptions, Py_True) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_7);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XGOTREF(__pyx_r);
    if (likely(__pyx_r)) {
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
      /* return from generator, awaiting value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L9_resume_from_await:;
      if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 354, __pyx_L1_error)
      __pyx_t_7 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_7);
    } else {
      __pyx_t_7 = NULL;
      if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_7) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_cur_scope->__pyx_v_results = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "wings/market/radar_relay_market.pyx":355
 *                      if o.exchange_order_id]
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):             # <<<<<<<<<<<<<<
 *                 if isinstance(order_update, Exception):
 *                     self.logger().error(f"Error fetching status update for the order "
 */
    __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_results);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_results);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_cur_scope->__pyx_v_results);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_tracked_limit_orders);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_tracked_limit_orders);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_cur_scope->__pyx_v_tracked_limit_orders);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_7 = __pyx_t_2; __Pyx_INCREF(__pyx_t_7); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 355, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 355, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_7))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 355, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 355, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 355, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 355, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_10(__pyx_t_7);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 355, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
        PyObject* sequence = __pyx_t_2;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 355, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        #else
        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_11 = Py_TYPE(__pyx_t_8)->tp_iternext;
        index = 0; __pyx_t_3 = __pyx_t_11(__pyx_t_8); if (unlikely(!__pyx_t_3)) goto __pyx_L12_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_3);
        index = 1; __pyx_t_4 = __pyx_t_11(__pyx_t_8); if (unlikely(!__pyx_t_4)) goto __pyx_L12_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_8), 2) < 0) __PYX_ERR(0, 355, __pyx_L1_error)
        __pyx_t_11 = NULL;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L13_unpacking_done;
        __pyx_L12_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 355, __pyx_L1_error)
        __pyx_L13_unpacking_done:;
      }
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_order_update);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_order_update, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_tracked_limit_order);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;

      /* "wings/market/radar_relay_market.pyx":356
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 *                 if isinstance(order_update, Exception):             # <<<<<<<<<<<<<<
 *                     self.logger().error(f"Error fetching status update for the order "
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")
 */
      __pyx_t_5 = __Pyx_PyException_Check(__pyx_cur_scope->__pyx_v_order_update); 
      __pyx_t_12 = (__pyx_t_5 != 0);
      if (__pyx_t_12) {

        /* "wings/market/radar_relay_market.pyx":357
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 *                 if isinstance(order_update, Exception):
 *                     self.logger().error(f"Error fetching status update for the order "             # <<<<<<<<<<<<<<
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")
 *                     continue
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 357, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 357, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_error); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 357, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 357, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_13 = 0;
        __pyx_t_14 = 127;
        __Pyx_INCREF(__pyx_kp_u_Error_fetching_status_update_for);
        __pyx_t_13 += 43;
        __Pyx_GIVEREF(__pyx_kp_u_Error_fetching_status_update_for);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Error_fetching_status_update_for);

        /* "wings/market/radar_relay_market.pyx":358
 *                 if isinstance(order_update, Exception):
 *                     self.logger().error(f"Error fetching status update for the order "
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")             # <<<<<<<<<<<<<<
 *                     continue
 *                 previous_is_done = tracked_limit_order.is_done
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 358, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_9 = __Pyx_PyObject_FormatSimple(__pyx_t_8, __pyx_empty_unicode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 358, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_9);
        __pyx_t_9 = 0;
        __Pyx_INCREF(__pyx_kp_u__8);
        __pyx_t_13 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__8);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__8);
        __pyx_t_9 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_order_update, __pyx_empty_unicode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 358, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_9);
        __pyx_t_9 = 0;
        __Pyx_INCREF(__pyx_kp_u__9);
        __pyx_t_13 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__9);
        PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u__9);

        /* "wings/market/radar_relay_market.pyx":357
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 *                 if isinstance(order_update, Exception):
 *                     self.logger().error(f"Error fetching status update for the order "             # <<<<<<<<<<<<<<
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")
 *                     continue
 */
        __pyx_t_9 = __Pyx_PyUnicode_Join(__pyx_t_4, 5, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 357, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_9);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 357, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":359
 *                     self.logger().error(f"Error fetching status update for the order "
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")
 *                     continue             # <<<<<<<<<<<<<<
 *                 previous_is_done = tracked_limit_order.is_done
 *                 previous_is_cancelled = tracked_limit_order.is_cancelled
 */
        goto __pyx_L10_continue;

        /* "wings/market/radar_relay_market.pyx":356
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):
 *                 if isinstance(order_update, Exception):             # <<<<<<<<<<<<<<
 *                     self.logger().error(f"Error fetching status update for the order "
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")
 */
      }

      /* "wings/market/radar_relay_market.pyx":360
 *                                         f"{tracked_limit_order.client_order_id}: {order_update}.")
 *                     continue
 *                 previous_is_done = tracked_limit_order.is_done             # <<<<<<<<<<<<<<
 *                 previous_is_cancelled = tracked_limit_order.is_cancelled
 *                 previous_is_failure = tracked_limit_order.is_failure
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_done); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_previous_is_done);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_previous_is_done, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":361
 *                     continue
 *                 previous_is_done = tracked_limit_order.is_done
 *                 previous_is_cancelled = tracked_limit_order.is_cancelled             # <<<<<<<<<<<<<<
 *                 previous_is_failure = tracked_limit_order.is_failure
 *                 previous_is_expired = tracked_limit_order.is_expired
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_cancelled); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 361, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_previous_is_cancelled);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_previous_is_cancelled, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":362
 *                 previous_is_done = tracked_limit_order.is_done
 *                 previous_is_cancelled = tracked_limit_order.is_cancelled
 *                 previous_is_failure = tracked_limit_order.is_failure             # <<<<<<<<<<<<<<
 *                 previous_is_expired = tracked_limit_order.is_expired
 *                 order_state = order_update["state"]
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_failure); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 362, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_previous_is_failure);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_previous_is_failure, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":363
 *                 previous_is_cancelled = tracked_limit_order.is_cancelled
 *                 previous_is_failure = tracked_limit_order.is_failure
 *                 previous_is_expired = tracked_limit_order.is_expired             # <<<<<<<<<<<<<<
 *                 order_state = order_update["state"]
 *                 order_remaining_base_token_amount = Decimal(order_update["remainingBaseTokenAmount"])
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_expired); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 363, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_previous_is_expired);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_previous_is_expired, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":364
 *                 previous_is_failure = tracked_limit_order.is_failure
 *                 previous_is_expired = tracked_limit_order.is_expired
 *                 order_state = order_update["state"]             # <<<<<<<<<<<<<<
 *                 order_remaining_base_token_amount = Decimal(order_update["remainingBaseTokenAmount"])
 *                 order_remaining_quote_token_amount = Decimal(order_update["remainingQuoteTokenAmount"])
 */
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_order_update, __pyx_n_u_state); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 364, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_order_state);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_order_state, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":365
 *                 previous_is_expired = tracked_limit_order.is_expired
 *                 order_state = order_update["state"]
 *                 order_remaining_base_token_amount = Decimal(order_update["remainingBaseTokenAmount"])             # <<<<<<<<<<<<<<
 *                 order_remaining_quote_token_amount = Decimal(order_update["remainingQuoteTokenAmount"])
 *                 order_executed_amount = Decimal(tracked_limit_order.available_amount) - order_remaining_base_token_amount
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 365, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_order_update, __pyx_n_u_remainingBaseTokenAmount); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 365, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_9);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 365, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_order_remaining_base_token_amount);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_order_remaining_base_token_amount, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":366
 *                 order_state = order_update["state"]
 *                 order_remaining_base_token_amount = Decimal(order_update["remainingBaseTokenAmount"])
 *                 order_remaining_quote_token_amount = Decimal(order_update["remainingQuoteTokenAmount"])             # <<<<<<<<<<<<<<
 *                 order_executed_amount = Decimal(tracked_limit_order.available_amount) - order_remaining_base_token_amount
 *                 total_executed_amount = Decimal(tracked_limit_order.amount) - order_remaining_base_token_amount
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 366, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_order_update, __pyx_n_u_remainingQuoteTokenAmount); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 366, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_9);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_order_remaining_quote_token_amount);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_order_remaining_quote_token_amount, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":367
 *                 order_remaining_base_token_amount = Decimal(order_update["remainingBaseTokenAmount"])
 *                 order_remaining_quote_token_amount = Decimal(order_update["remainingQuoteTokenAmount"])
 *                 order_executed_amount = Decimal(tracked_limit_order.available_amount) - order_remaining_base_token_amount             # <<<<<<<<<<<<<<
 *                 total_executed_amount = Decimal(tracked_limit_order.amount) - order_remaining_base_token_amount
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_available_amount_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_9);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Subtract(__pyx_t_2, __pyx_cur_scope->__pyx_v_order_remaining_base_token_amount); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_order_executed_amount);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_order_executed_amount, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __pyx_t_3 = 0;

      /* "wings/market/radar_relay_market.pyx":368
 *                 order_remaining_quote_token_amount = Decimal(order_update["remainingQuoteTokenAmount"])
 *                 order_executed_amount = Decimal(tracked_limit_order.available_amount) - order_remaining_base_token_amount
 *                 total_executed_amount = Decimal(tracked_limit_order.amount) - order_remaining_base_token_amount             # <<<<<<<<<<<<<<
 * 
 *                 tracked_limit_order.last_state = order_state
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_amount); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_9);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_Subtract(__pyx_t_3, __pyx_cur_scope->__pyx_v_order_remaining_base_token_amount); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_total_executed_amount);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_total_executed_amount, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;

      /* "wings/market/radar_relay_market.pyx":370
 *                 total_executed_amount = Decimal(tracked_limit_order.amount) - order_remaining_base_token_amount
 * 
 *                 tracked_limit_order.last_state = order_state             # <<<<<<<<<<<<<<
 *                 tracked_limit_order.executed_amount = total_executed_amount
 *                 tracked_limit_order.available_amount = order_remaining_base_token_amount
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_last_state_2, __pyx_cur_scope->__pyx_v_order_state) < 0) __PYX_ERR(0, 370, __pyx_L1_error)

      /* "wings/market/radar_relay_market.pyx":371
 * 
 *                 tracked_limit_order.last_state = order_state
 *                 tracked_limit_order.executed_amount = total_executed_amount             # <<<<<<<<<<<<<<
 *                 tracked_limit_order.available_amount = order_remaining_base_token_amount
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_executed_amount_2, __pyx_cur_scope->__pyx_v_total_executed_amount) < 0) __PYX_ERR(0, 371, __pyx_L1_error)

      /* "wings/market/radar_relay_market.pyx":372
 *                 tracked_limit_order.last_state = order_state
 *                 tracked_limit_order.executed_amount = total_executed_amount
 *                 tracked_limit_order.available_amount = order_remaining_base_token_amount             # <<<<<<<<<<<<<<
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount
 *                 if order_executed_amount > 0:
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_available_amount_2, __pyx_cur_scope->__pyx_v_order_remaining_base_token_amount) < 0) __PYX_ERR(0, 372, __pyx_L1_error)

      /* "wings/market/radar_relay_market.pyx":373
 *                 tracked_limit_order.executed_amount = total_executed_amount
 *                 tracked_limit_order.available_amount = order_remaining_base_token_amount
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount             # <<<<<<<<<<<<<<
 *                 if order_executed_amount > 0:
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset_amount_2, __pyx_cur_scope->__pyx_v_order_remaining_quote_token_amount) < 0) __PYX_ERR(0, 373, __pyx_L1_error)

      /* "wings/market/radar_relay_market.pyx":374
 *                 tracked_limit_order.available_amount = order_remaining_base_token_amount
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount
 *                 if order_executed_amount > 0:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "
 *                         f"limit order {tracked_limit_order.client_order_id}.")
 */
      __pyx_t_2 = PyObject_RichCompare(__pyx_cur_scope->__pyx_v_order_executed_amount, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L1_error)
      __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 374, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_12) {

        /* "wings/market/radar_relay_market.pyx":375
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount
 *                 if order_executed_amount > 0:
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "             # <<<<<<<<<<<<<<
 *                         f"limit order {tracked_limit_order.client_order_id}.")
 *                     self.c_trigger_event(
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
          }
        }
        __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_info); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyTuple_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_13 = 0;
        __pyx_t_14 = 127;
        __Pyx_INCREF(__pyx_kp_u_Filled);
        __pyx_t_13 += 7;
        __Pyx_GIVEREF(__pyx_kp_u_Filled);
        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Filled);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_order_executed_amount, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u_out_of);
        __pyx_t_13 += 8;
        __Pyx_GIVEREF(__pyx_kp_u_out_of);
        PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_out_of);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_amount); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_8);
        __pyx_t_8 = 0;
        __Pyx_INCREF(__pyx_kp_u_of_the_limit_order);
        __pyx_t_13 += 20;
        __Pyx_GIVEREF(__pyx_kp_u_of_the_limit_order);
        PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u_of_the_limit_order);

        /* "wings/market/radar_relay_market.pyx":376
 *                 if order_executed_amount > 0:
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "
 *                         f"limit order {tracked_limit_order.client_order_id}.")             # <<<<<<<<<<<<<<
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 376, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_8, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 376, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__9);
        __pyx_t_13 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__9);
        PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u__9);

        /* "wings/market/radar_relay_market.pyx":375
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount
 *                 if order_executed_amount > 0:
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "             # <<<<<<<<<<<<<<
 *                         f"limit order {tracked_limit_order.client_order_id}.")
 *                     self.c_trigger_event(
 */
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 7, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
          }
        }
        __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_4);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":378
 *                         f"limit order {tracked_limit_order.client_order_id}.")
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         OrderFilledEvent(
 *                             self._current_timestamp,
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_ORDER_FILLED_EVENT_TAG); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_2); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 378, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":379
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 *                         OrderFilledEvent(             # <<<<<<<<<<<<<<
 *                             self._current_timestamp,
 *                             tracked_limit_order.client_order_id,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_OrderFilledEvent); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 379, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);

        /* "wings/market/radar_relay_market.pyx":380
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 *                         OrderFilledEvent(
 *                             self._current_timestamp,             # <<<<<<<<<<<<<<
 *                             tracked_limit_order.client_order_id,
 *                             tracked_limit_order.symbol,
 */
        __pyx_t_4 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 380, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);

        /* "wings/market/radar_relay_market.pyx":381
 *                         OrderFilledEvent(
 *                             self._current_timestamp,
 *                             tracked_limit_order.client_order_id,             # <<<<<<<<<<<<<<
 *                             tracked_limit_order.symbol,
 *                             TradeType.BUY if tracked_limit_order.is_buy else TradeType.SELL,
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 381, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);

        /* "wings/market/radar_relay_market.pyx":382
 *                             self._current_timestamp,
 *                             tracked_limit_order.client_order_id,
 *                             tracked_limit_order.symbol,             # <<<<<<<<<<<<<<
 *                             TradeType.BUY if tracked_limit_order.is_buy else TradeType.SELL,
 *                             OrderType.LIMIT,
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_symbol); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 382, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);

        /* "wings/market/radar_relay_market.pyx":383
 *                             tracked_limit_order.client_order_id,
 *                             tracked_limit_order.symbol,
 *                             TradeType.BUY if tracked_limit_order.is_buy else TradeType.SELL,             # <<<<<<<<<<<<<<
 *                             OrderType.LIMIT,
 *                             tracked_limit_order.price,
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_buy); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_17); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 383, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (__pyx_t_12) {
          __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_BUY); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_16 = __pyx_t_18;
          __pyx_t_18 = 0;
        } else {
          __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_SELL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_16 = __pyx_t_17;
          __pyx_t_17 = 0;
        }

        /* "wings/market/radar_relay_market.pyx":384
 *                             tracked_limit_order.symbol,
 *                             TradeType.BUY if tracked_limit_order.is_buy else TradeType.SELL,
 *                             OrderType.LIMIT,             # <<<<<<<<<<<<<<
 *                             tracked_limit_order.price,
 *                             order_executed_amount
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 384, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_LIMIT); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 384, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

        /* "wings/market/radar_relay_market.pyx":385
 *                             TradeType.BUY if tracked_limit_order.is_buy else TradeType.SELL,
 *                             OrderType.LIMIT,
 *                             tracked_limit_order.price,             # <<<<<<<<<<<<<<
 *                             order_executed_amount
 *                         )
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_price); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 385, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);

        /* "wings/market/radar_relay_market.pyx":386
 *                             OrderType.LIMIT,
 *                             tracked_limit_order.price,
 *                             order_executed_amount             # <<<<<<<<<<<<<<
 *                         )
 *                     )
 */
        __pyx_t_19 = NULL;
        __pyx_t_20 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_20 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[8] = {__pyx_t_19, __pyx_t_4, __pyx_t_3, __pyx_t_8, __pyx_t_16, __pyx_t_18, __pyx_t_17, __pyx_cur_scope->__pyx_v_order_executed_amount};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_20, 7+__pyx_t_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[8] = {__pyx_t_19, __pyx_t_4, __pyx_t_3, __pyx_t_8, __pyx_t_16, __pyx_t_18, __pyx_t_17, __pyx_cur_scope->__pyx_v_order_executed_amount};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_20, 7+__pyx_t_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        } else
        #endif
        {
          __pyx_t_21 = PyTuple_New(7+__pyx_t_20); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          if (__pyx_t_19) {
            __Pyx_GIVEREF(__pyx_t_19); PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_t_19); __pyx_t_19 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_21, 0+__pyx_t_20, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_21, 1+__pyx_t_20, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_21, 2+__pyx_t_20, __pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_21, 3+__pyx_t_20, __pyx_t_16);
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_21, 4+__pyx_t_20, __pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_17);
          PyTuple_SET_ITEM(__pyx_t_21, 5+__pyx_t_20, __pyx_t_17);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_executed_amount);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_executed_amount);
          PyTuple_SET_ITEM(__pyx_t_21, 6+__pyx_t_20, __pyx_cur_scope->__pyx_v_order_executed_amount);
          __pyx_t_4 = 0;
          __pyx_t_3 = 0;
          __pyx_t_8 = 0;
          __pyx_t_16 = 0;
          __pyx_t_18 = 0;
          __pyx_t_17 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_21, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        }
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":377
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "
 *                         f"limit order {tracked_limit_order.client_order_id}.")
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 *                         OrderFilledEvent(
 */
        __pyx_t_9 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 377, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":374
 *                 tracked_limit_order.available_amount = order_remaining_base_token_amount
 *                 tracked_limit_order.quote_asset_amount = order_remaining_quote_token_amount
 *                 if order_executed_amount > 0:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"Filled {order_executed_amount} out of {tracked_limit_order.amount} of the "
 *                         f"limit order {tracked_limit_order.client_order_id}.")
 */
      }

      /* "wings/market/radar_relay_market.pyx":391
 * 
 *                 # do not retrigger order events if order was already in that state previously
 *                 if not previous_is_cancelled and tracked_limit_order.is_cancelled:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has cancelled according "
 *                                        f"to order status API.")
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_previous_is_cancelled); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 391, __pyx_L1_error)
      __pyx_t_22 = ((!__pyx_t_5) != 0);
      if (__pyx_t_22) {
      } else {
        __pyx_t_12 = __pyx_t_22;
        goto __pyx_L17_bool_binop_done;
      }
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_cancelled); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 391, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 391, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_12 = __pyx_t_22;
      __pyx_L17_bool_binop_done:;
      if (__pyx_t_12) {

        /* "wings/market/radar_relay_market.pyx":392
 *                 # do not retrigger order events if order was already in that state previously
 *                 if not previous_is_cancelled and tracked_limit_order.is_cancelled:
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has cancelled according "             # <<<<<<<<<<<<<<
 *                                        f"to order status API.")
 *                     self.c_trigger_event(
 */
        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_17 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_21))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_21);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_21, function);
          }
        }
        __pyx_t_2 = (__pyx_t_17) ? __Pyx_PyObject_CallOneArg(__pyx_t_21, __pyx_t_17) : __Pyx_PyObject_CallNoArg(__pyx_t_21);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_info); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_13 = 0;
        __pyx_t_14 = 127;
        __Pyx_INCREF(__pyx_kp_u_The_limit_order);
        __pyx_t_13 += 16;
        __Pyx_GIVEREF(__pyx_kp_u_The_limit_order);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_The_limit_order);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_17, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_INCREF(__pyx_kp_u_has_cancelled_according_to_orde);
        __pyx_t_13 += 45;
        __Pyx_GIVEREF(__pyx_kp_u_has_cancelled_according_to_orde);
        PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_has_cancelled_according_to_orde);
        __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_21))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_21);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_21, function);
          }
        }
        __pyx_t_9 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_21, __pyx_t_2, __pyx_t_18) : __Pyx_PyObject_CallOneArg(__pyx_t_21, __pyx_t_18);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":395
 *                                        f"to order status API.")
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_CANCELLED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         OrderCancelledEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 *                     )
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_ORDER_CANCELLED_EVENT_TAG); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 395, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_9); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 395, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":396
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_CANCELLED_EVENT_TAG,
 *                         OrderCancelledEvent(self._current_timestamp, tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_OrderCancelledEvent); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 396, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 396, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 396, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_17 = NULL;
        __pyx_t_20 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_21))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_21);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_21, function);
            __pyx_t_20 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_21)) {
          PyObject *__pyx_temp[3] = {__pyx_t_17, __pyx_t_18, __pyx_t_2};
          __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_21, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 396, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_21)) {
          PyObject *__pyx_temp[3] = {__pyx_t_17, __pyx_t_18, __pyx_t_2};
          __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_21, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 396, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        } else
        #endif
        {
          __pyx_t_16 = PyTuple_New(2+__pyx_t_20); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 396, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          if (__pyx_t_17) {
            __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_17); __pyx_t_17 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_20, __pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_20, __pyx_t_2);
          __pyx_t_18 = 0;
          __pyx_t_2 = 0;
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_21, __pyx_t_16, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 396, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

        /* "wings/market/radar_relay_market.pyx":394
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has cancelled according "
 *                                        f"to order status API.")
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_ORDER_CANCELLED_EVENT_TAG,
 *                         OrderCancelledEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 */
        __pyx_t_21 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_9); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 394, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

        /* "wings/market/radar_relay_market.pyx":398
 *                         OrderCancelledEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *                 elif not previous_is_expired and tracked_limit_order.is_expired:
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has expired according "
 */
        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        if (!(likely(PyUnicode_CheckExact(__pyx_t_21))||((__pyx_t_21) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_21)->tp_name), 0))) __PYX_ERR(0, 398, __pyx_L1_error)
        __pyx_t_9 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_expire_order(__pyx_cur_scope->__pyx_v_self, ((PyObject*)__pyx_t_21)); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":391
 * 
 *                 # do not retrigger order events if order was already in that state previously
 *                 if not previous_is_cancelled and tracked_limit_order.is_cancelled:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has cancelled according "
 *                                        f"to order status API.")
 */
        goto __pyx_L16;
      }

      /* "wings/market/radar_relay_market.pyx":399
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_expired and tracked_limit_order.is_expired:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has expired according "
 *                                        f"to order status API.")
 */
      __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_previous_is_expired); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 399, __pyx_L1_error)
      __pyx_t_5 = ((!__pyx_t_22) != 0);
      if (__pyx_t_5) {
      } else {
        __pyx_t_12 = __pyx_t_5;
        goto __pyx_L19_bool_binop_done;
      }
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_expired); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 399, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 399, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_12 = __pyx_t_5;
      __pyx_L19_bool_binop_done:;
      if (__pyx_t_12) {

        /* "wings/market/radar_relay_market.pyx":400
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_expired and tracked_limit_order.is_expired:
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has expired according "             # <<<<<<<<<<<<<<
 *                                        f"to order status API.")
 *                     self.c_trigger_event(
 */
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
          }
        }
        __pyx_t_21 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_16, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_16);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_21, __pyx_n_s_info); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __pyx_t_21 = PyTuple_New(3); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_13 = 0;
        __pyx_t_14 = 127;
        __Pyx_INCREF(__pyx_kp_u_The_limit_order);
        __pyx_t_13 += 16;
        __Pyx_GIVEREF(__pyx_kp_u_The_limit_order);
        PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_kp_u_The_limit_order);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_21, 1, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_INCREF(__pyx_kp_u_has_expired_according_to_order);
        __pyx_t_13 += 43;
        __Pyx_GIVEREF(__pyx_kp_u_has_expired_according_to_order);
        PyTuple_SET_ITEM(__pyx_t_21, 2, __pyx_kp_u_has_expired_according_to_order);
        __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_21, 3, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __pyx_t_21 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_21)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_21);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
          }
        }
        __pyx_t_9 = (__pyx_t_21) ? __Pyx_PyObject_Call2Args(__pyx_t_16, __pyx_t_21, __pyx_t_18) : __Pyx_PyObject_CallOneArg(__pyx_t_16, __pyx_t_18);
        __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":403
 *                                        f"to order status API.")
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_EXPIRED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         OrderExpiredEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 *                     )
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_ORDER_EXPIRED_EVENT_TAG); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 403, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_9); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 403, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":404
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_EXPIRED_EVENT_TAG,
 *                         OrderExpiredEvent(self._current_timestamp, tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_OrderExpiredEvent); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 404, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 404, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 404, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_2 = NULL;
        __pyx_t_20 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_20 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_18, __pyx_t_21};
          __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_18, __pyx_t_21};
          __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        } else
        #endif
        {
          __pyx_t_17 = PyTuple_New(2+__pyx_t_20); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          if (__pyx_t_2) {
            __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_2); __pyx_t_2 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_20, __pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_21);
          PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_20, __pyx_t_21);
          __pyx_t_18 = 0;
          __pyx_t_21 = 0;
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_17, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "wings/market/radar_relay_market.pyx":402
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has expired according "
 *                                        f"to order status API.")
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_ORDER_EXPIRED_EVENT_TAG,
 *                         OrderExpiredEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 */
        __pyx_t_16 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 402, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "wings/market/radar_relay_market.pyx":406
 *                         OrderExpiredEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *                 elif not previous_is_failure and tracked_limit_order.is_failure:
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has failed"
 */
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (!(likely(PyUnicode_CheckExact(__pyx_t_16))||((__pyx_t_16) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_16)->tp_name), 0))) __PYX_ERR(0, 406, __pyx_L1_error)
        __pyx_t_9 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_expire_order(__pyx_cur_scope->__pyx_v_self, ((PyObject*)__pyx_t_16)); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":399
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_expired and tracked_limit_order.is_expired:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has expired according "
 *                                        f"to order status API.")
 */
        goto __pyx_L16;
      }

      /* "wings/market/radar_relay_market.pyx":407
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_failure and tracked_limit_order.is_failure:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has failed"
 *                                        f"according to order status API.")
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_previous_is_failure); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 407, __pyx_L1_error)
      __pyx_t_22 = ((!__pyx_t_5) != 0);
      if (__pyx_t_22) {
      } else {
        __pyx_t_12 = __pyx_t_22;
        goto __pyx_L21_bool_binop_done;
      }
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_failure); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 407, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 407, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_12 = __pyx_t_22;
      __pyx_L21_bool_binop_done:;
      if (__pyx_t_12) {

        /* "wings/market/radar_relay_market.pyx":408
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_failure and tracked_limit_order.is_failure:
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has failed"             # <<<<<<<<<<<<<<
 *                                        f"according to order status API.")
 *                     self.c_trigger_event(
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_21 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_21)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_21);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
          }
        }
        __pyx_t_16 = (__pyx_t_21) ? __Pyx_PyObject_CallOneArg(__pyx_t_17, __pyx_t_21) : __Pyx_PyObject_CallNoArg(__pyx_t_17);
        __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
        if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_info); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = PyTuple_New(3); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_13 = 0;
        __pyx_t_14 = 127;
        __Pyx_INCREF(__pyx_kp_u_The_limit_order);
        __pyx_t_13 += 16;
        __Pyx_GIVEREF(__pyx_kp_u_The_limit_order);
        PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_kp_u_The_limit_order);
        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_21, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_14;
        __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_INCREF(__pyx_kp_u_has_failedaccording_to_order_st);
        __pyx_t_13 += 41;
        __Pyx_GIVEREF(__pyx_kp_u_has_failedaccording_to_order_st);
        PyTuple_SET_ITEM(__pyx_t_16, 2, __pyx_kp_u_has_failedaccording_to_order_st);
        __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_16, 3, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
          }
        }
        __pyx_t_9 = (__pyx_t_16) ? __Pyx_PyObject_Call2Args(__pyx_t_17, __pyx_t_16, __pyx_t_18) : __Pyx_PyObject_CallOneArg(__pyx_t_17, __pyx_t_18);
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":411
 *                                        f"according to order status API.")
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 *                     )
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_9); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":412
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_MarketTransactionFailureEvent); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 412, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 412, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 412, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_21 = NULL;
        __pyx_t_20 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_21)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_21);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_20 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_17)) {
          PyObject *__pyx_temp[3] = {__pyx_t_21, __pyx_t_18, __pyx_t_16};
          __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_17, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_17)) {
          PyObject *__pyx_temp[3] = {__pyx_t_21, __pyx_t_18, __pyx_t_16};
          __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_17, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        } else
        #endif
        {
          __pyx_t_2 = PyTuple_New(2+__pyx_t_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (__pyx_t_21) {
            __Pyx_GIVEREF(__pyx_t_21); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_21); __pyx_t_21 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_20, __pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_20, __pyx_t_16);
          __pyx_t_18 = 0;
          __pyx_t_16 = 0;
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_t_2, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

        /* "wings/market/radar_relay_market.pyx":410
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has failed"
 *                                        f"according to order status API.")
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 */
        __pyx_t_17 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_9); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

        /* "wings/market/radar_relay_market.pyx":414
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_limit_order.client_order_id)
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *                 elif not previous_is_done and tracked_limit_order.is_done:
 *                     if tracked_limit_order.is_buy:
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 414, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        if (!(likely(PyUnicode_CheckExact(__pyx_t_17))||((__pyx_t_17) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_17)->tp_name), 0))) __PYX_ERR(0, 414, __pyx_L1_error)
        __pyx_t_9 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_expire_order(__pyx_cur_scope->__pyx_v_self, ((PyObject*)__pyx_t_17)); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 414, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":407
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_failure and tracked_limit_order.is_failure:             # <<<<<<<<<<<<<<
 *                     self.logger().info(f"The limit order {tracked_limit_order.client_order_id} has failed"
 *                                        f"according to order status API.")
 */
        goto __pyx_L16;
      }

      /* "wings/market/radar_relay_market.pyx":415
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_done and tracked_limit_order.is_done:             # <<<<<<<<<<<<<<
 *                     if tracked_limit_order.is_buy:
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"
 */
      __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_previous_is_done); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 415, __pyx_L1_error)
      __pyx_t_5 = ((!__pyx_t_22) != 0);
      if (__pyx_t_5) {
      } else {
        __pyx_t_12 = __pyx_t_5;
        goto __pyx_L23_bool_binop_done;
      }
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_done); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 415, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 415, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_12 = __pyx_t_5;
      __pyx_L23_bool_binop_done:;
      if (__pyx_t_12) {

        /* "wings/market/radar_relay_market.pyx":416
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_done and tracked_limit_order.is_done:
 *                     if tracked_limit_order.is_buy:             # <<<<<<<<<<<<<<
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"
 *                                            f"has completed according to order status API.")
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_is_buy); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (__pyx_t_12) {

          /* "wings/market/radar_relay_market.pyx":417
 *                 elif not previous_is_done and tracked_limit_order.is_done:
 *                     if tracked_limit_order.is_buy:
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"             # <<<<<<<<<<<<<<
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_16 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_16)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_16);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_17 = (__pyx_t_16) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_16) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_info); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_17 = PyTuple_New(3); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_13 = 0;
          __pyx_t_14 = 127;
          __Pyx_INCREF(__pyx_kp_u_The_limit_buy_order);
          __pyx_t_13 += 20;
          __Pyx_GIVEREF(__pyx_kp_u_The_limit_buy_order);
          PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_kp_u_The_limit_buy_order);
          __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_16, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_14;
          __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_17, 1, __pyx_t_18);
          __pyx_t_18 = 0;
          __Pyx_INCREF(__pyx_kp_u_has_completed_according_to_order);
          __pyx_t_13 += 44;
          __Pyx_GIVEREF(__pyx_kp_u_has_completed_according_to_order);
          PyTuple_SET_ITEM(__pyx_t_17, 2, __pyx_kp_u_has_completed_according_to_order);
          __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_17, 3, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_17 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_17)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_17);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_9 = (__pyx_t_17) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_17, __pyx_t_18) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_18);
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 417, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

          /* "wings/market/radar_relay_market.pyx":419
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_limit_order.client_order_id,
 */
          __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_BUY_ORDER_COMPLETED_EVENT); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_9); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

          /* "wings/market/radar_relay_market.pyx":420
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 *                                              BuyOrderCompletedEvent(self._current_timestamp,             # <<<<<<<<<<<<<<
 *                                                                     tracked_limit_order.client_order_id,
 *                                                                     tracked_limit_order.base_asset,
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BuyOrderCompletedEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 420, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);

          /* "wings/market/radar_relay_market.pyx":421
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_limit_order.client_order_id,             # <<<<<<<<<<<<<<
 *                                                                     tracked_limit_order.base_asset,
 *                                                                     tracked_limit_order.quote_asset,
 */
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 421, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);

          /* "wings/market/radar_relay_market.pyx":422
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_limit_order.client_order_id,
 *                                                                     tracked_limit_order.base_asset,             # <<<<<<<<<<<<<<
 *                                                                     tracked_limit_order.quote_asset,
 *                                                                     tracked_limit_order.quote_asset,
 */
          __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_base_asset); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 422, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);

          /* "wings/market/radar_relay_market.pyx":423
 *                                                                     tracked_limit_order.client_order_id,
 *                                                                     tracked_limit_order.base_asset,
 *                                                                     tracked_limit_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                     tracked_limit_order.quote_asset,
 *                                                                     float(tracked_limit_order.executed_amount),
 */
          __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);

          /* "wings/market/radar_relay_market.pyx":424
 *                                                                     tracked_limit_order.base_asset,
 *                                                                     tracked_limit_order.quote_asset,
 *                                                                     tracked_limit_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                     float(tracked_limit_order.executed_amount),
 *                                                                     float(tracked_limit_order.quote_asset_amount),
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "wings/market/radar_relay_market.pyx":425
 *                                                                     tracked_limit_order.quote_asset,
 *                                                                     tracked_limit_order.quote_asset,
 *                                                                     float(tracked_limit_order.executed_amount),             # <<<<<<<<<<<<<<
 *                                                                     float(tracked_limit_order.quote_asset_amount),
 *                                                                     float(tracked_limit_order.gas_fee_amount)))
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_executed_amount_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyNumber_Float(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 425, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "wings/market/radar_relay_market.pyx":426
 *                                                                     tracked_limit_order.quote_asset,
 *                                                                     float(tracked_limit_order.executed_amount),
 *                                                                     float(tracked_limit_order.quote_asset_amount),             # <<<<<<<<<<<<<<
 *                                                                     float(tracked_limit_order.gas_fee_amount)))
 *                     else:
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset_amount_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 426, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_19 = __Pyx_PyNumber_Float(__pyx_t_3); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 426, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "wings/market/radar_relay_market.pyx":427
 *                                                                     float(tracked_limit_order.executed_amount),
 *                                                                     float(tracked_limit_order.quote_asset_amount),
 *                                                                     float(tracked_limit_order.gas_fee_amount)))             # <<<<<<<<<<<<<<
 *                     else:
 *                         self.logger().info(f"The limit sell order {tracked_limit_order.client_order_id}"
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_gas_fee_amount_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 427, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_23 = __Pyx_PyNumber_Float(__pyx_t_3); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 427, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_23);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_20 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_20 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[9] = {__pyx_t_3, __pyx_t_18, __pyx_t_17, __pyx_t_16, __pyx_t_21, __pyx_t_8, __pyx_t_4, __pyx_t_19, __pyx_t_23};
            __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_20, 8+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[9] = {__pyx_t_3, __pyx_t_18, __pyx_t_17, __pyx_t_16, __pyx_t_21, __pyx_t_8, __pyx_t_4, __pyx_t_19, __pyx_t_23};
            __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_20, 8+__pyx_t_20); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
          } else
          #endif
          {
            __pyx_t_24 = PyTuple_New(8+__pyx_t_20); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_24);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_GIVEREF(__pyx_t_18);
            PyTuple_SET_ITEM(__pyx_t_24, 0+__pyx_t_20, __pyx_t_18);
            __Pyx_GIVEREF(__pyx_t_17);
            PyTuple_SET_ITEM(__pyx_t_24, 1+__pyx_t_20, __pyx_t_17);
            __Pyx_GIVEREF(__pyx_t_16);
            PyTuple_SET_ITEM(__pyx_t_24, 2+__pyx_t_20, __pyx_t_16);
            __Pyx_GIVEREF(__pyx_t_21);
            PyTuple_SET_ITEM(__pyx_t_24, 3+__pyx_t_20, __pyx_t_21);
            __Pyx_GIVEREF(__pyx_t_8);
            PyTuple_SET_ITEM(__pyx_t_24, 4+__pyx_t_20, __pyx_t_8);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_24, 5+__pyx_t_20, __pyx_t_4);
            __Pyx_GIVEREF(__pyx_t_19);
            PyTuple_SET_ITEM(__pyx_t_24, 6+__pyx_t_20, __pyx_t_19);
            __Pyx_GIVEREF(__pyx_t_23);
            PyTuple_SET_ITEM(__pyx_t_24, 7+__pyx_t_20, __pyx_t_23);
            __pyx_t_18 = 0;
            __pyx_t_17 = 0;
            __pyx_t_16 = 0;
            __pyx_t_21 = 0;
            __pyx_t_8 = 0;
            __pyx_t_4 = 0;
            __pyx_t_19 = 0;
            __pyx_t_23 = 0;
            __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_24, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "wings/market/radar_relay_market.pyx":419
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_limit_order.client_order_id,
 */
          __pyx_t_2 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "wings/market/radar_relay_market.pyx":416
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_done and tracked_limit_order.is_done:
 *                     if tracked_limit_order.is_buy:             # <<<<<<<<<<<<<<
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"
 *                                            f"has completed according to order status API.")
 */
          goto __pyx_L25;
        }

        /* "wings/market/radar_relay_market.pyx":429
 *                                                                     float(tracked_limit_order.gas_fee_amount)))
 *                     else:
 *                         self.logger().info(f"The limit sell order {tracked_limit_order.client_order_id}"             # <<<<<<<<<<<<<<
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 */
        /*else*/ {
          __pyx_t_24 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __pyx_t_23 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_24))) {
            __pyx_t_23 = PyMethod_GET_SELF(__pyx_t_24);
            if (likely(__pyx_t_23)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_24);
              __Pyx_INCREF(__pyx_t_23);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_24, function);
            }
          }
          __pyx_t_9 = (__pyx_t_23) ? __Pyx_PyObject_CallOneArg(__pyx_t_24, __pyx_t_23) : __Pyx_PyObject_CallNoArg(__pyx_t_24);
          __Pyx_XDECREF(__pyx_t_23); __pyx_t_23 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          __pyx_t_24 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_info); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_13 = 0;
          __pyx_t_14 = 127;
          __Pyx_INCREF(__pyx_kp_u_The_limit_sell_order);
          __pyx_t_13 += 21;
          __Pyx_GIVEREF(__pyx_kp_u_The_limit_sell_order);
          PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_kp_u_The_limit_sell_order);
          __pyx_t_23 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_23);
          __pyx_t_19 = __Pyx_PyObject_FormatSimple(__pyx_t_23, __pyx_empty_unicode); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
          __pyx_t_14 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_19) > __pyx_t_14) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_19) : __pyx_t_14;
          __pyx_t_13 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_19);
          __Pyx_GIVEREF(__pyx_t_19);
          PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_19);
          __pyx_t_19 = 0;
          __Pyx_INCREF(__pyx_kp_u_has_completed_according_to_order);
          __pyx_t_13 += 44;
          __Pyx_GIVEREF(__pyx_kp_u_has_completed_according_to_order);
          PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_kp_u_has_completed_according_to_order);
          __pyx_t_19 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, __pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_24))) {
            __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_24);
            if (likely(__pyx_t_9)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_24);
              __Pyx_INCREF(__pyx_t_9);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_24, function);
            }
          }
          __pyx_t_2 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_24, __pyx_t_9, __pyx_t_19) : __Pyx_PyObject_CallOneArg(__pyx_t_24, __pyx_t_19);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "wings/market/radar_relay_market.pyx":431
 *                         self.logger().info(f"The limit sell order {tracked_limit_order.client_order_id}"
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_limit_order.client_order_id,
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_SELL_ORDER_COMPLETED_EVEN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 431, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_2); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 431, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "wings/market/radar_relay_market.pyx":432
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 *                                              SellOrderCompletedEvent(self._current_timestamp,             # <<<<<<<<<<<<<<
 *                                                                      tracked_limit_order.client_order_id,
 *                                                                      tracked_limit_order.base_asset,
 */
          __Pyx_GetModuleGlobalName(__pyx_t_24, __pyx_n_s_SellOrderCompletedEvent); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 432, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __pyx_t_19 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 432, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);

          /* "wings/market/radar_relay_market.pyx":433
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_limit_order.client_order_id,             # <<<<<<<<<<<<<<
 *                                                                      tracked_limit_order.base_asset,
 *                                                                      tracked_limit_order.quote_asset,
 */
          __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);

          /* "wings/market/radar_relay_market.pyx":434
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_limit_order.client_order_id,
 *                                                                      tracked_limit_order.base_asset,             # <<<<<<<<<<<<<<
 *                                                                      tracked_limit_order.quote_asset,
 *                                                                      tracked_limit_order.quote_asset,
 */
          __pyx_t_23 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_base_asset); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 434, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_23);

          /* "wings/market/radar_relay_market.pyx":435
 *                                                                      tracked_limit_order.client_order_id,
 *                                                                      tracked_limit_order.base_asset,
 *                                                                      tracked_limit_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                      tracked_limit_order.quote_asset,
 *                                                                      float(tracked_limit_order.executed_amount),
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);

          /* "wings/market/radar_relay_market.pyx":436
 *                                                                      tracked_limit_order.base_asset,
 *                                                                      tracked_limit_order.quote_asset,
 *                                                                      tracked_limit_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                      float(tracked_limit_order.executed_amount),
 *                                                                      float(tracked_limit_order.quote_asset_amount),
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "wings/market/radar_relay_market.pyx":437
 *                                                                      tracked_limit_order.quote_asset,
 *                                                                      tracked_limit_order.quote_asset,
 *                                                                      float(tracked_limit_order.executed_amount),             # <<<<<<<<<<<<<<
 *                                                                      float(tracked_limit_order.quote_asset_amount),
 *                                                                      float(tracked_limit_order.gas_fee_amount)))
 */
          __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_executed_amount_2); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __pyx_t_16 = __Pyx_PyNumber_Float(__pyx_t_21); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

          /* "wings/market/radar_relay_market.pyx":438
 *                                                                      tracked_limit_order.quote_asset,
 *                                                                      float(tracked_limit_order.executed_amount),
 *                                                                      float(tracked_limit_order.quote_asset_amount),             # <<<<<<<<<<<<<<
 *                                                                      float(tracked_limit_order.gas_fee_amount)))
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 */
          __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_quote_asset_amount_2); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 438, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __pyx_t_17 = __Pyx_PyNumber_Float(__pyx_t_21); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 438, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

          /* "wings/market/radar_relay_market.pyx":439
 *                                                                      float(tracked_limit_order.executed_amount),
 *                                                                      float(tracked_limit_order.quote_asset_amount),
 *                                                                      float(tracked_limit_order.gas_fee_amount)))             # <<<<<<<<<<<<<<
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *         self._last_update_limit_order_timestamp = current_timestamp
 */
          __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_gas_fee_amount_2); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 439, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __pyx_t_18 = __Pyx_PyNumber_Float(__pyx_t_21); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 439, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
          __pyx_t_21 = NULL;
          __pyx_t_20 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_24))) {
            __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_24);
            if (likely(__pyx_t_21)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_24);
              __Pyx_INCREF(__pyx_t_21);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_24, function);
              __pyx_t_20 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_24)) {
            PyObject *__pyx_temp[9] = {__pyx_t_21, __pyx_t_19, __pyx_t_9, __pyx_t_23, __pyx_t_4, __pyx_t_8, __pyx_t_16, __pyx_t_17, __pyx_t_18};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_24, __pyx_temp+1-__pyx_t_20, 8+__pyx_t_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 432, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_24)) {
            PyObject *__pyx_temp[9] = {__pyx_t_21, __pyx_t_19, __pyx_t_9, __pyx_t_23, __pyx_t_4, __pyx_t_8, __pyx_t_16, __pyx_t_17, __pyx_t_18};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_24, __pyx_temp+1-__pyx_t_20, 8+__pyx_t_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 432, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(8+__pyx_t_20); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_21) {
              __Pyx_GIVEREF(__pyx_t_21); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_21); __pyx_t_21 = NULL;
            }
            __Pyx_GIVEREF(__pyx_t_19);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_20, __pyx_t_19);
            __Pyx_GIVEREF(__pyx_t_9);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_20, __pyx_t_9);
            __Pyx_GIVEREF(__pyx_t_23);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_20, __pyx_t_23);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_3, 3+__pyx_t_20, __pyx_t_4);
            __Pyx_GIVEREF(__pyx_t_8);
            PyTuple_SET_ITEM(__pyx_t_3, 4+__pyx_t_20, __pyx_t_8);
            __Pyx_GIVEREF(__pyx_t_16);
            PyTuple_SET_ITEM(__pyx_t_3, 5+__pyx_t_20, __pyx_t_16);
            __Pyx_GIVEREF(__pyx_t_17);
            PyTuple_SET_ITEM(__pyx_t_3, 6+__pyx_t_20, __pyx_t_17);
            __Pyx_GIVEREF(__pyx_t_18);
            PyTuple_SET_ITEM(__pyx_t_3, 7+__pyx_t_20, __pyx_t_18);
            __pyx_t_19 = 0;
            __pyx_t_9 = 0;
            __pyx_t_23 = 0;
            __pyx_t_4 = 0;
            __pyx_t_8 = 0;
            __pyx_t_16 = 0;
            __pyx_t_17 = 0;
            __pyx_t_18 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_24, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 432, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

          /* "wings/market/radar_relay_market.pyx":431
 *                         self.logger().info(f"The limit sell order {tracked_limit_order.client_order_id}"
 *                                            f"has completed according to order status API.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_limit_order.client_order_id,
 */
          __pyx_t_24 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_2); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 431, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        }
        __pyx_L25:;

        /* "wings/market/radar_relay_market.pyx":440
 *                                                                      float(tracked_limit_order.quote_asset_amount),
 *                                                                      float(tracked_limit_order.gas_fee_amount)))
 *                     self.c_expire_order(tracked_limit_order.client_order_id)             # <<<<<<<<<<<<<<
 *         self._last_update_limit_order_timestamp = current_timestamp
 * 
 */
        __pyx_t_24 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_limit_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 440, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_24);
        if (!(likely(PyUnicode_CheckExact(__pyx_t_24))||((__pyx_t_24) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_24)->tp_name), 0))) __PYX_ERR(0, 440, __pyx_L1_error)
        __pyx_t_2 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_expire_order(__pyx_cur_scope->__pyx_v_self, ((PyObject*)__pyx_t_24)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":415
 *                     )
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *                 elif not previous_is_done and tracked_limit_order.is_done:             # <<<<<<<<<<<<<<
 *                     if tracked_limit_order.is_buy:
 *                         self.logger().info(f"The limit buy order {tracked_limit_order.client_order_id}"
 */
      }
      __pyx_L16:;

      /* "wings/market/radar_relay_market.pyx":355
 *                      if o.exchange_order_id]
 *             results = await asyncio.gather(*tasks, return_exceptions=True)
 *             for order_update, tracked_limit_order in zip(results, tracked_limit_orders):             # <<<<<<<<<<<<<<
 *                 if isinstance(order_update, Exception):
 *                     self.logger().error(f"Error fetching status update for the order "
 */
      __pyx_L10_continue:;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "wings/market/radar_relay_market.pyx":349
 *             return
 * 
 *         if len(self._in_flight_limit_orders) > 0:             # <<<<<<<<<<<<<<
 *             tracked_limit_orders = list(self._in_flight_limit_orders.values())
 *             tasks = [self.get_order(o.exchange_order_id)
 */
  }

  /* "wings/market/radar_relay_market.pyx":441
 *                                                                      float(tracked_limit_order.gas_fee_amount)))
 *                     self.c_expire_order(tracked_limit_order.client_order_id)
 *         self._last_update_limit_order_timestamp = current_timestamp             # <<<<<<<<<<<<<<
 * 
 *     async def _update_market_order_status(self):
 */
  __pyx_cur_scope->__pyx_v_self->_last_update_limit_order_timestamp = __pyx_cur_scope->__pyx_v_current_timestamp;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":342
 *             self._last_update_trading_rules_timestamp = current_timestamp
 * 
 *     async def _update_limit_order_status(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_23);
  __Pyx_XDECREF(__pyx_t_24);
  __Pyx_AddTraceback("_update_limit_order_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_20generator4(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":443
 *         self._last_update_limit_order_timestamp = current_timestamp
 * 
 *     async def _update_market_order_status(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_update_market_order_status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_update_market_order_status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_market_order_status (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_18_update_market_order_status(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_18_update_market_order_status(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_market_order_status", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 443, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_20generator4, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_update_market_order_status, __pyx_n_s_RadarRelayMarket__update_market, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 443, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._update_market_order_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_20generator4(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_UCS4 __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  int64_t __pyx_t_13;
  int __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_market_order_status", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 443, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":445
 *     async def _update_market_order_status(self):
 *         cdef:
 *             double current_timestamp = self._current_timestamp             # <<<<<<<<<<<<<<
 * 
 *         if current_timestamp - self._last_update_market_order_timestamp <= self.UPDATE_MARKET_ORDERS_INTERVAL:
 */
  __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp;
  __pyx_cur_scope->__pyx_v_current_timestamp = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":447
 *             double current_timestamp = self._current_timestamp
 * 
 *         if current_timestamp - self._last_update_market_order_timestamp <= self.UPDATE_MARKET_ORDERS_INTERVAL:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble((__pyx_cur_scope->__pyx_v_current_timestamp - __pyx_cur_scope->__pyx_v_self->_last_update_market_order_timestamp)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_UPDATE_MARKET_ORDERS_INTERVAL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_LE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_5) {

    /* "wings/market/radar_relay_market.pyx":448
 * 
 *         if current_timestamp - self._last_update_market_order_timestamp <= self.UPDATE_MARKET_ORDERS_INTERVAL:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if len(self._in_flight_market_orders) > 0:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "wings/market/radar_relay_market.pyx":447
 *             double current_timestamp = self._current_timestamp
 * 
 *         if current_timestamp - self._last_update_market_order_timestamp <= self.UPDATE_MARKET_ORDERS_INTERVAL:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "wings/market/radar_relay_market.pyx":450
 *             return
 * 
 *         if len(self._in_flight_market_orders) > 0:             # <<<<<<<<<<<<<<
 *             tracked_market_orders = list(self._in_flight_market_orders.values())
 *             for tracked_market_order in tracked_market_orders:
 */
  __pyx_t_4 = __pyx_cur_scope->__pyx_v_self->_in_flight_market_orders;
  __Pyx_INCREF(__pyx_t_4);
  if (unlikely(__pyx_t_4 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 450, __pyx_L1_error)
  }
  __pyx_t_6 = PyDict_Size(__pyx_t_4); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = ((__pyx_t_6 > 0) != 0);
  if (__pyx_t_5) {

    /* "wings/market/radar_relay_market.pyx":451
 * 
 *         if len(self._in_flight_market_orders) > 0:
 *             tracked_market_orders = list(self._in_flight_market_orders.values())             # <<<<<<<<<<<<<<
 *             for tracked_market_order in tracked_market_orders:
 *                 receipt = self.get_tx_hash_receipt(tracked_market_order.tx_hash)
 */
    if (unlikely(__pyx_cur_scope->__pyx_v_self->_in_flight_market_orders == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 451, __pyx_L1_error)
    }
    __pyx_t_4 = __Pyx_PyDict_Values(__pyx_cur_scope->__pyx_v_self->_in_flight_market_orders); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PySequence_List(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_cur_scope->__pyx_v_tracked_market_orders = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":452
 *         if len(self._in_flight_market_orders) > 0:
 *             tracked_market_orders = list(self._in_flight_market_orders.values())
 *             for tracked_market_order in tracked_market_orders:             # <<<<<<<<<<<<<<
 *                 receipt = self.get_tx_hash_receipt(tracked_market_order.tx_hash)
 * 
 */
    __pyx_t_3 = __pyx_cur_scope->__pyx_v_tracked_market_orders; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
    for (;;) {
      if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 452, __pyx_L1_error)
      #else
      __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 452, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_tracked_market_order);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;

      /* "wings/market/radar_relay_market.pyx":453
 *             tracked_market_orders = list(self._in_flight_market_orders.values())
 *             for tracked_market_order in tracked_market_orders:
 *                 receipt = self.get_tx_hash_receipt(tracked_market_order.tx_hash)             # <<<<<<<<<<<<<<
 * 
 *                 if receipt is None:
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_get_tx_hash_receipt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 453, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_tx_hash); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 453, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 453, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_receipt);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_receipt, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;

      /* "wings/market/radar_relay_market.pyx":455
 *                 receipt = self.get_tx_hash_receipt(tracked_market_order.tx_hash)
 * 
 *                 if receipt is None:             # <<<<<<<<<<<<<<
 *                     continue
 * 
 */
      __pyx_t_5 = (__pyx_cur_scope->__pyx_v_receipt == Py_None);
      __pyx_t_9 = (__pyx_t_5 != 0);
      if (__pyx_t_9) {

        /* "wings/market/radar_relay_market.pyx":456
 * 
 *                 if receipt is None:
 *                     continue             # <<<<<<<<<<<<<<
 * 
 *                 if receipt["status"] == 0:
 */
        goto __pyx_L6_continue;

        /* "wings/market/radar_relay_market.pyx":455
 *                 receipt = self.get_tx_hash_receipt(tracked_market_order.tx_hash)
 * 
 *                 if receipt is None:             # <<<<<<<<<<<<<<
 *                     continue
 * 
 */
      }

      /* "wings/market/radar_relay_market.pyx":458
 *                     continue
 * 
 *                 if receipt["status"] == 0:             # <<<<<<<<<<<<<<
 *                     self.logger().error(f"The market order {tracked_market_order.client_order_id}"
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")
 */
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_receipt, __pyx_n_u_status); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_4, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 458, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_9) {

        /* "wings/market/radar_relay_market.pyx":459
 * 
 *                 if receipt["status"] == 0:
 *                     self.logger().error(f"The market order {tracked_market_order.client_order_id}"             # <<<<<<<<<<<<<<
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")
 *                     self.c_trigger_event(
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_error); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_10 = 0;
        __pyx_t_11 = 127;
        __Pyx_INCREF(__pyx_kp_u_The_market_order);
        __pyx_t_10 += 17;
        __Pyx_GIVEREF(__pyx_kp_u_The_market_order);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_The_market_order);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_12 = __Pyx_PyObject_FormatSimple(__pyx_t_8, __pyx_empty_unicode); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_12);
        __pyx_t_12 = 0;
        __Pyx_INCREF(__pyx_kp_u_has_failed_according_to_transact);
        __pyx_t_10 += 41;
        __Pyx_GIVEREF(__pyx_kp_u_has_failed_according_to_transact);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_has_failed_according_to_transact);

        /* "wings/market/radar_relay_market.pyx":460
 *                 if receipt["status"] == 0:
 *                     self.logger().error(f"The market order {tracked_market_order.client_order_id}"
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")             # <<<<<<<<<<<<<<
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 */
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_tx_hash); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 460, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_8 = __Pyx_PyObject_FormatSimple(__pyx_t_12, __pyx_empty_unicode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 460, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_8);
        __pyx_t_8 = 0;
        __Pyx_INCREF(__pyx_kp_u__9);
        __pyx_t_10 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__9);
        PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u__9);

        /* "wings/market/radar_relay_market.pyx":459
 * 
 *                 if receipt["status"] == 0:
 *                     self.logger().error(f"The market order {tracked_market_order.client_order_id}"             # <<<<<<<<<<<<<<
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")
 *                     self.c_trigger_event(
 */
        __pyx_t_8 = __Pyx_PyUnicode_Join(__pyx_t_4, 5, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 459, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":462
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)
 *                     )
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 462, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_13 = __Pyx_PyInt_As_int64_t(__pyx_t_2); if (unlikely((__pyx_t_13 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 462, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":463
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)             # <<<<<<<<<<<<<<
 *                     )
 *                 elif receipt["status"] == 1:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_MarketTransactionFailureEvent); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 463, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 463, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 463, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_12 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[3] = {__pyx_t_12, __pyx_t_8, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[3] = {__pyx_t_12, __pyx_t_8, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_15 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_12); __pyx_t_12 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_14, __pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_14, __pyx_t_4);
          __pyx_t_8 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_15, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "wings/market/radar_relay_market.pyx":461
 *                     self.logger().error(f"The market order {tracked_market_order.client_order_id}"
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)
 */
        __pyx_t_7 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_13, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 461, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "wings/market/radar_relay_market.pyx":458
 *                     continue
 * 
 *                 if receipt["status"] == 0:             # <<<<<<<<<<<<<<
 *                     self.logger().error(f"The market order {tracked_market_order.client_order_id}"
 *                                         f"has failed according to transaction hash {tracked_market_order.tx_hash}.")
 */
        goto __pyx_L9;
      }

      /* "wings/market/radar_relay_market.pyx":465
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)
 *                     )
 *                 elif receipt["status"] == 1:             # <<<<<<<<<<<<<<
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 */
      __pyx_t_7 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_receipt, __pyx_n_u_status); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 465, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_7, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 465, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 465, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_9) {

        /* "wings/market/radar_relay_market.pyx":467
 *                 elif receipt["status"] == 1:
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         OrderFilledEvent(
 *                             self._current_timestamp,
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_ORDER_FILLED_EVENT_TAG); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 467, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_13 = __Pyx_PyInt_As_int64_t(__pyx_t_2); if (unlikely((__pyx_t_13 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 467, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":468
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 *                         OrderFilledEvent(             # <<<<<<<<<<<<<<
 *                             self._current_timestamp,
 *                             tracked_market_order.client_order_id,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_OrderFilledEvent); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 468, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);

        /* "wings/market/radar_relay_market.pyx":469
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 *                         OrderFilledEvent(
 *                             self._current_timestamp,             # <<<<<<<<<<<<<<
 *                             tracked_market_order.client_order_id,
 *                             tracked_market_order.symbol,
 */
        __pyx_t_15 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 469, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);

        /* "wings/market/radar_relay_market.pyx":470
 *                         OrderFilledEvent(
 *                             self._current_timestamp,
 *                             tracked_market_order.client_order_id,             # <<<<<<<<<<<<<<
 *                             tracked_market_order.symbol,
 *                             TradeType.BUY if tracked_market_order.is_buy else TradeType.SELL,
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 470, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);

        /* "wings/market/radar_relay_market.pyx":471
 *                             self._current_timestamp,
 *                             tracked_market_order.client_order_id,
 *                             tracked_market_order.symbol,             # <<<<<<<<<<<<<<
 *                             TradeType.BUY if tracked_market_order.is_buy else TradeType.SELL,
 *                             OrderType.MARKET,
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_symbol); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 471, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);

        /* "wings/market/radar_relay_market.pyx":472
 *                             tracked_market_order.client_order_id,
 *                             tracked_market_order.symbol,
 *                             TradeType.BUY if tracked_market_order.is_buy else TradeType.SELL,             # <<<<<<<<<<<<<<
 *                             OrderType.MARKET,
 *                             tracked_market_order.price,
 */
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_is_buy); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 472, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_16); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 472, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        if (__pyx_t_9) {
          __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_BUY); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __pyx_t_12 = __pyx_t_17;
          __pyx_t_17 = 0;
        } else {
          __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_SELL); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_12 = __pyx_t_16;
          __pyx_t_16 = 0;
        }

        /* "wings/market/radar_relay_market.pyx":473
 *                             tracked_market_order.symbol,
 *                             TradeType.BUY if tracked_market_order.is_buy else TradeType.SELL,
 *                             OrderType.MARKET,             # <<<<<<<<<<<<<<
 *                             tracked_market_order.price,
 *                             tracked_market_order.amount,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 473, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_MARKET); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 473, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "wings/market/radar_relay_market.pyx":474
 *                             TradeType.BUY if tracked_market_order.is_buy else TradeType.SELL,
 *                             OrderType.MARKET,
 *                             tracked_market_order.price,             # <<<<<<<<<<<<<<
 *                             tracked_market_order.amount,
 *                         )
 */
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_price); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 474, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);

        /* "wings/market/radar_relay_market.pyx":475
 *                             OrderType.MARKET,
 *                             tracked_market_order.price,
 *                             tracked_market_order.amount,             # <<<<<<<<<<<<<<
 *                         )
 *                     )
 */
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_amount); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 475, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_19 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[8] = {__pyx_t_19, __pyx_t_15, __pyx_t_4, __pyx_t_8, __pyx_t_12, __pyx_t_17, __pyx_t_16, __pyx_t_18};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_14, 7+__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[8] = {__pyx_t_19, __pyx_t_15, __pyx_t_4, __pyx_t_8, __pyx_t_12, __pyx_t_17, __pyx_t_16, __pyx_t_18};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_14, 7+__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        } else
        #endif
        {
          __pyx_t_20 = PyTuple_New(7+__pyx_t_14); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          if (__pyx_t_19) {
            __Pyx_GIVEREF(__pyx_t_19); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_19); __pyx_t_19 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_15);
          PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_14, __pyx_t_15);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_14, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_20, 2+__pyx_t_14, __pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_20, 3+__pyx_t_14, __pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_17);
          PyTuple_SET_ITEM(__pyx_t_20, 4+__pyx_t_14, __pyx_t_17);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_20, 5+__pyx_t_14, __pyx_t_16);
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_20, 6+__pyx_t_14, __pyx_t_18);
          __pyx_t_15 = 0;
          __pyx_t_4 = 0;
          __pyx_t_8 = 0;
          __pyx_t_12 = 0;
          __pyx_t_17 = 0;
          __pyx_t_16 = 0;
          __pyx_t_18 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_20, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "wings/market/radar_relay_market.pyx":466
 *                     )
 *                 elif receipt["status"] == 1:
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 *                         OrderFilledEvent(
 */
        __pyx_t_7 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_13, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 466, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "wings/market/radar_relay_market.pyx":478
 *                         )
 *                     )
 *                     if tracked_market_order.is_buy:             # <<<<<<<<<<<<<<
 *                         self.logger().info(f"The market buy order "
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_is_buy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 478, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 478, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (__pyx_t_9) {

          /* "wings/market/radar_relay_market.pyx":479
 *                     )
 *                     if tracked_market_order.is_buy:
 *                         self.logger().info(f"The market buy order "             # <<<<<<<<<<<<<<
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 */
          __pyx_t_20 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 479, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_18 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_20))) {
            __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_20);
            if (likely(__pyx_t_18)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
              __Pyx_INCREF(__pyx_t_18);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_20, function);
            }
          }
          __pyx_t_2 = (__pyx_t_18) ? __Pyx_PyObject_CallOneArg(__pyx_t_20, __pyx_t_18) : __Pyx_PyObject_CallNoArg(__pyx_t_20);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 479, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_info); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 479, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = PyTuple_New(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 479, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_10 = 0;
          __pyx_t_11 = 127;
          __Pyx_INCREF(__pyx_kp_u_The_market_buy_order);
          __pyx_t_10 += 21;
          __Pyx_GIVEREF(__pyx_kp_u_The_market_buy_order);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_The_market_buy_order);

          /* "wings/market/radar_relay_market.pyx":480
 *                     if tracked_market_order.is_buy:
 *                         self.logger().info(f"The market buy order "
 *                                            f"{tracked_market_order.client_order_id} has completed according to "             # <<<<<<<<<<<<<<
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 */
          __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 480, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_16 = __Pyx_PyObject_FormatSimple(__pyx_t_18, __pyx_empty_unicode); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 480, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) : __pyx_t_11;
          __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_16);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_16);
          __pyx_t_16 = 0;
          __Pyx_INCREF(__pyx_kp_u_has_completed_according_to_tran);
          __pyx_t_10 += 45;
          __Pyx_GIVEREF(__pyx_kp_u_has_completed_according_to_tran);
          PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_has_completed_according_to_tran);

          /* "wings/market/radar_relay_market.pyx":481
 *                         self.logger().info(f"The market buy order "
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")             # <<<<<<<<<<<<<<
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 */
          __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_tx_hash); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 481, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_16, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 481, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_11;
          __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_18);
          __pyx_t_18 = 0;
          __Pyx_INCREF(__pyx_kp_u__9);
          __pyx_t_10 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__9);
          PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u__9);

          /* "wings/market/radar_relay_market.pyx":479
 *                     )
 *                     if tracked_market_order.is_buy:
 *                         self.logger().info(f"The market buy order "             # <<<<<<<<<<<<<<
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 */
          __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_2, 5, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_20))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_20);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_20, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_20, __pyx_t_2, __pyx_t_18) : __Pyx_PyObject_CallOneArg(__pyx_t_20, __pyx_t_18);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 479, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "wings/market/radar_relay_market.pyx":482
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_market_order.client_order_id,
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_BUY_ORDER_COMPLETED_EVENT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_13 = __Pyx_PyInt_As_int64_t(__pyx_t_7); if (unlikely((__pyx_t_13 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "wings/market/radar_relay_market.pyx":483
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 *                                              BuyOrderCompletedEvent(self._current_timestamp,             # <<<<<<<<<<<<<<
 *                                                                     tracked_market_order.client_order_id,
 *                                                                     tracked_market_order.base_asset,
 */
          __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_BuyOrderCompletedEvent); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 483, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 483, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);

          /* "wings/market/radar_relay_market.pyx":484
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_market_order.client_order_id,             # <<<<<<<<<<<<<<
 *                                                                     tracked_market_order.base_asset,
 *                                                                     tracked_market_order.quote_asset,
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);

          /* "wings/market/radar_relay_market.pyx":485
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_market_order.client_order_id,
 *                                                                     tracked_market_order.base_asset,             # <<<<<<<<<<<<<<
 *                                                                     tracked_market_order.quote_asset,
 *                                                                     tracked_market_order.quote_asset,
 */
          __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_base_asset); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);

          /* "wings/market/radar_relay_market.pyx":486
 *                                                                     tracked_market_order.client_order_id,
 *                                                                     tracked_market_order.base_asset,
 *                                                                     tracked_market_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                     tracked_market_order.quote_asset,
 *                                                                     float(tracked_market_order.amount),
 */
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);

          /* "wings/market/radar_relay_market.pyx":487
 *                                                                     tracked_market_order.base_asset,
 *                                                                     tracked_market_order.quote_asset,
 *                                                                     tracked_market_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                     float(tracked_market_order.amount),
 *                                                                     float(tracked_market_order.quote_asset_amount),
 */
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 487, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);

          /* "wings/market/radar_relay_market.pyx":488
 *                                                                     tracked_market_order.quote_asset,
 *                                                                     tracked_market_order.quote_asset,
 *                                                                     float(tracked_market_order.amount),             # <<<<<<<<<<<<<<
 *                                                                     float(tracked_market_order.quote_asset_amount),
 *                                                                     float(tracked_market_order.gas_fee_amount)))
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_amount); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 488, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_4 = __Pyx_PyNumber_Float(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 488, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "wings/market/radar_relay_market.pyx":489
 *                                                                     tracked_market_order.quote_asset,
 *                                                                     float(tracked_market_order.amount),
 *                                                                     float(tracked_market_order.quote_asset_amount),             # <<<<<<<<<<<<<<
 *                                                                     float(tracked_market_order.gas_fee_amount)))
 *                     else:
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_quote_asset_amount_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 489, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_15 = __Pyx_PyNumber_Float(__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 489, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "wings/market/radar_relay_market.pyx":490
 *                                                                     float(tracked_market_order.amount),
 *                                                                     float(tracked_market_order.quote_asset_amount),
 *                                                                     float(tracked_market_order.gas_fee_amount)))             # <<<<<<<<<<<<<<
 *                     else:
 *                         self.logger().info(f"The market sell order "
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_gas_fee_amount_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 490, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_19 = __Pyx_PyNumber_Float(__pyx_t_8); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 490, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_14 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_20))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_20);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_20, function);
              __pyx_t_14 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_20)) {
            PyObject *__pyx_temp[9] = {__pyx_t_8, __pyx_t_18, __pyx_t_2, __pyx_t_16, __pyx_t_17, __pyx_t_12, __pyx_t_4, __pyx_t_15, __pyx_t_19};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_14, 8+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_20)) {
            PyObject *__pyx_temp[9] = {__pyx_t_8, __pyx_t_18, __pyx_t_2, __pyx_t_16, __pyx_t_17, __pyx_t_12, __pyx_t_4, __pyx_t_15, __pyx_t_19};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_14, 8+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          } else
          #endif
          {
            __pyx_t_21 = PyTuple_New(8+__pyx_t_14); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_21);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_GIVEREF(__pyx_t_18);
            PyTuple_SET_ITEM(__pyx_t_21, 0+__pyx_t_14, __pyx_t_18);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_21, 1+__pyx_t_14, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_16);
            PyTuple_SET_ITEM(__pyx_t_21, 2+__pyx_t_14, __pyx_t_16);
            __Pyx_GIVEREF(__pyx_t_17);
            PyTuple_SET_ITEM(__pyx_t_21, 3+__pyx_t_14, __pyx_t_17);
            __Pyx_GIVEREF(__pyx_t_12);
            PyTuple_SET_ITEM(__pyx_t_21, 4+__pyx_t_14, __pyx_t_12);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_21, 5+__pyx_t_14, __pyx_t_4);
            __Pyx_GIVEREF(__pyx_t_15);
            PyTuple_SET_ITEM(__pyx_t_21, 6+__pyx_t_14, __pyx_t_15);
            __Pyx_GIVEREF(__pyx_t_19);
            PyTuple_SET_ITEM(__pyx_t_21, 7+__pyx_t_14, __pyx_t_19);
            __pyx_t_18 = 0;
            __pyx_t_2 = 0;
            __pyx_t_16 = 0;
            __pyx_t_17 = 0;
            __pyx_t_12 = 0;
            __pyx_t_4 = 0;
            __pyx_t_15 = 0;
            __pyx_t_19 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_20, __pyx_t_21, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
          }
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

          /* "wings/market/radar_relay_market.pyx":482
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_BUY_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              BuyOrderCompletedEvent(self._current_timestamp,
 *                                                                     tracked_market_order.client_order_id,
 */
          __pyx_t_20 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_13, __pyx_t_7); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

          /* "wings/market/radar_relay_market.pyx":478
 *                         )
 *                     )
 *                     if tracked_market_order.is_buy:             # <<<<<<<<<<<<<<
 *                         self.logger().info(f"The market buy order "
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 */
          goto __pyx_L10;
        }

        /* "wings/market/radar_relay_market.pyx":492
 *                                                                     float(tracked_market_order.gas_fee_amount)))
 *                     else:
 *                         self.logger().info(f"The market sell order "             # <<<<<<<<<<<<<<
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 */
        /*else*/ {
          __pyx_t_21 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __pyx_t_19 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_21))) {
            __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_21);
            if (likely(__pyx_t_19)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
              __Pyx_INCREF(__pyx_t_19);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_21, function);
            }
          }
          __pyx_t_7 = (__pyx_t_19) ? __Pyx_PyObject_CallOneArg(__pyx_t_21, __pyx_t_19) : __Pyx_PyObject_CallNoArg(__pyx_t_21);
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
          __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_info); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = PyTuple_New(5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_10 = 0;
          __pyx_t_11 = 127;
          __Pyx_INCREF(__pyx_kp_u_The_market_sell_order);
          __pyx_t_10 += 22;
          __Pyx_GIVEREF(__pyx_kp_u_The_market_sell_order);
          PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_u_The_market_sell_order);

          /* "wings/market/radar_relay_market.pyx":493
 *                     else:
 *                         self.logger().info(f"The market sell order "
 *                                            f"{tracked_market_order.client_order_id} has completed according to "             # <<<<<<<<<<<<<<
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 */
          __pyx_t_19 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 493, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __pyx_t_15 = __Pyx_PyObject_FormatSimple(__pyx_t_19, __pyx_empty_unicode); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 493, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_15) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_15) : __pyx_t_11;
          __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_15);
          __Pyx_GIVEREF(__pyx_t_15);
          PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_15);
          __pyx_t_15 = 0;
          __Pyx_INCREF(__pyx_kp_u_has_completed_according_to_tran);
          __pyx_t_10 += 45;
          __Pyx_GIVEREF(__pyx_kp_u_has_completed_according_to_tran);
          PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_u_has_completed_according_to_tran);

          /* "wings/market/radar_relay_market.pyx":494
 *                         self.logger().info(f"The market sell order "
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")             # <<<<<<<<<<<<<<
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 */
          __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_tx_hash); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 494, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_19 = __Pyx_PyObject_FormatSimple(__pyx_t_15, __pyx_empty_unicode); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 494, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_19) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_19) : __pyx_t_11;
          __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_19);
          __Pyx_GIVEREF(__pyx_t_19);
          PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_19);
          __pyx_t_19 = 0;
          __Pyx_INCREF(__pyx_kp_u__9);
          __pyx_t_10 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__9);
          PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_kp_u__9);

          /* "wings/market/radar_relay_market.pyx":492
 *                                                                     float(tracked_market_order.gas_fee_amount)))
 *                     else:
 *                         self.logger().info(f"The market sell order "             # <<<<<<<<<<<<<<
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 */
          __pyx_t_19 = __Pyx_PyUnicode_Join(__pyx_t_7, 5, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_21))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_21);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_21, function);
            }
          }
          __pyx_t_20 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_21, __pyx_t_7, __pyx_t_19) : __Pyx_PyObject_CallOneArg(__pyx_t_21, __pyx_t_19);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

          /* "wings/market/radar_relay_market.pyx":495
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_market_order.client_order_id,
 */
          __pyx_t_20 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_SELL_ORDER_COMPLETED_EVEN); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_13 = __Pyx_PyInt_As_int64_t(__pyx_t_20); if (unlikely((__pyx_t_13 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

          /* "wings/market/radar_relay_market.pyx":496
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 *                                              SellOrderCompletedEvent(self._current_timestamp,             # <<<<<<<<<<<<<<
 *                                                                      tracked_market_order.client_order_id,
 *                                                                      tracked_market_order.base_asset,
 */
          __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_SellOrderCompletedEvent); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 496, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __pyx_t_19 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 496, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);

          /* "wings/market/radar_relay_market.pyx":497
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_market_order.client_order_id,             # <<<<<<<<<<<<<<
 *                                                                      tracked_market_order.base_asset,
 *                                                                      tracked_market_order.quote_asset,
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 497, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);

          /* "wings/market/radar_relay_market.pyx":498
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_market_order.client_order_id,
 *                                                                      tracked_market_order.base_asset,             # <<<<<<<<<<<<<<
 *                                                                      tracked_market_order.quote_asset,
 *                                                                      tracked_market_order.quote_asset,
 */
          __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_base_asset); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 498, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);

          /* "wings/market/radar_relay_market.pyx":499
 *                                                                      tracked_market_order.client_order_id,
 *                                                                      tracked_market_order.base_asset,
 *                                                                      tracked_market_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                      tracked_market_order.quote_asset,
 *                                                                      float(tracked_market_order.amount),
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 499, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);

          /* "wings/market/radar_relay_market.pyx":500
 *                                                                      tracked_market_order.base_asset,
 *                                                                      tracked_market_order.quote_asset,
 *                                                                      tracked_market_order.quote_asset,             # <<<<<<<<<<<<<<
 *                                                                      float(tracked_market_order.amount),
 *                                                                      float(tracked_market_order.quote_asset_amount),
 */
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_quote_asset); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);

          /* "wings/market/radar_relay_market.pyx":501
 *                                                                      tracked_market_order.quote_asset,
 *                                                                      tracked_market_order.quote_asset,
 *                                                                      float(tracked_market_order.amount),             # <<<<<<<<<<<<<<
 *                                                                      float(tracked_market_order.quote_asset_amount),
 *                                                                      float(tracked_market_order.gas_fee_amount)))
 */
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_amount); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 501, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_16 = __Pyx_PyNumber_Float(__pyx_t_17); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 501, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

          /* "wings/market/radar_relay_market.pyx":502
 *                                                                      tracked_market_order.quote_asset,
 *                                                                      float(tracked_market_order.amount),
 *                                                                      float(tracked_market_order.quote_asset_amount),             # <<<<<<<<<<<<<<
 *                                                                      float(tracked_market_order.gas_fee_amount)))
 *                 else:
 */
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_quote_asset_amount_2); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 502, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_2 = __Pyx_PyNumber_Float(__pyx_t_17); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 502, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

          /* "wings/market/radar_relay_market.pyx":503
 *                                                                      float(tracked_market_order.amount),
 *                                                                      float(tracked_market_order.quote_asset_amount),
 *                                                                      float(tracked_market_order.gas_fee_amount)))             # <<<<<<<<<<<<<<
 *                 else:
 *                     self.logger().error(f"Unrecognized transaction status for market order "
 */
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_gas_fee_amount_2); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 503, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_18 = __Pyx_PyNumber_Float(__pyx_t_17); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 503, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_17 = NULL;
          __pyx_t_14 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_21))) {
            __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_21);
            if (likely(__pyx_t_17)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
              __Pyx_INCREF(__pyx_t_17);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_21, function);
              __pyx_t_14 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_21)) {
            PyObject *__pyx_temp[9] = {__pyx_t_17, __pyx_t_19, __pyx_t_7, __pyx_t_15, __pyx_t_4, __pyx_t_12, __pyx_t_16, __pyx_t_2, __pyx_t_18};
            __pyx_t_20 = __Pyx_PyFunction_FastCall(__pyx_t_21, __pyx_temp+1-__pyx_t_14, 8+__pyx_t_14); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_GOTREF(__pyx_t_20);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_21)) {
            PyObject *__pyx_temp[9] = {__pyx_t_17, __pyx_t_19, __pyx_t_7, __pyx_t_15, __pyx_t_4, __pyx_t_12, __pyx_t_16, __pyx_t_2, __pyx_t_18};
            __pyx_t_20 = __Pyx_PyCFunction_FastCall(__pyx_t_21, __pyx_temp+1-__pyx_t_14, 8+__pyx_t_14); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_GOTREF(__pyx_t_20);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(8+__pyx_t_14); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_17) {
              __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_17); __pyx_t_17 = NULL;
            }
            __Pyx_GIVEREF(__pyx_t_19);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_14, __pyx_t_19);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_14, __pyx_t_7);
            __Pyx_GIVEREF(__pyx_t_15);
            PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_14, __pyx_t_15);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_14, __pyx_t_4);
            __Pyx_GIVEREF(__pyx_t_12);
            PyTuple_SET_ITEM(__pyx_t_8, 4+__pyx_t_14, __pyx_t_12);
            __Pyx_GIVEREF(__pyx_t_16);
            PyTuple_SET_ITEM(__pyx_t_8, 5+__pyx_t_14, __pyx_t_16);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_8, 6+__pyx_t_14, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_18);
            PyTuple_SET_ITEM(__pyx_t_8, 7+__pyx_t_14, __pyx_t_18);
            __pyx_t_19 = 0;
            __pyx_t_7 = 0;
            __pyx_t_15 = 0;
            __pyx_t_4 = 0;
            __pyx_t_12 = 0;
            __pyx_t_16 = 0;
            __pyx_t_2 = 0;
            __pyx_t_18 = 0;
            __pyx_t_20 = __Pyx_PyObject_Call(__pyx_t_21, __pyx_t_8, NULL); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

          /* "wings/market/radar_relay_market.pyx":495
 *                                            f"{tracked_market_order.client_order_id} has completed according to "
 *                                            f"transaction hash {tracked_market_order.tx_hash}.")
 *                         self.c_trigger_event(self.MARKET_SELL_ORDER_COMPLETED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                              SellOrderCompletedEvent(self._current_timestamp,
 *                                                                      tracked_market_order.client_order_id,
 */
          __pyx_t_21 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_13, __pyx_t_20); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        }
        __pyx_L10:;

        /* "wings/market/radar_relay_market.pyx":465
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)
 *                     )
 *                 elif receipt["status"] == 1:             # <<<<<<<<<<<<<<
 *                     self.c_trigger_event(
 *                         self.MARKET_ORDER_FILLED_EVENT_TAG,
 */
        goto __pyx_L9;
      }

      /* "wings/market/radar_relay_market.pyx":505
 *                                                                      float(tracked_market_order.gas_fee_amount)))
 *                 else:
 *                     self.logger().error(f"Unrecognized transaction status for market order "             # <<<<<<<<<<<<<<
 *                                         f"{tracked_market_order.client_order_id}. Check transaction hash "
 *                                         f"{tracked_market_order.tx_hash} for more details.")
 */
      /*else*/ {
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_18 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_20 = (__pyx_t_18) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_18) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_20, __pyx_n_s_error); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_t_20 = PyTuple_New(5); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_10 = 0;
        __pyx_t_11 = 127;
        __Pyx_INCREF(__pyx_kp_u_Unrecognized_transaction_status);
        __pyx_t_10 += 49;
        __Pyx_GIVEREF(__pyx_kp_u_Unrecognized_transaction_status);
        PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_kp_u_Unrecognized_transaction_status);

        /* "wings/market/radar_relay_market.pyx":506
 *                 else:
 *                     self.logger().error(f"Unrecognized transaction status for market order "
 *                                         f"{tracked_market_order.client_order_id}. Check transaction hash "             # <<<<<<<<<<<<<<
 *                                         f"{tracked_market_order.tx_hash} for more details.")
 *                     self.c_trigger_event(
 */
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 506, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_18, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 506, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_20, 1, __pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_INCREF(__pyx_kp_u_Check_transaction_hash);
        __pyx_t_10 += 25;
        __Pyx_GIVEREF(__pyx_kp_u_Check_transaction_hash);
        PyTuple_SET_ITEM(__pyx_t_20, 2, __pyx_kp_u_Check_transaction_hash);

        /* "wings/market/radar_relay_market.pyx":507
 *                     self.logger().error(f"Unrecognized transaction status for market order "
 *                                         f"{tracked_market_order.client_order_id}. Check transaction hash "
 *                                         f"{tracked_market_order.tx_hash} for more details.")             # <<<<<<<<<<<<<<
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_tx_hash); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 507, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_20, 3, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_INCREF(__pyx_kp_u_for_more_details);
        __pyx_t_10 += 18;
        __Pyx_GIVEREF(__pyx_kp_u_for_more_details);
        PyTuple_SET_ITEM(__pyx_t_20, 4, __pyx_kp_u_for_more_details);

        /* "wings/market/radar_relay_market.pyx":505
 *                                                                      float(tracked_market_order.gas_fee_amount)))
 *                 else:
 *                     self.logger().error(f"Unrecognized transaction status for market order "             # <<<<<<<<<<<<<<
 *                                         f"{tracked_market_order.client_order_id}. Check transaction hash "
 *                                         f"{tracked_market_order.tx_hash} for more details.")
 */
        __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_20, 5, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_t_20 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_21 = (__pyx_t_20) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_20, __pyx_t_18) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_18);
        __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

        /* "wings/market/radar_relay_market.pyx":509
 *                                         f"{tracked_market_order.tx_hash} for more details.")
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)
 *                     )
 */
        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_13 = __Pyx_PyInt_As_int64_t(__pyx_t_21); if (unlikely((__pyx_t_13 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

        /* "wings/market/radar_relay_market.pyx":510
 *                     self.c_trigger_event(
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)             # <<<<<<<<<<<<<<
 *                     )
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_MarketTransactionFailureEvent); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_2 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_8)) {
          PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_18, __pyx_t_20};
          __pyx_t_21 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GOTREF(__pyx_t_21);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
          PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_18, __pyx_t_20};
          __pyx_t_21 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GOTREF(__pyx_t_21);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        } else
        #endif
        {
          __pyx_t_16 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          if (__pyx_t_2) {
            __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_2); __pyx_t_2 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_14, __pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_20);
          PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_14, __pyx_t_20);
          __pyx_t_18 = 0;
          __pyx_t_20 = 0;
          __pyx_t_21 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_16, NULL); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "wings/market/radar_relay_market.pyx":508
 *                                         f"{tracked_market_order.client_order_id}. Check transaction hash "
 *                                         f"{tracked_market_order.tx_hash} for more details.")
 *                     self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                         self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                         MarketTransactionFailureEvent(self._current_timestamp, tracked_market_order.client_order_id)
 */
        __pyx_t_8 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_13, __pyx_t_21); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 508, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
      __pyx_L9:;

      /* "wings/market/radar_relay_market.pyx":513
 *                     )
 * 
 *                 self.c_stop_tracking_order(tracked_market_order.tx_hash)             # <<<<<<<<<<<<<<
 *         self._last_update_market_order_timestamp = current_timestamp
 * 
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_tracked_market_order, __pyx_n_s_tx_hash); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 513, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (!(likely(PyUnicode_CheckExact(__pyx_t_8))||((__pyx_t_8) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_8)->tp_name), 0))) __PYX_ERR(0, 513, __pyx_L1_error)
      __pyx_t_21 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_stop_tracking_order(__pyx_cur_scope->__pyx_v_self, ((PyObject*)__pyx_t_8)); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 513, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

      /* "wings/market/radar_relay_market.pyx":452
 *         if len(self._in_flight_market_orders) > 0:
 *             tracked_market_orders = list(self._in_flight_market_orders.values())
 *             for tracked_market_order in tracked_market_orders:             # <<<<<<<<<<<<<<
 *                 receipt = self.get_tx_hash_receipt(tracked_market_order.tx_hash)
 * 
 */
      __pyx_L6_continue:;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":450
 *             return
 * 
 *         if len(self._in_flight_market_orders) > 0:             # <<<<<<<<<<<<<<
 *             tracked_market_orders = list(self._in_flight_market_orders.values())
 *             for tracked_market_order in tracked_market_orders:
 */
  }

  /* "wings/market/radar_relay_market.pyx":514
 * 
 *                 self.c_stop_tracking_order(tracked_market_order.tx_hash)
 *         self._last_update_market_order_timestamp = current_timestamp             # <<<<<<<<<<<<<<
 * 
 *     async def _approval_tx_polling_loop(self):
 */
  __pyx_cur_scope->__pyx_v_self->_last_update_market_order_timestamp = __pyx_cur_scope->__pyx_v_current_timestamp;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":443
 *         self._last_update_limit_order_timestamp = current_timestamp
 * 
 *     async def _update_market_order_status(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_AddTraceback("_update_market_order_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_23generator5(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":516
 *         self._last_update_market_order_timestamp = current_timestamp
 * 
 *     async def _approval_tx_polling_loop(self):             # <<<<<<<<<<<<<<
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_22_approval_tx_polling_loop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_22_approval_tx_polling_loop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_approval_tx_polling_loop (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_21_approval_tx_polling_loop(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_21_approval_tx_polling_loop(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_approval_tx_polling_loop", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 516, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_23generator5, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_approval_tx_polling_loop, __pyx_n_s_RadarRelayMarket__approval_tx_po, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 516, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._approval_tx_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_23generator5(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  char const *__pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_approval_tx_polling_loop", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L25_resume_from_await;
    case 2: goto __pyx_L30_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 516, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":517
 * 
 *     async def _approval_tx_polling_loop(self):
 *         while len(self._pending_approval_tx_hashes) > 0:             # <<<<<<<<<<<<<<
 *             try:
 *                 if len(self._pending_approval_tx_hashes) > 0:
 */
  while (1) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->_pending_approval_tx_hashes;
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 517, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = ((__pyx_t_2 > 0) != 0);
    if (!__pyx_t_3) break;

    /* "wings/market/radar_relay_market.pyx":518
 *     async def _approval_tx_polling_loop(self):
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:             # <<<<<<<<<<<<<<
 *                 if len(self._pending_approval_tx_hashes) > 0:
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 */
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_4);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_6);
        /*try:*/ {

          /* "wings/market/radar_relay_market.pyx":519
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:
 *                 if len(self._pending_approval_tx_hashes) > 0:             # <<<<<<<<<<<<<<
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 */
          __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->_pending_approval_tx_hashes;
          __Pyx_INCREF(__pyx_t_1);
          __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 519, __pyx_L11_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_3 = ((__pyx_t_2 > 0) != 0);
          if (__pyx_t_3) {

            /* "wings/market/radar_relay_market.pyx":520
 *             try:
 *                 if len(self._pending_approval_tx_hashes) > 0:
 *                     for tx_hash in list(self._pending_approval_tx_hashes):             # <<<<<<<<<<<<<<
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 *                         if receipt is not None:
 */
            __pyx_t_1 = PySequence_List(__pyx_cur_scope->__pyx_v_self->_pending_approval_tx_hashes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 520, __pyx_L11_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_7 = __pyx_t_1; __Pyx_INCREF(__pyx_t_7); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            for (;;) {
              if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_7)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_1 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 520, __pyx_L11_error)
              #else
              __pyx_t_1 = PySequence_ITEM(__pyx_t_7, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 520, __pyx_L11_error)
              __Pyx_GOTREF(__pyx_t_1);
              #endif
              __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_tx_hash);
              __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_tx_hash, __pyx_t_1);
              __Pyx_GIVEREF(__pyx_t_1);
              __pyx_t_1 = 0;

              /* "wings/market/radar_relay_market.pyx":521
 *                 if len(self._pending_approval_tx_hashes) > 0:
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)             # <<<<<<<<<<<<<<
 *                         if receipt is not None:
 *                             self._pending_approval_tx_hashes.remove(tx_hash)
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_w3, __pyx_n_s_eth); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 521, __pyx_L11_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_getTransactionReceipt); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 521, __pyx_L11_error)
              __Pyx_GOTREF(__pyx_t_9);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_9, function);
                }
              }
              __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_8, __pyx_cur_scope->__pyx_v_tx_hash) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_cur_scope->__pyx_v_tx_hash);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 521, __pyx_L11_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
              __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_receipt);
              __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_receipt, __pyx_t_1);
              __Pyx_GIVEREF(__pyx_t_1);
              __pyx_t_1 = 0;

              /* "wings/market/radar_relay_market.pyx":522
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 *                         if receipt is not None:             # <<<<<<<<<<<<<<
 *                             self._pending_approval_tx_hashes.remove(tx_hash)
 *             except Exception:
 */
              __pyx_t_3 = (__pyx_cur_scope->__pyx_v_receipt != Py_None);
              __pyx_t_10 = (__pyx_t_3 != 0);
              if (__pyx_t_10) {

                /* "wings/market/radar_relay_market.pyx":523
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 *                         if receipt is not None:
 *                             self._pending_approval_tx_hashes.remove(tx_hash)             # <<<<<<<<<<<<<<
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching approval transactions.", exc_info=True)
 */
                __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_pending_approval_tx_hashes, __pyx_n_s_remove); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 523, __pyx_L11_error)
                __Pyx_GOTREF(__pyx_t_9);
                __pyx_t_8 = NULL;
                if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
                  __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
                  if (likely(__pyx_t_8)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
                    __Pyx_INCREF(__pyx_t_8);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_9, function);
                  }
                }
                __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_8, __pyx_cur_scope->__pyx_v_tx_hash) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_cur_scope->__pyx_v_tx_hash);
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 523, __pyx_L11_error)
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "wings/market/radar_relay_market.pyx":522
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 *                         if receipt is not None:             # <<<<<<<<<<<<<<
 *                             self._pending_approval_tx_hashes.remove(tx_hash)
 *             except Exception:
 */
              }

              /* "wings/market/radar_relay_market.pyx":520
 *             try:
 *                 if len(self._pending_approval_tx_hashes) > 0:
 *                     for tx_hash in list(self._pending_approval_tx_hashes):             # <<<<<<<<<<<<<<
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 *                         if receipt is not None:
 */
            }
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "wings/market/radar_relay_market.pyx":519
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:
 *                 if len(self._pending_approval_tx_hashes) > 0:             # <<<<<<<<<<<<<<
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 *                         receipt = self._w3.eth.getTransactionReceipt(tx_hash)
 */
          }

          /* "wings/market/radar_relay_market.pyx":518
 *     async def _approval_tx_polling_loop(self):
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:             # <<<<<<<<<<<<<<
 *                 if len(self._pending_approval_tx_hashes) > 0:
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 */
        }
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        goto __pyx_L18_try_end;
        __pyx_L11_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "wings/market/radar_relay_market.pyx":524
 *                         if receipt is not None:
 *                             self._pending_approval_tx_hashes.remove(tx_hash)
 *             except Exception:             # <<<<<<<<<<<<<<
 *                 self.logger().error("Unexpected error while fetching approval transactions.", exc_info=True)
 *             finally:
 */
        __pyx_t_11 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
        if (__pyx_t_11) {
          __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._approval_tx_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_1, &__pyx_t_9) < 0) __PYX_ERR(0, 524, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_9);

          /* "wings/market/radar_relay_market.pyx":525
 *                             self._pending_approval_tx_hashes.remove(tx_hash)
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching approval transactions.", exc_info=True)             # <<<<<<<<<<<<<<
 *             finally:
 *                 await asyncio.sleep(1.0)
 */
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 525, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_12, function);
            }
          }
          __pyx_t_8 = (__pyx_t_13) ? __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_13) : __Pyx_PyObject_CallNoArg(__pyx_t_12);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 525, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_error); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 525, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 525, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_exc_info, Py_True) < 0) __PYX_ERR(0, 525, __pyx_L13_except_error)
          __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_tuple__10, __pyx_t_8); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 525, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          goto __pyx_L12_exception_handled;
        }
        goto __pyx_L13_except_error;
        __pyx_L13_except_error:;

        /* "wings/market/radar_relay_market.pyx":518
 *     async def _approval_tx_polling_loop(self):
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:             # <<<<<<<<<<<<<<
 *                 if len(self._pending_approval_tx_hashes) > 0:
 *                     for tx_hash in list(self._pending_approval_tx_hashes):
 */
        __Pyx_XGIVEREF(__pyx_t_4);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
        goto __pyx_L9_error;
        __pyx_L12_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_4);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
        __pyx_L18_try_end:;
      }
    }

    /* "wings/market/radar_relay_market.pyx":527
 *                 self.logger().error("Unexpected error while fetching approval transactions.", exc_info=True)
 *             finally:
 *                 await asyncio.sleep(1.0)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
    /*finally:*/ {
      /*normal exit:*/{
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sleep); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 527, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_9 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_1, __pyx_float_1_0) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_float_1_0);
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 527, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_9);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 1;
          return __pyx_r;
          __pyx_L25_resume_from_await:;
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 527, __pyx_L1_error)
        } else {
          PyObject* exc_type = __Pyx_PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
            else __PYX_ERR(0, 527, __pyx_L1_error)
          }
        }
        goto __pyx_L10;
      }
      __pyx_L9_error:;
      /*exception exit:*/{
        __Pyx_PyThreadState_assign
        __pyx_t_6 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_16, &__pyx_t_17, &__pyx_t_18);
        if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_6, &__pyx_t_5, &__pyx_t_4) < 0)) __Pyx_ErrFetch(&__pyx_t_6, &__pyx_t_5, &__pyx_t_4);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_4);
        __Pyx_XGOTREF(__pyx_t_16);
        __Pyx_XGOTREF(__pyx_t_17);
        __Pyx_XGOTREF(__pyx_t_18);
        __pyx_t_11 = __pyx_lineno; __pyx_t_14 = __pyx_clineno; __pyx_t_15 = __pyx_filename;
        {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 527, __pyx_L29_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sleep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L29_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_9 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_7, __pyx_float_1_0) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_float_1_0);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 527, __pyx_L29_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_9);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_4);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
            __Pyx_XGIVEREF(__pyx_t_5);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_5;
            __Pyx_XGIVEREF(__pyx_t_6);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
            __pyx_cur_scope->__pyx_t_3 = __pyx_t_11;
            __pyx_cur_scope->__pyx_t_4 = __pyx_t_14;
            __pyx_cur_scope->__pyx_t_5 = __pyx_t_15;
            __Pyx_XGIVEREF(__pyx_t_16);
            __pyx_cur_scope->__pyx_t_6 = __pyx_t_16;
            __Pyx_XGIVEREF(__pyx_t_17);
            __pyx_cur_scope->__pyx_t_7 = __pyx_t_17;
            __Pyx_XGIVEREF(__pyx_t_18);
            __pyx_cur_scope->__pyx_t_8 = __pyx_t_18;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 2;
            return __pyx_r;
            __pyx_L30_resume_from_await:;
            __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_4);
            __pyx_t_5 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_5);
            __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_6);
            __pyx_t_11 = __pyx_cur_scope->__pyx_t_3;
            __pyx_t_14 = __pyx_cur_scope->__pyx_t_4;
            __pyx_t_15 = __pyx_cur_scope->__pyx_t_5;
            __pyx_t_16 = __pyx_cur_scope->__pyx_t_6;
            __pyx_cur_scope->__pyx_t_6 = 0;
            __Pyx_XGOTREF(__pyx_t_16);
            __pyx_t_17 = __pyx_cur_scope->__pyx_t_7;
            __pyx_cur_scope->__pyx_t_7 = 0;
            __Pyx_XGOTREF(__pyx_t_17);
            __pyx_t_18 = __pyx_cur_scope->__pyx_t_8;
            __pyx_cur_scope->__pyx_t_8 = 0;
            __Pyx_XGOTREF(__pyx_t_18);
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 527, __pyx_L29_error)
          } else {
            PyObject* exc_type = __Pyx_PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
              else __PYX_ERR(0, 527, __pyx_L29_error)
            }
          }
        }
        if (PY_MAJOR_VERSION >= 3) {
          __Pyx_XGIVEREF(__pyx_t_16);
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_ExceptionReset(__pyx_t_16, __pyx_t_17, __pyx_t_18);
        }
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_4);
        __Pyx_ErrRestore(__pyx_t_6, __pyx_t_5, __pyx_t_4);
        __pyx_t_6 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0;
        __pyx_lineno = __pyx_t_11; __pyx_clineno = __pyx_t_14; __pyx_filename = __pyx_t_15;
        goto __pyx_L1_error;
        __pyx_L29_error:;
        if (PY_MAJOR_VERSION >= 3) {
          __Pyx_XGIVEREF(__pyx_t_16);
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_ExceptionReset(__pyx_t_16, __pyx_t_17, __pyx_t_18);
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0;
        goto __pyx_L1_error;
      }
      __pyx_L10:;
    }
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":516
 *         self._last_update_market_order_timestamp = current_timestamp
 * 
 *     async def _approval_tx_polling_loop(self):             # <<<<<<<<<<<<<<
 *         while len(self._pending_approval_tx_hashes) > 0:
 *             try:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("_approval_tx_polling_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_26generator6(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":530
 * 
 *     @staticmethod
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):             # <<<<<<<<<<<<<<
 *         while True:
 *             fut, coro = await coro_queue.get()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25coro_scheduler(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5wings_6market_18radar_relay_market_16RadarRelayMarket_25coro_scheduler = {"coro_scheduler", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25coro_scheduler, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25coro_scheduler(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coro_queue = 0;
  double __pyx_v_interval;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coro_scheduler (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_coro_queue,&__pyx_n_s_interval,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_coro_queue)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_interval);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "coro_scheduler") < 0)) __PYX_ERR(0, 530, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_coro_queue = values[0];
    if (values[1]) {
      __pyx_v_interval = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_interval == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 530, __pyx_L3_error)
    } else {
      __pyx_v_interval = ((double)0.5);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("coro_scheduler", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 530, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.coro_scheduler", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_24coro_scheduler(__pyx_v_coro_queue, __pyx_v_interval);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_24coro_scheduler(PyObject *__pyx_v_coro_queue, double __pyx_v_interval) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coro_scheduler", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 530, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_coro_queue = __pyx_v_coro_queue;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_coro_queue);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_coro_queue);
  __pyx_cur_scope->__pyx_v_interval = __pyx_v_interval;
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_26generator6, __pyx_codeobj__11, (PyObject *) __pyx_cur_scope, __pyx_n_s_coro_scheduler, __pyx_n_s_RadarRelayMarket_coro_scheduler, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 530, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.coro_scheduler", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_26generator6(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  char const *__pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  char const *__pyx_t_20;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coro_scheduler", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_await;
    case 2: goto __pyx_L22_resume_from_await;
    case 3: goto __pyx_L34_resume_from_await;
    case 4: goto __pyx_L39_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 530, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":531
 *     @staticmethod
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):
 *         while True:             # <<<<<<<<<<<<<<
 *             fut, coro = await coro_queue.get()
 *             try:
 */
  while (1) {

    /* "wings/market/radar_relay_market.pyx":532
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):
 *         while True:
 *             fut, coro = await coro_queue.get()             # <<<<<<<<<<<<<<
 *             try:
 *                 fut.set_result(await coro)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_coro_queue, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XGOTREF(__pyx_r);
    if (likely(__pyx_r)) {
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
      /* return from generator, awaiting value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L6_resume_from_await:;
      if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 532, __pyx_L1_error)
      __pyx_t_1 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_1);
    } else {
      __pyx_t_1 = NULL;
      if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_1) < 0) __PYX_ERR(0, 532, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 532, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 532, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 532, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_4 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 532, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext;
      index = 0; __pyx_t_2 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_2)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      index = 1; __pyx_t_3 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_5(__pyx_t_4), 2) < 0) __PYX_ERR(0, 532, __pyx_L1_error)
      __pyx_t_5 = NULL;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L8_unpacking_done;
      __pyx_L7_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 532, __pyx_L1_error)
      __pyx_L8_unpacking_done:;
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_fut);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_fut, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_coro);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_coro, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":533
 *         while True:
 *             fut, coro = await coro_queue.get()
 *             try:             # <<<<<<<<<<<<<<
 *                 fut.set_result(await coro)
 *             except Exception as e:
 */
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "wings/market/radar_relay_market.pyx":534
 *             fut, coro = await coro_queue.get()
 *             try:
 *                 fut.set_result(await coro)             # <<<<<<<<<<<<<<
 *             except Exception as e:
 *                 fut.set_exception(e)
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_fut, __pyx_n_s_set_result); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 534, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_cur_scope->__pyx_v_coro);
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_1);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
            __Pyx_XGIVEREF(__pyx_t_3);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
            __Pyx_XGIVEREF(__pyx_t_6);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
            __Pyx_XGIVEREF(__pyx_t_7);
            __pyx_cur_scope->__pyx_t_3 = __pyx_t_7;
            __Pyx_XGIVEREF(__pyx_t_8);
            __pyx_cur_scope->__pyx_t_4 = __pyx_t_8;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 2;
            return __pyx_r;
            __pyx_L22_resume_from_await:;
            __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_1);
            __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_3);
            __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_6);
            __pyx_t_7 = __pyx_cur_scope->__pyx_t_3;
            __pyx_cur_scope->__pyx_t_3 = 0;
            __Pyx_XGOTREF(__pyx_t_7);
            __pyx_t_8 = __pyx_cur_scope->__pyx_t_4;
            __pyx_cur_scope->__pyx_t_4 = 0;
            __Pyx_XGOTREF(__pyx_t_8);
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 534, __pyx_L14_error)
            __pyx_t_2 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_2);
          } else {
            __pyx_t_2 = NULL;
            if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_2) < 0) __PYX_ERR(0, 534, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_2);
          }
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 534, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "wings/market/radar_relay_market.pyx":533
 *         while True:
 *             fut, coro = await coro_queue.get()
 *             try:             # <<<<<<<<<<<<<<
 *                 fut.set_result(await coro)
 *             except Exception as e:
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L21_try_end;
        __pyx_L14_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "wings/market/radar_relay_market.pyx":535
 *             try:
 *                 fut.set_result(await coro)
 *             except Exception as e:             # <<<<<<<<<<<<<<
 *                 fut.set_exception(e)
 *             finally:
 */
        __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
        if (__pyx_t_9) {
          __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.coro_scheduler", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_3, &__pyx_t_2) < 0) __PYX_ERR(0, 535, __pyx_L16_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_cur_scope->__pyx_v_e = __pyx_t_3;
          /*try:*/ {

            /* "wings/market/radar_relay_market.pyx":536
 *                 fut.set_result(await coro)
 *             except Exception as e:
 *                 fut.set_exception(e)             # <<<<<<<<<<<<<<
 *             finally:
 *                 await asyncio.sleep(interval)
 */
            __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_fut, __pyx_n_s_set_exception); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 536, __pyx_L28_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_11 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
              __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
              if (likely(__pyx_t_11)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
                __Pyx_INCREF(__pyx_t_11);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_10, function);
              }
            }
            __pyx_t_4 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_11, __pyx_cur_scope->__pyx_v_e) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_cur_scope->__pyx_v_e);
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 536, __pyx_L28_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }

          /* "wings/market/radar_relay_market.pyx":535
 *             try:
 *                 fut.set_result(await coro)
 *             except Exception as e:             # <<<<<<<<<<<<<<
 *                 fut.set_exception(e)
 *             finally:
 */
          /*finally:*/ {
            /*normal exit:*/{
              __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_e);
              __Pyx_DECREF(__pyx_cur_scope->__pyx_v_e);
              __pyx_cur_scope->__pyx_v_e = NULL;
              goto __pyx_L29;
            }
            __pyx_L28_error:;
            /*exception exit:*/{
              __Pyx_PyThreadState_assign
              __pyx_t_14 = 0; __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0;
              __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
              if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16) < 0)) __Pyx_ErrFetch(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
              __Pyx_XGOTREF(__pyx_t_14);
              __Pyx_XGOTREF(__pyx_t_15);
              __Pyx_XGOTREF(__pyx_t_16);
              __Pyx_XGOTREF(__pyx_t_17);
              __Pyx_XGOTREF(__pyx_t_18);
              __Pyx_XGOTREF(__pyx_t_19);
              __pyx_t_9 = __pyx_lineno; __pyx_t_12 = __pyx_clineno; __pyx_t_13 = __pyx_filename;
              {
                __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_e);
                __Pyx_DECREF(__pyx_cur_scope->__pyx_v_e);
                __pyx_cur_scope->__pyx_v_e = NULL;
              }
              if (PY_MAJOR_VERSION >= 3) {
                __Pyx_XGIVEREF(__pyx_t_17);
                __Pyx_XGIVEREF(__pyx_t_18);
                __Pyx_XGIVEREF(__pyx_t_19);
                __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
              }
              __Pyx_XGIVEREF(__pyx_t_14);
              __Pyx_XGIVEREF(__pyx_t_15);
              __Pyx_XGIVEREF(__pyx_t_16);
              __Pyx_ErrRestore(__pyx_t_14, __pyx_t_15, __pyx_t_16);
              __pyx_t_14 = 0; __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0;
              __pyx_lineno = __pyx_t_9; __pyx_clineno = __pyx_t_12; __pyx_filename = __pyx_t_13;
              goto __pyx_L16_except_error;
            }
            __pyx_L29:;
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          goto __pyx_L15_exception_handled;
        }
        goto __pyx_L16_except_error;
        __pyx_L16_except_error:;

        /* "wings/market/radar_relay_market.pyx":533
 *         while True:
 *             fut, coro = await coro_queue.get()
 *             try:             # <<<<<<<<<<<<<<
 *                 fut.set_result(await coro)
 *             except Exception as e:
 */
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L12_error;
        __pyx_L15_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L21_try_end:;
      }
    }

    /* "wings/market/radar_relay_market.pyx":538
 *                 fut.set_exception(e)
 *             finally:
 *                 await asyncio.sleep(interval)             # <<<<<<<<<<<<<<
 * 
 *     async def schedule_async_call(self, coro) -> any:
 */
    /*finally:*/ {
      /*normal exit:*/{
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 538, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sleep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 538, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_interval); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 538, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 538, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_2);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 3;
          return __pyx_r;
          __pyx_L34_resume_from_await:;
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 538, __pyx_L1_error)
        } else {
          PyObject* exc_type = __Pyx_PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
            else __PYX_ERR(0, 538, __pyx_L1_error)
          }
        }
        goto __pyx_L13;
      }
      __pyx_L12_error:;
      /*exception exit:*/{
        __Pyx_PyThreadState_assign
        __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_6 = 0; __pyx_t_19 = 0; __pyx_t_18 = 0; __pyx_t_17 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_19, &__pyx_t_18, &__pyx_t_17);
        if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0)) __Pyx_ErrFetch(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_19);
        __Pyx_XGOTREF(__pyx_t_18);
        __Pyx_XGOTREF(__pyx_t_17);
        __pyx_t_12 = __pyx_lineno; __pyx_t_9 = __pyx_clineno; __pyx_t_20 = __pyx_filename;
        {
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 538, __pyx_L38_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sleep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 538, __pyx_L38_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_interval); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 538, __pyx_L38_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 538, __pyx_L38_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_2);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_6);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_6;
            __Pyx_XGIVEREF(__pyx_t_7);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_7;
            __Pyx_XGIVEREF(__pyx_t_8);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_8;
            __pyx_cur_scope->__pyx_t_5 = __pyx_t_9;
            __pyx_cur_scope->__pyx_t_6 = __pyx_t_12;
            __Pyx_XGIVEREF(__pyx_t_17);
            __pyx_cur_scope->__pyx_t_3 = __pyx_t_17;
            __Pyx_XGIVEREF(__pyx_t_18);
            __pyx_cur_scope->__pyx_t_4 = __pyx_t_18;
            __Pyx_XGIVEREF(__pyx_t_19);
            __pyx_cur_scope->__pyx_t_7 = __pyx_t_19;
            __pyx_cur_scope->__pyx_t_8 = __pyx_t_20;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 4;
            return __pyx_r;
            __pyx_L39_resume_from_await:;
            __pyx_t_6 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_6);
            __pyx_t_7 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_7);
            __pyx_t_8 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_8);
            __pyx_t_9 = __pyx_cur_scope->__pyx_t_5;
            __pyx_t_12 = __pyx_cur_scope->__pyx_t_6;
            __pyx_t_17 = __pyx_cur_scope->__pyx_t_3;
            __pyx_cur_scope->__pyx_t_3 = 0;
            __Pyx_XGOTREF(__pyx_t_17);
            __pyx_t_18 = __pyx_cur_scope->__pyx_t_4;
            __pyx_cur_scope->__pyx_t_4 = 0;
            __Pyx_XGOTREF(__pyx_t_18);
            __pyx_t_19 = __pyx_cur_scope->__pyx_t_7;
            __pyx_cur_scope->__pyx_t_7 = 0;
            __Pyx_XGOTREF(__pyx_t_19);
            __pyx_t_20 = __pyx_cur_scope->__pyx_t_8;
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 538, __pyx_L38_error)
          } else {
            PyObject* exc_type = __Pyx_PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
              else __PYX_ERR(0, 538, __pyx_L38_error)
            }
          }
        }
        if (PY_MAJOR_VERSION >= 3) {
          __Pyx_XGIVEREF(__pyx_t_19);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_18, __pyx_t_17);
        }
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_ErrRestore(__pyx_t_8, __pyx_t_7, __pyx_t_6);
        __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_6 = 0; __pyx_t_19 = 0; __pyx_t_18 = 0; __pyx_t_17 = 0;
        __pyx_lineno = __pyx_t_12; __pyx_clineno = __pyx_t_9; __pyx_filename = __pyx_t_20;
        goto __pyx_L1_error;
        __pyx_L38_error:;
        if (PY_MAJOR_VERSION >= 3) {
          __Pyx_XGIVEREF(__pyx_t_19);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_18, __pyx_t_17);
        }
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_19 = 0; __pyx_t_18 = 0; __pyx_t_17 = 0;
        goto __pyx_L1_error;
      }
      __pyx_L13:;
    }
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":530
 * 
 *     @staticmethod
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):             # <<<<<<<<<<<<<<
 *         while True:
 *             fut, coro = await coro_queue.get()
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("coro_scheduler", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_29generator7(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":540
 *                 await asyncio.sleep(interval)
 * 
 *     async def schedule_async_call(self, coro) -> any:             # <<<<<<<<<<<<<<
 *         fut = self._ev_loop.create_future()
 *         self._coro_queue.put_nowait((fut, coro))
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_28schedule_async_call(PyObject *__pyx_v_self, PyObject *__pyx_v_coro); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_28schedule_async_call(PyObject *__pyx_v_self, PyObject *__pyx_v_coro) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("schedule_async_call (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_27schedule_async_call(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_coro));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_27schedule_async_call(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_coro) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("schedule_async_call", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 540, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_coro = __pyx_v_coro;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_coro);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_coro);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_29generator7, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_schedule_async_call, __pyx_n_s_RadarRelayMarket_schedule_async, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 540, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.schedule_async_call", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_29generator7(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("schedule_async_call", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L4_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 540, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":541
 * 
 *     async def schedule_async_call(self, coro) -> any:
 *         fut = self._ev_loop.create_future()             # <<<<<<<<<<<<<<
 *         self._coro_queue.put_nowait((fut, coro))
 *         return await fut
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_ev_loop, __pyx_n_s_create_future); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_fut = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":542
 *     async def schedule_async_call(self, coro) -> any:
 *         fut = self._ev_loop.create_future()
 *         self._coro_queue.put_nowait((fut, coro))             # <<<<<<<<<<<<<<
 *         return await fut
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_coro_queue, __pyx_n_s_put_nowait); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_fut);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_fut);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_cur_scope->__pyx_v_fut);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_coro);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_coro);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_cur_scope->__pyx_v_coro);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":543
 *         fut = self._ev_loop.create_future()
 *         self._coro_queue.put_nowait((fut, coro))
 *         return await fut             # <<<<<<<<<<<<<<
 * 
 *     async def _api_request(self,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_cur_scope->__pyx_v_fut);
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L4_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 543, __pyx_L1_error)
    __pyx_t_1 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_1);
  } else {
    __pyx_t_1 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_1) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":540
 *                 await asyncio.sleep(interval)
 * 
 *     async def schedule_async_call(self, coro) -> any:             # <<<<<<<<<<<<<<
 *         fut = self._ev_loop.create_future()
 *         self._coro_queue.put_nowait((fut, coro))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("schedule_async_call", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_32generator8(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":545
 *         return await fut
 * 
 *     async def _api_request(self,             # <<<<<<<<<<<<<<
 *                            http_method: str,
 *                            url: str,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_31_api_request(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_31_api_request(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_http_method = 0;
  PyObject *__pyx_v_url = 0;
  PyObject *__pyx_v_data = 0;
  PyObject *__pyx_v_headers = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_api_request (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_http_method,&__pyx_n_s_url,&__pyx_n_s_data,&__pyx_n_s_headers,0};
    PyObject* values[4] = {0,0,0,0};

    /* "wings/market/radar_relay_market.pyx":548
 *                            http_method: str,
 *                            url: str,
 *                            data: Optional[Dict[str, any]] = None,             # <<<<<<<<<<<<<<
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:
 */
    values[2] = ((PyObject *)Py_None);

    /* "wings/market/radar_relay_market.pyx":549
 *                            url: str,
 *                            data: Optional[Dict[str, any]] = None,
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         async with aiohttp.ClientSession() as client:
 *             async with client.request(http_method,
 */
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_http_method)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_url)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_api_request", 0, 2, 4, 1); __PYX_ERR(0, 545, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_data);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_headers);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_api_request") < 0)) __PYX_ERR(0, 545, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_http_method = ((PyObject*)values[0]);
    __pyx_v_url = ((PyObject*)values[1]);
    __pyx_v_data = values[2];
    __pyx_v_headers = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_api_request", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 545, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._api_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_http_method), (&PyUnicode_Type), 1, "http_method", 1))) __PYX_ERR(0, 546, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_url), (&PyUnicode_Type), 1, "url", 1))) __PYX_ERR(0, 547, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_30_api_request(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_http_method, __pyx_v_url, __pyx_v_data, __pyx_v_headers);

  /* "wings/market/radar_relay_market.pyx":545
 *         return await fut
 * 
 *     async def _api_request(self,             # <<<<<<<<<<<<<<
 *                            http_method: str,
 *                            url: str,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_30_api_request(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_http_method, PyObject *__pyx_v_url, PyObject *__pyx_v_data, PyObject *__pyx_v_headers) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_api_request", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 545, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_http_method = __pyx_v_http_method;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_http_method);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_http_method);
  __pyx_cur_scope->__pyx_v_url = __pyx_v_url;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_url);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_url);
  __pyx_cur_scope->__pyx_v_data = __pyx_v_data;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_data);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_data);
  __pyx_cur_scope->__pyx_v_headers = __pyx_v_headers;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_headers);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_headers);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_32generator8, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_api_request, __pyx_n_s_RadarRelayMarket__api_request, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 545, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._api_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_32generator8(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  int __pyx_t_17;
  PyObject *__pyx_t_18 = NULL;
  Py_ssize_t __pyx_t_19;
  Py_UCS4 __pyx_t_20;
  PyObject *__pyx_t_21 = NULL;
  int __pyx_t_22;
  PyObject *__pyx_t_23 = NULL;
  PyObject *__pyx_t_24 = NULL;
  PyObject *__pyx_t_25 = NULL;
  PyObject *__pyx_t_26 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_api_request", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L5_resume_from_await;
    case 2: goto __pyx_L16_resume_from_await;
    case 3: goto __pyx_L33_resume_from_await;
    case 4: goto __pyx_L37_resume_from_await;
    case 5: goto __pyx_L41_resume_from_await;
    case 6: goto __pyx_L42_resume_from_await;
    case 7: goto __pyx_L43_resume_from_await;
    case 8: goto __pyx_L48_resume_from_await;
    case 9: goto __pyx_L49_resume_from_await;
    case 10: goto __pyx_L50_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 545, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":550
 *                            data: Optional[Dict[str, any]] = None,
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:             # <<<<<<<<<<<<<<
 *             async with client.request(http_method,
 *                                       url=url,
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_aiohttp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ClientSession); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_aexit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_aenter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 550, __pyx_L4_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L4_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XGOTREF(__pyx_r);
    if (likely(__pyx_r)) {
      __Pyx_XGIVEREF(__pyx_t_1);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
      __Pyx_XGIVEREF(__pyx_t_4);
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
      /* return from generator, awaiting value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L5_resume_from_await:;
      __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_1);
      __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
      __pyx_cur_scope->__pyx_t_1 = 0;
      __Pyx_XGOTREF(__pyx_t_4);
      if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 550, __pyx_L4_error)
      __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
    } else {
      __pyx_t_3 = NULL;
      if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 550, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_3);
    }
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_cur_scope->__pyx_v_client = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "wings/market/radar_relay_market.pyx":551
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:
 *             async with client.request(http_method,             # <<<<<<<<<<<<<<
 *                                       url=url,
 *                                       timeout=self.API_CALL_TIMEOUT,
 */
          /*with:*/ {
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_client, __pyx_n_s_request); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 551, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 551, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_cur_scope->__pyx_v_http_method);
            __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_http_method);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_cur_scope->__pyx_v_http_method);

            /* "wings/market/radar_relay_market.pyx":552
 *         async with aiohttp.ClientSession() as client:
 *             async with client.request(http_method,
 *                                       url=url,             # <<<<<<<<<<<<<<
 *                                       timeout=self.API_CALL_TIMEOUT,
 *                                       data=data,
 */
            __pyx_t_3 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 552, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 552, __pyx_L9_error)

            /* "wings/market/radar_relay_market.pyx":553
 *             async with client.request(http_method,
 *                                       url=url,
 *                                       timeout=self.API_CALL_TIMEOUT,             # <<<<<<<<<<<<<<
 *                                       data=data,
 *                                       headers=headers) as response:
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_API_CALL_TIMEOUT); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 553, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_timeout, __pyx_t_5) < 0) __PYX_ERR(0, 552, __pyx_L9_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "wings/market/radar_relay_market.pyx":554
 *                                       url=url,
 *                                       timeout=self.API_CALL_TIMEOUT,
 *                                       data=data,             # <<<<<<<<<<<<<<
 *                                       headers=headers) as response:
 *                 try:
 */
            if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_data, __pyx_cur_scope->__pyx_v_data) < 0) __PYX_ERR(0, 552, __pyx_L9_error)

            /* "wings/market/radar_relay_market.pyx":555
 *                                       timeout=self.API_CALL_TIMEOUT,
 *                                       data=data,
 *                                       headers=headers) as response:             # <<<<<<<<<<<<<<
 *                 try:
 *                     if response.status == 201:
 */
            if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_headers, __pyx_cur_scope->__pyx_v_headers) < 0) __PYX_ERR(0, 552, __pyx_L9_error)

            /* "wings/market/radar_relay_market.pyx":551
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:
 *             async with client.request(http_method,             # <<<<<<<<<<<<<<
 *                                       url=url,
 *                                       timeout=self.API_CALL_TIMEOUT,
 */
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 551, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_9 = __Pyx_PyObject_LookupSpecial(__pyx_t_5, __pyx_n_s_aexit); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 551, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_9);
            __pyx_t_1 = __Pyx_PyObject_LookupSpecial(__pyx_t_5, __pyx_n_s_aenter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 551, __pyx_L15_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 551, __pyx_L15_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_3);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XGOTREF(__pyx_r);
            if (likely(__pyx_r)) {
              __Pyx_XGIVEREF(__pyx_t_4);
              __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
              __Pyx_XGIVEREF(__pyx_t_5);
              __pyx_cur_scope->__pyx_t_1 = __pyx_t_5;
              __Pyx_XGIVEREF(__pyx_t_6);
              __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
              __Pyx_XGIVEREF(__pyx_t_7);
              __pyx_cur_scope->__pyx_t_3 = __pyx_t_7;
              __Pyx_XGIVEREF(__pyx_t_8);
              __pyx_cur_scope->__pyx_t_4 = __pyx_t_8;
              __Pyx_XGIVEREF(__pyx_t_9);
              __pyx_cur_scope->__pyx_t_5 = __pyx_t_9;
              __Pyx_XGIVEREF(__pyx_r);
              __Pyx_RefNannyFinishContext();
              __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
              /* return from generator, awaiting value */
              __pyx_generator->resume_label = 2;
              return __pyx_r;
              __pyx_L16_resume_from_await:;
              __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
              __pyx_cur_scope->__pyx_t_0 = 0;
              __Pyx_XGOTREF(__pyx_t_4);
              __pyx_t_5 = __pyx_cur_scope->__pyx_t_1;
              __pyx_cur_scope->__pyx_t_1 = 0;
              __Pyx_XGOTREF(__pyx_t_5);
              __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
              __pyx_cur_scope->__pyx_t_2 = 0;
              __Pyx_XGOTREF(__pyx_t_6);
              __pyx_t_7 = __pyx_cur_scope->__pyx_t_3;
              __pyx_cur_scope->__pyx_t_3 = 0;
              __Pyx_XGOTREF(__pyx_t_7);
              __pyx_t_8 = __pyx_cur_scope->__pyx_t_4;
              __pyx_cur_scope->__pyx_t_4 = 0;
              __Pyx_XGOTREF(__pyx_t_8);
              __pyx_t_9 = __pyx_cur_scope->__pyx_t_5;
              __pyx_cur_scope->__pyx_t_5 = 0;
              __Pyx_XGOTREF(__pyx_t_9);
              if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 551, __pyx_L15_error)
              __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
            } else {
              __pyx_t_3 = NULL;
              if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 551, __pyx_L15_error)
              __Pyx_GOTREF(__pyx_t_3);
            }
            __pyx_t_1 = __pyx_t_3;
            __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            /*try:*/ {
              {
                __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
                __Pyx_XGOTREF(__pyx_t_10);
                __Pyx_XGOTREF(__pyx_t_11);
                __Pyx_XGOTREF(__pyx_t_12);
                /*try:*/ {
                  __Pyx_GIVEREF(__pyx_t_1);
                  __pyx_cur_scope->__pyx_v_response = __pyx_t_1;
                  __pyx_t_1 = 0;

                  /* "wings/market/radar_relay_market.pyx":556
 *                                       data=data,
 *                                       headers=headers) as response:
 *                 try:             # <<<<<<<<<<<<<<
 *                     if response.status == 201:
 *                         return response
 */
                  {
                    __Pyx_ExceptionSave(&__pyx_t_13, &__pyx_t_14, &__pyx_t_15);
                    __Pyx_XGOTREF(__pyx_t_13);
                    __Pyx_XGOTREF(__pyx_t_14);
                    __Pyx_XGOTREF(__pyx_t_15);
                    /*try:*/ {

                      /* "wings/market/radar_relay_market.pyx":557
 *                                       headers=headers) as response:
 *                 try:
 *                     if response.status == 201:             # <<<<<<<<<<<<<<
 *                         return response
 *                     elif response.status == 200:
 */
                      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 557, __pyx_L26_error)
                      __Pyx_GOTREF(__pyx_t_1);
                      __pyx_t_5 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_201, 0xC9, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 557, __pyx_L26_error)
                      __Pyx_GOTREF(__pyx_t_5);
                      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                      __pyx_t_16 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_16 < 0)) __PYX_ERR(0, 557, __pyx_L26_error)
                      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                      if (__pyx_t_16) {

                        /* "wings/market/radar_relay_market.pyx":558
 *                 try:
 *                     if response.status == 201:
 *                         return response             # <<<<<<<<<<<<<<
 *                     elif response.status == 200:
 *                         response_json = await response.json()
 */
                        __Pyx_XDECREF(__pyx_r);
                        __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_cur_scope->__pyx_v_response);
                        goto __pyx_L30_try_return;

                        /* "wings/market/radar_relay_market.pyx":557
 *                                       headers=headers) as response:
 *                 try:
 *                     if response.status == 201:             # <<<<<<<<<<<<<<
 *                         return response
 *                     elif response.status == 200:
 */
                      }

                      /* "wings/market/radar_relay_market.pyx":559
 *                     if response.status == 201:
 *                         return response
 *                     elif response.status == 200:             # <<<<<<<<<<<<<<
 *                         response_json = await response.json()
 *                         return response_json
 */
                      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_status); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 559, __pyx_L26_error)
                      __Pyx_GOTREF(__pyx_t_5);
                      __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_t_5, __pyx_int_200, 0xC8, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 559, __pyx_L26_error)
                      __Pyx_GOTREF(__pyx_t_1);
                      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                      __pyx_t_16 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_16 < 0)) __PYX_ERR(0, 559, __pyx_L26_error)
                      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                      if (likely(__pyx_t_16)) {

                        /* "wings/market/radar_relay_market.pyx":560
 *                         return response
 *                     elif response.status == 200:
 *                         response_json = await response.json()             # <<<<<<<<<<<<<<
 *                         return response_json
 *                     else:
 */
                        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_json); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L26_error)
                        __Pyx_GOTREF(__pyx_t_5);
                        __pyx_t_3 = NULL;
                        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                          if (likely(__pyx_t_3)) {
                            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                            __Pyx_INCREF(__pyx_t_3);
                            __Pyx_INCREF(function);
                            __Pyx_DECREF_SET(__pyx_t_5, function);
                          }
                        }
                        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
                        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L26_error)
                        __Pyx_GOTREF(__pyx_t_1);
                        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_1);
                        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                        __Pyx_XGOTREF(__pyx_r);
                        if (likely(__pyx_r)) {
                          __Pyx_XGIVEREF(__pyx_t_4);
                          __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
                          __Pyx_XGIVEREF(__pyx_t_6);
                          __pyx_cur_scope->__pyx_t_1 = __pyx_t_6;
                          __Pyx_XGIVEREF(__pyx_t_7);
                          __pyx_cur_scope->__pyx_t_2 = __pyx_t_7;
                          __Pyx_XGIVEREF(__pyx_t_8);
                          __pyx_cur_scope->__pyx_t_3 = __pyx_t_8;
                          __Pyx_XGIVEREF(__pyx_t_9);
                          __pyx_cur_scope->__pyx_t_4 = __pyx_t_9;
                          __Pyx_XGIVEREF(__pyx_t_10);
                          __pyx_cur_scope->__pyx_t_5 = __pyx_t_10;
                          __Pyx_XGIVEREF(__pyx_t_11);
                          __pyx_cur_scope->__pyx_t_6 = __pyx_t_11;
                          __Pyx_XGIVEREF(__pyx_t_12);
                          __pyx_cur_scope->__pyx_t_7 = __pyx_t_12;
                          __Pyx_XGIVEREF(__pyx_t_13);
                          __pyx_cur_scope->__pyx_t_8 = __pyx_t_13;
                          __Pyx_XGIVEREF(__pyx_t_14);
                          __pyx_cur_scope->__pyx_t_9 = __pyx_t_14;
                          __Pyx_XGIVEREF(__pyx_t_15);
                          __pyx_cur_scope->__pyx_t_10 = __pyx_t_15;
                          __Pyx_XGIVEREF(__pyx_r);
                          __Pyx_RefNannyFinishContext();
                          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
                          /* return from generator, awaiting value */
                          __pyx_generator->resume_label = 3;
                          return __pyx_r;
                          __pyx_L33_resume_from_await:;
                          __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
                          __pyx_cur_scope->__pyx_t_0 = 0;
                          __Pyx_XGOTREF(__pyx_t_4);
                          __pyx_t_6 = __pyx_cur_scope->__pyx_t_1;
                          __pyx_cur_scope->__pyx_t_1 = 0;
                          __Pyx_XGOTREF(__pyx_t_6);
                          __pyx_t_7 = __pyx_cur_scope->__pyx_t_2;
                          __pyx_cur_scope->__pyx_t_2 = 0;
                          __Pyx_XGOTREF(__pyx_t_7);
                          __pyx_t_8 = __pyx_cur_scope->__pyx_t_3;
                          __pyx_cur_scope->__pyx_t_3 = 0;
                          __Pyx_XGOTREF(__pyx_t_8);
                          __pyx_t_9 = __pyx_cur_scope->__pyx_t_4;
                          __pyx_cur_scope->__pyx_t_4 = 0;
                          __Pyx_XGOTREF(__pyx_t_9);
                          __pyx_t_10 = __pyx_cur_scope->__pyx_t_5;
                          __pyx_cur_scope->__pyx_t_5 = 0;
                          __Pyx_XGOTREF(__pyx_t_10);
                          __pyx_t_11 = __pyx_cur_scope->__pyx_t_6;
                          __pyx_cur_scope->__pyx_t_6 = 0;
                          __Pyx_XGOTREF(__pyx_t_11);
                          __pyx_t_12 = __pyx_cur_scope->__pyx_t_7;
                          __pyx_cur_scope->__pyx_t_7 = 0;
                          __Pyx_XGOTREF(__pyx_t_12);
                          __pyx_t_13 = __pyx_cur_scope->__pyx_t_8;
                          __pyx_cur_scope->__pyx_t_8 = 0;
                          __Pyx_XGOTREF(__pyx_t_13);
                          __pyx_t_14 = __pyx_cur_scope->__pyx_t_9;
                          __pyx_cur_scope->__pyx_t_9 = 0;
                          __Pyx_XGOTREF(__pyx_t_14);
                          __pyx_t_15 = __pyx_cur_scope->__pyx_t_10;
                          __pyx_cur_scope->__pyx_t_10 = 0;
                          __Pyx_XGOTREF(__pyx_t_15);
                          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 560, __pyx_L26_error)
                          __pyx_t_1 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_1);
                        } else {
                          __pyx_t_1 = NULL;
                          if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_1) < 0) __PYX_ERR(0, 560, __pyx_L26_error)
                          __Pyx_GOTREF(__pyx_t_1);
                        }
                        __Pyx_GIVEREF(__pyx_t_1);
                        __pyx_cur_scope->__pyx_v_response_json = __pyx_t_1;
                        __pyx_t_1 = 0;

                        /* "wings/market/radar_relay_market.pyx":561
 *                     elif response.status == 200:
 *                         response_json = await response.json()
 *                         return response_json             # <<<<<<<<<<<<<<
 *                     else:
 *                         raise IOError
 */
                        __Pyx_XDECREF(__pyx_r);
                        __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_cur_scope->__pyx_v_response_json);
                        goto __pyx_L30_try_return;

                        /* "wings/market/radar_relay_market.pyx":559
 *                     if response.status == 201:
 *                         return response
 *                     elif response.status == 200:             # <<<<<<<<<<<<<<
 *                         response_json = await response.json()
 *                         return response_json
 */
                      }

                      /* "wings/market/radar_relay_market.pyx":563
 *                         return response_json
 *                     else:
 *                         raise IOError             # <<<<<<<<<<<<<<
 *                 except Exception:
 *                     if response.status == 502:
 */
                      /*else*/ {
                        __Pyx_Raise(__pyx_builtin_IOError, 0, 0, 0);
                        __PYX_ERR(0, 563, __pyx_L26_error)
                      }

                      /* "wings/market/radar_relay_market.pyx":556
 *                                       data=data,
 *                                       headers=headers) as response:
 *                 try:             # <<<<<<<<<<<<<<
 *                     if response.status == 201:
 *                         return response
 */
                    }
                    __pyx_L26_error:;
                    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
                    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

                    /* "wings/market/radar_relay_market.pyx":564
 *                     else:
 *                         raise IOError
 *                 except Exception:             # <<<<<<<<<<<<<<
 *                     if response.status == 502:
 *                         raise IOError(f"Error fetching data from {url}. "
 */
                    __pyx_t_17 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
                    if (__pyx_t_17) {
                      __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._api_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
                      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_3) < 0) __PYX_ERR(0, 564, __pyx_L28_except_error)
                      __Pyx_GOTREF(__pyx_t_1);
                      __Pyx_GOTREF(__pyx_t_5);
                      __Pyx_GOTREF(__pyx_t_3);

                      /* "wings/market/radar_relay_market.pyx":565
 *                         raise IOError
 *                 except Exception:
 *                     if response.status == 502:             # <<<<<<<<<<<<<<
 *                         raise IOError(f"Error fetching data from {url}. "
 *                                       f"HTTP status is {response.status} - Server Error: Bad Gateway.")
 */
                      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_status); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 565, __pyx_L28_except_error)
                      __Pyx_GOTREF(__pyx_t_2);
                      __pyx_t_18 = __Pyx_PyInt_EqObjC(__pyx_t_2, __pyx_int_502, 0x1F6, 0); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 565, __pyx_L28_except_error)
                      __Pyx_GOTREF(__pyx_t_18);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __pyx_t_16 = __Pyx_PyObject_IsTrue(__pyx_t_18); if (unlikely(__pyx_t_16 < 0)) __PYX_ERR(0, 565, __pyx_L28_except_error)
                      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                      if (unlikely(__pyx_t_16)) {

                        /* "wings/market/radar_relay_market.pyx":566
 *                 except Exception:
 *                     if response.status == 502:
 *                         raise IOError(f"Error fetching data from {url}. "             # <<<<<<<<<<<<<<
 *                                       f"HTTP status is {response.status} - Server Error: Bad Gateway.")
 *                     else:
 */
                        __pyx_t_18 = PyTuple_New(5); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 566, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_18);
                        __pyx_t_19 = 0;
                        __pyx_t_20 = 127;
                        __Pyx_INCREF(__pyx_kp_u_Error_fetching_data_from);
                        __pyx_t_19 += 25;
                        __Pyx_GIVEREF(__pyx_kp_u_Error_fetching_data_from);
                        PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_kp_u_Error_fetching_data_from);
                        __pyx_t_2 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_url); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __pyx_t_20 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_20) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_20;
                        __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
                        __Pyx_GIVEREF(__pyx_t_2);
                        PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_2);
                        __pyx_t_2 = 0;
                        __Pyx_INCREF(__pyx_kp_u_HTTP_status_is);
                        __pyx_t_19 += 17;
                        __Pyx_GIVEREF(__pyx_kp_u_HTTP_status_is);
                        PyTuple_SET_ITEM(__pyx_t_18, 2, __pyx_kp_u_HTTP_status_is);

                        /* "wings/market/radar_relay_market.pyx":567
 *                     if response.status == 502:
 *                         raise IOError(f"Error fetching data from {url}. "
 *                                       f"HTTP status is {response.status} - Server Error: Bad Gateway.")             # <<<<<<<<<<<<<<
 *                     else:
 *                         response_text = await response.text()
 */
                        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_status); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 567, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __pyx_t_21 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 567, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_21);
                        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                        __pyx_t_20 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_21) > __pyx_t_20) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_21) : __pyx_t_20;
                        __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_21);
                        __Pyx_GIVEREF(__pyx_t_21);
                        PyTuple_SET_ITEM(__pyx_t_18, 3, __pyx_t_21);
                        __pyx_t_21 = 0;
                        __Pyx_INCREF(__pyx_kp_u_Server_Error_Bad_Gateway);
                        __pyx_t_19 += 29;
                        __Pyx_GIVEREF(__pyx_kp_u_Server_Error_Bad_Gateway);
                        PyTuple_SET_ITEM(__pyx_t_18, 4, __pyx_kp_u_Server_Error_Bad_Gateway);

                        /* "wings/market/radar_relay_market.pyx":566
 *                 except Exception:
 *                     if response.status == 502:
 *                         raise IOError(f"Error fetching data from {url}. "             # <<<<<<<<<<<<<<
 *                                       f"HTTP status is {response.status} - Server Error: Bad Gateway.")
 *                     else:
 */
                        __pyx_t_21 = __Pyx_PyUnicode_Join(__pyx_t_18, 5, __pyx_t_19, __pyx_t_20); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 566, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_21);
                        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __pyx_t_18 = __Pyx_PyObject_CallOneArg(__pyx_builtin_IOError, __pyx_t_21); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 566, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_18);
                        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
                        __Pyx_Raise(__pyx_t_18, 0, 0, 0);
                        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __PYX_ERR(0, 566, __pyx_L28_except_error)

                        /* "wings/market/radar_relay_market.pyx":565
 *                         raise IOError
 *                 except Exception:
 *                     if response.status == 502:             # <<<<<<<<<<<<<<
 *                         raise IOError(f"Error fetching data from {url}. "
 *                                       f"HTTP status is {response.status} - Server Error: Bad Gateway.")
 */
                      }

                      /* "wings/market/radar_relay_market.pyx":569
 *                                       f"HTTP status is {response.status} - Server Error: Bad Gateway.")
 *                     else:
 *                         response_text = await response.text()             # <<<<<<<<<<<<<<
 *                         raise IOError(f"Error fetching data from {url}. "
 *                                       f"HTTP status is {response.status} - {response_text}.")
 */
                      /*else*/ {
                        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_text); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 569, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_21);
                        __pyx_t_2 = NULL;
                        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_21))) {
                          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_21);
                          if (likely(__pyx_t_2)) {
                            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
                            __Pyx_INCREF(__pyx_t_2);
                            __Pyx_INCREF(function);
                            __Pyx_DECREF_SET(__pyx_t_21, function);
                          }
                        }
                        __pyx_t_18 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_21, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_21);
                        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                        if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 569, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_18);
                        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
                        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_18);
                        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __Pyx_XGOTREF(__pyx_r);
                        if (likely(__pyx_r)) {
                          __Pyx_XGIVEREF(__pyx_t_1);
                          __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
                          __Pyx_XGIVEREF(__pyx_t_3);
                          __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
                          __Pyx_XGIVEREF(__pyx_t_4);
                          __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
                          __Pyx_XGIVEREF(__pyx_t_5);
                          __pyx_cur_scope->__pyx_t_3 = __pyx_t_5;
                          __Pyx_XGIVEREF(__pyx_t_6);
                          __pyx_cur_scope->__pyx_t_4 = __pyx_t_6;
                          __Pyx_XGIVEREF(__pyx_t_7);
                          __pyx_cur_scope->__pyx_t_5 = __pyx_t_7;
                          __Pyx_XGIVEREF(__pyx_t_8);
                          __pyx_cur_scope->__pyx_t_6 = __pyx_t_8;
                          __Pyx_XGIVEREF(__pyx_t_9);
                          __pyx_cur_scope->__pyx_t_7 = __pyx_t_9;
                          __Pyx_XGIVEREF(__pyx_t_10);
                          __pyx_cur_scope->__pyx_t_8 = __pyx_t_10;
                          __Pyx_XGIVEREF(__pyx_t_11);
                          __pyx_cur_scope->__pyx_t_9 = __pyx_t_11;
                          __Pyx_XGIVEREF(__pyx_t_12);
                          __pyx_cur_scope->__pyx_t_10 = __pyx_t_12;
                          __Pyx_XGIVEREF(__pyx_t_13);
                          __pyx_cur_scope->__pyx_t_11 = __pyx_t_13;
                          __Pyx_XGIVEREF(__pyx_t_14);
                          __pyx_cur_scope->__pyx_t_12 = __pyx_t_14;
                          __Pyx_XGIVEREF(__pyx_t_15);
                          __pyx_cur_scope->__pyx_t_13 = __pyx_t_15;
                          __Pyx_XGIVEREF(__pyx_r);
                          __Pyx_RefNannyFinishContext();
                          __Pyx_Coroutine_SwapException(__pyx_generator);
                          /* return from generator, awaiting value */
                          __pyx_generator->resume_label = 4;
                          return __pyx_r;
                          __pyx_L37_resume_from_await:;
                          __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
                          __pyx_cur_scope->__pyx_t_0 = 0;
                          __Pyx_XGOTREF(__pyx_t_1);
                          __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
                          __pyx_cur_scope->__pyx_t_1 = 0;
                          __Pyx_XGOTREF(__pyx_t_3);
                          __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
                          __pyx_cur_scope->__pyx_t_2 = 0;
                          __Pyx_XGOTREF(__pyx_t_4);
                          __pyx_t_5 = __pyx_cur_scope->__pyx_t_3;
                          __pyx_cur_scope->__pyx_t_3 = 0;
                          __Pyx_XGOTREF(__pyx_t_5);
                          __pyx_t_6 = __pyx_cur_scope->__pyx_t_4;
                          __pyx_cur_scope->__pyx_t_4 = 0;
                          __Pyx_XGOTREF(__pyx_t_6);
                          __pyx_t_7 = __pyx_cur_scope->__pyx_t_5;
                          __pyx_cur_scope->__pyx_t_5 = 0;
                          __Pyx_XGOTREF(__pyx_t_7);
                          __pyx_t_8 = __pyx_cur_scope->__pyx_t_6;
                          __pyx_cur_scope->__pyx_t_6 = 0;
                          __Pyx_XGOTREF(__pyx_t_8);
                          __pyx_t_9 = __pyx_cur_scope->__pyx_t_7;
                          __pyx_cur_scope->__pyx_t_7 = 0;
                          __Pyx_XGOTREF(__pyx_t_9);
                          __pyx_t_10 = __pyx_cur_scope->__pyx_t_8;
                          __pyx_cur_scope->__pyx_t_8 = 0;
                          __Pyx_XGOTREF(__pyx_t_10);
                          __pyx_t_11 = __pyx_cur_scope->__pyx_t_9;
                          __pyx_cur_scope->__pyx_t_9 = 0;
                          __Pyx_XGOTREF(__pyx_t_11);
                          __pyx_t_12 = __pyx_cur_scope->__pyx_t_10;
                          __pyx_cur_scope->__pyx_t_10 = 0;
                          __Pyx_XGOTREF(__pyx_t_12);
                          __pyx_t_13 = __pyx_cur_scope->__pyx_t_11;
                          __pyx_cur_scope->__pyx_t_11 = 0;
                          __Pyx_XGOTREF(__pyx_t_13);
                          __pyx_t_14 = __pyx_cur_scope->__pyx_t_12;
                          __pyx_cur_scope->__pyx_t_12 = 0;
                          __Pyx_XGOTREF(__pyx_t_14);
                          __pyx_t_15 = __pyx_cur_scope->__pyx_t_13;
                          __pyx_cur_scope->__pyx_t_13 = 0;
                          __Pyx_XGOTREF(__pyx_t_15);
                          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 569, __pyx_L28_except_error)
                          __pyx_t_18 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_18);
                        } else {
                          __pyx_t_18 = NULL;
                          if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_18) < 0) __PYX_ERR(0, 569, __pyx_L28_except_error)
                          __Pyx_GOTREF(__pyx_t_18);
                        }
                        __Pyx_GIVEREF(__pyx_t_18);
                        __pyx_cur_scope->__pyx_v_response_text = __pyx_t_18;
                        __pyx_t_18 = 0;

                        /* "wings/market/radar_relay_market.pyx":570
 *                     else:
 *                         response_text = await response.text()
 *                         raise IOError(f"Error fetching data from {url}. "             # <<<<<<<<<<<<<<
 *                                       f"HTTP status is {response.status} - {response_text}.")
 * 
 */
                        __pyx_t_18 = PyTuple_New(7); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 570, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_18);
                        __pyx_t_19 = 0;
                        __pyx_t_20 = 127;
                        __Pyx_INCREF(__pyx_kp_u_Error_fetching_data_from);
                        __pyx_t_19 += 25;
                        __Pyx_GIVEREF(__pyx_kp_u_Error_fetching_data_from);
                        PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_kp_u_Error_fetching_data_from);
                        __pyx_t_21 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_url); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 570, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_21);
                        __pyx_t_20 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_21) > __pyx_t_20) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_21) : __pyx_t_20;
                        __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_21);
                        __Pyx_GIVEREF(__pyx_t_21);
                        PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_21);
                        __pyx_t_21 = 0;
                        __Pyx_INCREF(__pyx_kp_u_HTTP_status_is);
                        __pyx_t_19 += 17;
                        __Pyx_GIVEREF(__pyx_kp_u_HTTP_status_is);
                        PyTuple_SET_ITEM(__pyx_t_18, 2, __pyx_kp_u_HTTP_status_is);

                        /* "wings/market/radar_relay_market.pyx":571
 *                         response_text = await response.text()
 *                         raise IOError(f"Error fetching data from {url}. "
 *                                       f"HTTP status is {response.status} - {response_text}.")             # <<<<<<<<<<<<<<
 * 
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:
 */
                        __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_response, __pyx_n_s_status); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 571, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_21);
                        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_21, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 571, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
                        __pyx_t_20 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_20) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_20;
                        __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
                        __Pyx_GIVEREF(__pyx_t_2);
                        PyTuple_SET_ITEM(__pyx_t_18, 3, __pyx_t_2);
                        __pyx_t_2 = 0;
                        __Pyx_INCREF(__pyx_kp_u__12);
                        __pyx_t_19 += 3;
                        __Pyx_GIVEREF(__pyx_kp_u__12);
                        PyTuple_SET_ITEM(__pyx_t_18, 4, __pyx_kp_u__12);
                        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_response_text, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 571, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __pyx_t_20 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_20) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_20;
                        __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
                        __Pyx_GIVEREF(__pyx_t_2);
                        PyTuple_SET_ITEM(__pyx_t_18, 5, __pyx_t_2);
                        __pyx_t_2 = 0;
                        __Pyx_INCREF(__pyx_kp_u__9);
                        __pyx_t_19 += 1;
                        __Pyx_GIVEREF(__pyx_kp_u__9);
                        PyTuple_SET_ITEM(__pyx_t_18, 6, __pyx_kp_u__9);

                        /* "wings/market/radar_relay_market.pyx":570
 *                     else:
 *                         response_text = await response.text()
 *                         raise IOError(f"Error fetching data from {url}. "             # <<<<<<<<<<<<<<
 *                                       f"HTTP status is {response.status} - {response_text}.")
 * 
 */
                        __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_18, 7, __pyx_t_19, __pyx_t_20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 570, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __pyx_t_18 = __Pyx_PyObject_CallOneArg(__pyx_builtin_IOError, __pyx_t_2); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 570, __pyx_L28_except_error)
                        __Pyx_GOTREF(__pyx_t_18);
                        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                        __Pyx_Raise(__pyx_t_18, 0, 0, 0);
                        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __PYX_ERR(0, 570, __pyx_L28_except_error)
                      }
                    }
                    goto __pyx_L28_except_error;
                    __pyx_L28_except_error:;

                    /* "wings/market/radar_relay_market.pyx":556
 *                                       data=data,
 *                                       headers=headers) as response:
 *                 try:             # <<<<<<<<<<<<<<
 *                     if response.status == 201:
 *                         return response
 */
                    __Pyx_XGIVEREF(__pyx_t_13);
                    __Pyx_XGIVEREF(__pyx_t_14);
                    __Pyx_XGIVEREF(__pyx_t_15);
                    __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_14, __pyx_t_15);
                    goto __pyx_L20_error;
                    __pyx_L30_try_return:;
                    __Pyx_XGIVEREF(__pyx_t_13);
                    __Pyx_XGIVEREF(__pyx_t_14);
                    __Pyx_XGIVEREF(__pyx_t_15);
                    __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_14, __pyx_t_15);
                    goto __pyx_L24_try_return;
                  }

                  /* "wings/market/radar_relay_market.pyx":551
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:
 *             async with client.request(http_method,             # <<<<<<<<<<<<<<
 *                                       url=url,
 *                                       timeout=self.API_CALL_TIMEOUT,
 */
                }
                __pyx_L20_error:;
                __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                /*except:*/ {
                  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._api_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
                  if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_5, &__pyx_t_1) < 0) __PYX_ERR(0, 551, __pyx_L22_except_error)
                  __Pyx_GOTREF(__pyx_t_3);
                  __Pyx_GOTREF(__pyx_t_5);
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_18 = PyTuple_Pack(3, __pyx_t_3, __pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 551, __pyx_L22_except_error)
                  __Pyx_GOTREF(__pyx_t_18);
                  __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_18, NULL);
                  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
                  __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                  if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 551, __pyx_L22_except_error)
                  __Pyx_GOTREF(__pyx_t_15);
                  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_15);
                  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                  __Pyx_XGOTREF(__pyx_r);
                  if (likely(__pyx_r)) {
                    __Pyx_XGIVEREF(__pyx_t_1);
                    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
                    __Pyx_XGIVEREF(__pyx_t_3);
                    __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
                    __Pyx_XGIVEREF(__pyx_t_4);
                    __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
                    __Pyx_XGIVEREF(__pyx_t_5);
                    __pyx_cur_scope->__pyx_t_3 = __pyx_t_5;
                    __Pyx_XGIVEREF(__pyx_t_6);
                    __pyx_cur_scope->__pyx_t_4 = __pyx_t_6;
                    __Pyx_XGIVEREF(__pyx_t_7);
                    __pyx_cur_scope->__pyx_t_5 = __pyx_t_7;
                    __Pyx_XGIVEREF(__pyx_t_8);
                    __pyx_cur_scope->__pyx_t_6 = __pyx_t_8;
                    __Pyx_XGIVEREF(__pyx_t_9);
                    __pyx_cur_scope->__pyx_t_7 = __pyx_t_9;
                    __Pyx_XGIVEREF(__pyx_t_10);
                    __pyx_cur_scope->__pyx_t_8 = __pyx_t_10;
                    __Pyx_XGIVEREF(__pyx_t_11);
                    __pyx_cur_scope->__pyx_t_9 = __pyx_t_11;
                    __Pyx_XGIVEREF(__pyx_t_12);
                    __pyx_cur_scope->__pyx_t_10 = __pyx_t_12;
                    __Pyx_XGIVEREF(__pyx_t_15);
                    __pyx_cur_scope->__pyx_t_11 = __pyx_t_15;
                    __Pyx_XGIVEREF(__pyx_r);
                    __Pyx_RefNannyFinishContext();
                    __Pyx_Coroutine_SwapException(__pyx_generator);
                    /* return from generator, awaiting value */
                    __pyx_generator->resume_label = 5;
                    return __pyx_r;
                    __pyx_L41_resume_from_await:;
                    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
                    __pyx_cur_scope->__pyx_t_0 = 0;
                    __Pyx_XGOTREF(__pyx_t_1);
                    __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
                    __pyx_cur_scope->__pyx_t_1 = 0;
                    __Pyx_XGOTREF(__pyx_t_3);
                    __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
                    __pyx_cur_scope->__pyx_t_2 = 0;
                    __Pyx_XGOTREF(__pyx_t_4);
                    __pyx_t_5 = __pyx_cur_scope->__pyx_t_3;
                    __pyx_cur_scope->__pyx_t_3 = 0;
                    __Pyx_XGOTREF(__pyx_t_5);
                    __pyx_t_6 = __pyx_cur_scope->__pyx_t_4;
                    __pyx_cur_scope->__pyx_t_4 = 0;
                    __Pyx_XGOTREF(__pyx_t_6);
                    __pyx_t_7 = __pyx_cur_scope->__pyx_t_5;
                    __pyx_cur_scope->__pyx_t_5 = 0;
                    __Pyx_XGOTREF(__pyx_t_7);
                    __pyx_t_8 = __pyx_cur_scope->__pyx_t_6;
                    __pyx_cur_scope->__pyx_t_6 = 0;
                    __Pyx_XGOTREF(__pyx_t_8);
                    __pyx_t_9 = __pyx_cur_scope->__pyx_t_7;
                    __pyx_cur_scope->__pyx_t_7 = 0;
                    __Pyx_XGOTREF(__pyx_t_9);
                    __pyx_t_10 = __pyx_cur_scope->__pyx_t_8;
                    __pyx_cur_scope->__pyx_t_8 = 0;
                    __Pyx_XGOTREF(__pyx_t_10);
                    __pyx_t_11 = __pyx_cur_scope->__pyx_t_9;
                    __pyx_cur_scope->__pyx_t_9 = 0;
                    __Pyx_XGOTREF(__pyx_t_11);
                    __pyx_t_12 = __pyx_cur_scope->__pyx_t_10;
                    __pyx_cur_scope->__pyx_t_10 = 0;
                    __Pyx_XGOTREF(__pyx_t_12);
                    __pyx_t_15 = __pyx_cur_scope->__pyx_t_11;
                    __pyx_cur_scope->__pyx_t_11 = 0;
                    __Pyx_XGOTREF(__pyx_t_15);
                    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 551, __pyx_L22_except_error)
                    __pyx_t_18 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_18);
                  } else {
                    __pyx_t_18 = NULL;
                    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_18) < 0) __PYX_ERR(0, 551, __pyx_L22_except_error)
                    __Pyx_GOTREF(__pyx_t_18);
                  }
                  __pyx_t_15 = __pyx_t_18;
                  __pyx_t_18 = 0;
                  __pyx_t_16 = __Pyx_PyObject_IsTrue(__pyx_t_15);
                  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                  if (__pyx_t_16 < 0) __PYX_ERR(0, 551, __pyx_L22_except_error)
                  __pyx_t_22 = ((!(__pyx_t_16 != 0)) != 0);
                  if (__pyx_t_22) {
                    __Pyx_GIVEREF(__pyx_t_3);
                    __Pyx_GIVEREF(__pyx_t_5);
                    __Pyx_XGIVEREF(__pyx_t_1);
                    __Pyx_ErrRestoreWithState(__pyx_t_3, __pyx_t_5, __pyx_t_1);
                    __pyx_t_3 = 0; __pyx_t_5 = 0; __pyx_t_1 = 0; 
                    __PYX_ERR(0, 551, __pyx_L22_except_error)
                  }
                  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
                  goto __pyx_L21_exception_handled;
                }
                __pyx_L22_except_error:;
                __Pyx_XGIVEREF(__pyx_t_10);
                __Pyx_XGIVEREF(__pyx_t_11);
                __Pyx_XGIVEREF(__pyx_t_12);
                __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
                goto __pyx_L9_error;
                __pyx_L24_try_return:;
                __Pyx_XGIVEREF(__pyx_t_10);
                __Pyx_XGIVEREF(__pyx_t_11);
                __Pyx_XGIVEREF(__pyx_t_12);
                __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
                goto __pyx_L17_return;
                __pyx_L21_exception_handled:;
                __Pyx_XGIVEREF(__pyx_t_10);
                __Pyx_XGIVEREF(__pyx_t_11);
                __Pyx_XGIVEREF(__pyx_t_12);
                __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
              }
            }
            /*finally:*/ {
              /*normal exit:*/{
                if (__pyx_t_9) {
                  __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__13, NULL);
                  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
                  if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 551, __pyx_L9_error)
                  __Pyx_GOTREF(__pyx_t_12);
                  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_12);
                  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                  __Pyx_XGOTREF(__pyx_r);
                  if (likely(__pyx_r)) {
                    __Pyx_XGIVEREF(__pyx_t_4);
                    __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
                    __Pyx_XGIVEREF(__pyx_t_6);
                    __pyx_cur_scope->__pyx_t_1 = __pyx_t_6;
                    __Pyx_XGIVEREF(__pyx_t_7);
                    __pyx_cur_scope->__pyx_t_2 = __pyx_t_7;
                    __Pyx_XGIVEREF(__pyx_t_8);
                    __pyx_cur_scope->__pyx_t_3 = __pyx_t_8;
                    __Pyx_XGIVEREF(__pyx_t_9);
                    __pyx_cur_scope->__pyx_t_4 = __pyx_t_9;
                    __Pyx_XGIVEREF(__pyx_t_12);
                    __pyx_cur_scope->__pyx_t_5 = __pyx_t_12;
                    __Pyx_XGIVEREF(__pyx_r);
                    __Pyx_RefNannyFinishContext();
                    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
                    /* return from generator, awaiting value */
                    __pyx_generator->resume_label = 6;
                    return __pyx_r;
                    __pyx_L42_resume_from_await:;
                    __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
                    __pyx_cur_scope->__pyx_t_0 = 0;
                    __Pyx_XGOTREF(__pyx_t_4);
                    __pyx_t_6 = __pyx_cur_scope->__pyx_t_1;
                    __pyx_cur_scope->__pyx_t_1 = 0;
                    __Pyx_XGOTREF(__pyx_t_6);
                    __pyx_t_7 = __pyx_cur_scope->__pyx_t_2;
                    __pyx_cur_scope->__pyx_t_2 = 0;
                    __Pyx_XGOTREF(__pyx_t_7);
                    __pyx_t_8 = __pyx_cur_scope->__pyx_t_3;
                    __pyx_cur_scope->__pyx_t_3 = 0;
                    __Pyx_XGOTREF(__pyx_t_8);
                    __pyx_t_9 = __pyx_cur_scope->__pyx_t_4;
                    __pyx_cur_scope->__pyx_t_4 = 0;
                    __Pyx_XGOTREF(__pyx_t_9);
                    __pyx_t_12 = __pyx_cur_scope->__pyx_t_5;
                    __pyx_cur_scope->__pyx_t_5 = 0;
                    __Pyx_XGOTREF(__pyx_t_12);
                    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 551, __pyx_L9_error)
                    __pyx_t_1 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_1);
                  } else {
                    __pyx_t_1 = NULL;
                    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_1) < 0) __PYX_ERR(0, 551, __pyx_L9_error)
                    __Pyx_GOTREF(__pyx_t_1);
                  }
                  __pyx_t_12 = __pyx_t_1;
                  __pyx_t_1 = 0;
                  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                }
                goto __pyx_L19;
              }
              __pyx_L17_return: {
                __Pyx_PyThreadState_assign
                __pyx_t_12 = 0; __pyx_t_11 = 0; __pyx_t_10 = 0; __pyx_t_15 = 0; __pyx_t_14 = 0; __pyx_t_13 = 0;
                if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_15, &__pyx_t_14, &__pyx_t_13);
                if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_12, &__pyx_t_11, &__pyx_t_10) < 0)) __Pyx_ErrFetch(&__pyx_t_12, &__pyx_t_11, &__pyx_t_10);
                __Pyx_XGOTREF(__pyx_t_12);
                __Pyx_XGOTREF(__pyx_t_11);
                __Pyx_XGOTREF(__pyx_t_10);
                __Pyx_XGOTREF(__pyx_t_15);
                __Pyx_XGOTREF(__pyx_t_14);
                __Pyx_XGOTREF(__pyx_t_13);
                __pyx_t_23 = __pyx_r;
                __pyx_r = 0;
                if (__pyx_t_9) {
                  __pyx_t_24 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__13, NULL);
                  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
                  if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 551, __pyx_L9_error)
                  __Pyx_GOTREF(__pyx_t_24);
                  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_24);
                  __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                  __Pyx_XGOTREF(__pyx_r);
                  if (likely(__pyx_r)) {
                    __Pyx_XGIVEREF(__pyx_t_4);
                    __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
                    __Pyx_XGIVEREF(__pyx_t_6);
                    __pyx_cur_scope->__pyx_t_1 = __pyx_t_6;
                    __Pyx_XGIVEREF(__pyx_t_7);
                    __pyx_cur_scope->__pyx_t_2 = __pyx_t_7;
                    __Pyx_XGIVEREF(__pyx_t_8);
                    __pyx_cur_scope->__pyx_t_3 = __pyx_t_8;
                    __Pyx_XGIVEREF(__pyx_t_9);
                    __pyx_cur_scope->__pyx_t_4 = __pyx_t_9;
                    __Pyx_XGIVEREF(__pyx_t_10);
                    __pyx_cur_scope->__pyx_t_5 = __pyx_t_10;
                    __Pyx_XGIVEREF(__pyx_t_11);
                    __pyx_cur_scope->__pyx_t_6 = __pyx_t_11;
                    __Pyx_XGIVEREF(__pyx_t_12);
                    __pyx_cur_scope->__pyx_t_7 = __pyx_t_12;
                    __Pyx_XGIVEREF(__pyx_t_13);
                    __pyx_cur_scope->__pyx_t_8 = __pyx_t_13;
                    __Pyx_XGIVEREF(__pyx_t_14);
                    __pyx_cur_scope->__pyx_t_9 = __pyx_t_14;
                    __Pyx_XGIVEREF(__pyx_t_15);
                    __pyx_cur_scope->__pyx_t_10 = __pyx_t_15;
                    __Pyx_XGIVEREF(__pyx_t_23);
                    __pyx_cur_scope->__pyx_t_11 = __pyx_t_23;
                    __Pyx_XGIVEREF(__pyx_t_24);
                    __pyx_cur_scope->__pyx_t_12 = __pyx_t_24;
                    __Pyx_XGIVEREF(__pyx_r);
                    __Pyx_RefNannyFinishContext();
                    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
                    /* return from generator, awaiting value */
                    __pyx_generator->resume_label = 7;
                    return __pyx_r;
                    __pyx_L43_resume_from_await:;
                    __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
                    __pyx_cur_scope->__pyx_t_0 = 0;
                    __Pyx_XGOTREF(__pyx_t_4);
                    __pyx_t_6 = __pyx_cur_scope->__pyx_t_1;
                    __pyx_cur_scope->__pyx_t_1 = 0;
                    __Pyx_XGOTREF(__pyx_t_6);
                    __pyx_t_7 = __pyx_cur_scope->__pyx_t_2;
                    __pyx_cur_scope->__pyx_t_2 = 0;
                    __Pyx_XGOTREF(__pyx_t_7);
                    __pyx_t_8 = __pyx_cur_scope->__pyx_t_3;
                    __pyx_cur_scope->__pyx_t_3 = 0;
                    __Pyx_XGOTREF(__pyx_t_8);
                    __pyx_t_9 = __pyx_cur_scope->__pyx_t_4;
                    __pyx_cur_scope->__pyx_t_4 = 0;
                    __Pyx_XGOTREF(__pyx_t_9);
                    __pyx_t_10 = __pyx_cur_scope->__pyx_t_5;
                    __pyx_cur_scope->__pyx_t_5 = 0;
                    __Pyx_XGOTREF(__pyx_t_10);
                    __pyx_t_11 = __pyx_cur_scope->__pyx_t_6;
                    __pyx_cur_scope->__pyx_t_6 = 0;
                    __Pyx_XGOTREF(__pyx_t_11);
                    __pyx_t_12 = __pyx_cur_scope->__pyx_t_7;
                    __pyx_cur_scope->__pyx_t_7 = 0;
                    __Pyx_XGOTREF(__pyx_t_12);
                    __pyx_t_13 = __pyx_cur_scope->__pyx_t_8;
                    __pyx_cur_scope->__pyx_t_8 = 0;
                    __Pyx_XGOTREF(__pyx_t_13);
                    __pyx_t_14 = __pyx_cur_scope->__pyx_t_9;
                    __pyx_cur_scope->__pyx_t_9 = 0;
                    __Pyx_XGOTREF(__pyx_t_14);
                    __pyx_t_15 = __pyx_cur_scope->__pyx_t_10;
                    __pyx_cur_scope->__pyx_t_10 = 0;
                    __Pyx_XGOTREF(__pyx_t_15);
                    __pyx_t_23 = __pyx_cur_scope->__pyx_t_11;
                    __pyx_cur_scope->__pyx_t_11 = 0;
                    __Pyx_XGOTREF(__pyx_t_23);
                    __pyx_t_24 = __pyx_cur_scope->__pyx_t_12;
                    __pyx_cur_scope->__pyx_t_12 = 0;
                    __Pyx_XGOTREF(__pyx_t_24);
                    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 551, __pyx_L9_error)
                    __pyx_t_1 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_1);
                  } else {
                    __pyx_t_1 = NULL;
                    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_1) < 0) __PYX_ERR(0, 551, __pyx_L9_error)
                    __Pyx_GOTREF(__pyx_t_1);
                  }
                  __pyx_t_24 = __pyx_t_1;
                  __pyx_t_1 = 0;
                  __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                }
                __pyx_r = __pyx_t_23;
                __pyx_t_23 = 0;
                if (PY_MAJOR_VERSION >= 3) {
                  __Pyx_XGIVEREF(__pyx_t_15);
                  __Pyx_XGIVEREF(__pyx_t_14);
                  __Pyx_XGIVEREF(__pyx_t_13);
                  __Pyx_ExceptionReset(__pyx_t_15, __pyx_t_14, __pyx_t_13);
                }
                __Pyx_XGIVEREF(__pyx_t_12);
                __Pyx_XGIVEREF(__pyx_t_11);
                __Pyx_XGIVEREF(__pyx_t_10);
                __Pyx_ErrRestore(__pyx_t_12, __pyx_t_11, __pyx_t_10);
                __pyx_t_12 = 0; __pyx_t_11 = 0; __pyx_t_10 = 0; __pyx_t_15 = 0; __pyx_t_14 = 0; __pyx_t_13 = 0;
                goto __pyx_L13_try_return;
              }
              __pyx_L19:;
            }
            goto __pyx_L44;
            __pyx_L15_error:;
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            goto __pyx_L9_error;
            __pyx_L44:;
          }

          /* "wings/market/radar_relay_market.pyx":550
 *                            data: Optional[Dict[str, any]] = None,
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:             # <<<<<<<<<<<<<<
 *             async with client.request(http_method,
 *                                       url=url,
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L14_try_end;
        __pyx_L9_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket._api_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_3) < 0) __PYX_ERR(0, 550, __pyx_L11_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_18 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 550, __pyx_L11_except_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_18, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 550, __pyx_L11_except_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_9);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_1);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
            __Pyx_XGIVEREF(__pyx_t_3);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
            __Pyx_XGIVEREF(__pyx_t_4);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
            __Pyx_XGIVEREF(__pyx_t_5);
            __pyx_cur_scope->__pyx_t_3 = __pyx_t_5;
            __Pyx_XGIVEREF(__pyx_t_6);
            __pyx_cur_scope->__pyx_t_4 = __pyx_t_6;
            __Pyx_XGIVEREF(__pyx_t_7);
            __pyx_cur_scope->__pyx_t_5 = __pyx_t_7;
            __Pyx_XGIVEREF(__pyx_t_8);
            __pyx_cur_scope->__pyx_t_6 = __pyx_t_8;
            __Pyx_XGIVEREF(__pyx_t_9);
            __pyx_cur_scope->__pyx_t_7 = __pyx_t_9;
            __Pyx_XGIVEREF(__pyx_t_10);
            __pyx_cur_scope->__pyx_t_8 = __pyx_t_10;
            __Pyx_XGIVEREF(__pyx_t_11);
            __pyx_cur_scope->__pyx_t_9 = __pyx_t_11;
            __Pyx_XGIVEREF(__pyx_t_12);
            __pyx_cur_scope->__pyx_t_10 = __pyx_t_12;
            __Pyx_XGIVEREF(__pyx_t_13);
            __pyx_cur_scope->__pyx_t_11 = __pyx_t_13;
            __Pyx_XGIVEREF(__pyx_t_14);
            __pyx_cur_scope->__pyx_t_12 = __pyx_t_14;
            __Pyx_XGIVEREF(__pyx_t_15);
            __pyx_cur_scope->__pyx_t_13 = __pyx_t_15;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_SwapException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 8;
            return __pyx_r;
            __pyx_L48_resume_from_await:;
            __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_1);
            __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_3);
            __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_4);
            __pyx_t_5 = __pyx_cur_scope->__pyx_t_3;
            __pyx_cur_scope->__pyx_t_3 = 0;
            __Pyx_XGOTREF(__pyx_t_5);
            __pyx_t_6 = __pyx_cur_scope->__pyx_t_4;
            __pyx_cur_scope->__pyx_t_4 = 0;
            __Pyx_XGOTREF(__pyx_t_6);
            __pyx_t_7 = __pyx_cur_scope->__pyx_t_5;
            __pyx_cur_scope->__pyx_t_5 = 0;
            __Pyx_XGOTREF(__pyx_t_7);
            __pyx_t_8 = __pyx_cur_scope->__pyx_t_6;
            __pyx_cur_scope->__pyx_t_6 = 0;
            __Pyx_XGOTREF(__pyx_t_8);
            __pyx_t_9 = __pyx_cur_scope->__pyx_t_7;
            __pyx_cur_scope->__pyx_t_7 = 0;
            __Pyx_XGOTREF(__pyx_t_9);
            __pyx_t_10 = __pyx_cur_scope->__pyx_t_8;
            __pyx_cur_scope->__pyx_t_8 = 0;
            __Pyx_XGOTREF(__pyx_t_10);
            __pyx_t_11 = __pyx_cur_scope->__pyx_t_9;
            __pyx_cur_scope->__pyx_t_9 = 0;
            __Pyx_XGOTREF(__pyx_t_11);
            __pyx_t_12 = __pyx_cur_scope->__pyx_t_10;
            __pyx_cur_scope->__pyx_t_10 = 0;
            __Pyx_XGOTREF(__pyx_t_12);
            __pyx_t_13 = __pyx_cur_scope->__pyx_t_11;
            __pyx_cur_scope->__pyx_t_11 = 0;
            __Pyx_XGOTREF(__pyx_t_13);
            __pyx_t_14 = __pyx_cur_scope->__pyx_t_12;
            __pyx_cur_scope->__pyx_t_12 = 0;
            __Pyx_XGOTREF(__pyx_t_14);
            __pyx_t_15 = __pyx_cur_scope->__pyx_t_13;
            __pyx_cur_scope->__pyx_t_13 = 0;
            __Pyx_XGOTREF(__pyx_t_15);
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 550, __pyx_L11_except_error)
            __pyx_t_18 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_18);
          } else {
            __pyx_t_18 = NULL;
            if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_18) < 0) __PYX_ERR(0, 550, __pyx_L11_except_error)
            __Pyx_GOTREF(__pyx_t_18);
          }
          __pyx_t_9 = __pyx_t_18;
          __pyx_t_18 = 0;
          __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (__pyx_t_22 < 0) __PYX_ERR(0, 550, __pyx_L11_except_error)
          __pyx_t_16 = ((!(__pyx_t_22 != 0)) != 0);
          if (__pyx_t_16) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_5);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_5, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_5 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(0, 550, __pyx_L11_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L10_exception_handled;
        }
        __pyx_L11_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L13_try_return:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L6_return;
        __pyx_L10_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L14_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__13, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_4);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
            __Pyx_XGIVEREF(__pyx_t_8);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_8;
            __Pyx_XGIVEREF(__pyx_t_10);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_10;
            __Pyx_XGIVEREF(__pyx_t_11);
            __pyx_cur_scope->__pyx_t_3 = __pyx_t_11;
            __Pyx_XGIVEREF(__pyx_t_12);
            __pyx_cur_scope->__pyx_t_4 = __pyx_t_12;
            __Pyx_XGIVEREF(__pyx_t_13);
            __pyx_cur_scope->__pyx_t_5 = __pyx_t_13;
            __Pyx_XGIVEREF(__pyx_t_14);
            __pyx_cur_scope->__pyx_t_6 = __pyx_t_14;
            __Pyx_XGIVEREF(__pyx_t_15);
            __pyx_cur_scope->__pyx_t_7 = __pyx_t_15;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 9;
            return __pyx_r;
            __pyx_L49_resume_from_await:;
            __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_4);
            __pyx_t_8 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_8);
            __pyx_t_10 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_10);
            __pyx_t_11 = __pyx_cur_scope->__pyx_t_3;
            __pyx_cur_scope->__pyx_t_3 = 0;
            __Pyx_XGOTREF(__pyx_t_11);
            __pyx_t_12 = __pyx_cur_scope->__pyx_t_4;
            __pyx_cur_scope->__pyx_t_4 = 0;
            __Pyx_XGOTREF(__pyx_t_12);
            __pyx_t_13 = __pyx_cur_scope->__pyx_t_5;
            __pyx_cur_scope->__pyx_t_5 = 0;
            __Pyx_XGOTREF(__pyx_t_13);
            __pyx_t_14 = __pyx_cur_scope->__pyx_t_6;
            __pyx_cur_scope->__pyx_t_6 = 0;
            __Pyx_XGOTREF(__pyx_t_14);
            __pyx_t_15 = __pyx_cur_scope->__pyx_t_7;
            __pyx_cur_scope->__pyx_t_7 = 0;
            __Pyx_XGOTREF(__pyx_t_15);
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 550, __pyx_L1_error)
            __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
          } else {
            __pyx_t_3 = NULL;
            if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 550, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
          }
          __pyx_t_8 = __pyx_t_3;
          __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L8;
      }
      __pyx_L6_return: {
        __Pyx_PyThreadState_assign
        __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_6 = 0; __pyx_t_9 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0;
        if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_9, &__pyx_t_23, &__pyx_t_24);
        if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0)) __Pyx_ErrFetch(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_23);
        __Pyx_XGOTREF(__pyx_t_24);
        __pyx_t_25 = __pyx_r;
        __pyx_r = 0;
        if (__pyx_t_4) {
          __pyx_t_26 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__13, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_26);
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_4);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
            __Pyx_XGIVEREF(__pyx_t_6);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_6;
            __Pyx_XGIVEREF(__pyx_t_7);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_7;
            __Pyx_XGIVEREF(__pyx_t_8);
            __pyx_cur_scope->__pyx_t_3 = __pyx_t_8;
            __Pyx_XGIVEREF(__pyx_t_9);
            __pyx_cur_scope->__pyx_t_4 = __pyx_t_9;
            __Pyx_XGIVEREF(__pyx_t_10);
            __pyx_cur_scope->__pyx_t_5 = __pyx_t_10;
            __Pyx_XGIVEREF(__pyx_t_11);
            __pyx_cur_scope->__pyx_t_6 = __pyx_t_11;
            __Pyx_XGIVEREF(__pyx_t_12);
            __pyx_cur_scope->__pyx_t_7 = __pyx_t_12;
            __Pyx_XGIVEREF(__pyx_t_13);
            __pyx_cur_scope->__pyx_t_8 = __pyx_t_13;
            __Pyx_XGIVEREF(__pyx_t_14);
            __pyx_cur_scope->__pyx_t_9 = __pyx_t_14;
            __Pyx_XGIVEREF(__pyx_t_15);
            __pyx_cur_scope->__pyx_t_10 = __pyx_t_15;
            __Pyx_XGIVEREF(__pyx_t_23);
            __pyx_cur_scope->__pyx_t_11 = __pyx_t_23;
            __Pyx_XGIVEREF(__pyx_t_24);
            __pyx_cur_scope->__pyx_t_12 = __pyx_t_24;
            __Pyx_XGIVEREF(__pyx_t_25);
            __pyx_cur_scope->__pyx_t_13 = __pyx_t_25;
            __Pyx_XGIVEREF(__pyx_t_26);
            __pyx_cur_scope->__pyx_t_14 = __pyx_t_26;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 10;
            return __pyx_r;
            __pyx_L50_resume_from_await:;
            __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_4);
            __pyx_t_6 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_6);
            __pyx_t_7 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_7);
            __pyx_t_8 = __pyx_cur_scope->__pyx_t_3;
            __pyx_cur_scope->__pyx_t_3 = 0;
            __Pyx_XGOTREF(__pyx_t_8);
            __pyx_t_9 = __pyx_cur_scope->__pyx_t_4;
            __pyx_cur_scope->__pyx_t_4 = 0;
            __Pyx_XGOTREF(__pyx_t_9);
            __pyx_t_10 = __pyx_cur_scope->__pyx_t_5;
            __pyx_cur_scope->__pyx_t_5 = 0;
            __Pyx_XGOTREF(__pyx_t_10);
            __pyx_t_11 = __pyx_cur_scope->__pyx_t_6;
            __pyx_cur_scope->__pyx_t_6 = 0;
            __Pyx_XGOTREF(__pyx_t_11);
            __pyx_t_12 = __pyx_cur_scope->__pyx_t_7;
            __pyx_cur_scope->__pyx_t_7 = 0;
            __Pyx_XGOTREF(__pyx_t_12);
            __pyx_t_13 = __pyx_cur_scope->__pyx_t_8;
            __pyx_cur_scope->__pyx_t_8 = 0;
            __Pyx_XGOTREF(__pyx_t_13);
            __pyx_t_14 = __pyx_cur_scope->__pyx_t_9;
            __pyx_cur_scope->__pyx_t_9 = 0;
            __Pyx_XGOTREF(__pyx_t_14);
            __pyx_t_15 = __pyx_cur_scope->__pyx_t_10;
            __pyx_cur_scope->__pyx_t_10 = 0;
            __Pyx_XGOTREF(__pyx_t_15);
            __pyx_t_23 = __pyx_cur_scope->__pyx_t_11;
            __pyx_cur_scope->__pyx_t_11 = 0;
            __Pyx_XGOTREF(__pyx_t_23);
            __pyx_t_24 = __pyx_cur_scope->__pyx_t_12;
            __pyx_cur_scope->__pyx_t_12 = 0;
            __Pyx_XGOTREF(__pyx_t_24);
            __pyx_t_25 = __pyx_cur_scope->__pyx_t_13;
            __pyx_cur_scope->__pyx_t_13 = 0;
            __Pyx_XGOTREF(__pyx_t_25);
            __pyx_t_26 = __pyx_cur_scope->__pyx_t_14;
            __pyx_cur_scope->__pyx_t_14 = 0;
            __Pyx_XGOTREF(__pyx_t_26);
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 550, __pyx_L1_error)
            __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
          } else {
            __pyx_t_3 = NULL;
            if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 550, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
          }
          __pyx_t_26 = __pyx_t_3;
          __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
        }
        __pyx_r = __pyx_t_25;
        __pyx_t_25 = 0;
        if (PY_MAJOR_VERSION >= 3) {
          __Pyx_XGIVEREF(__pyx_t_9);
          __Pyx_XGIVEREF(__pyx_t_23);
          __Pyx_XGIVEREF(__pyx_t_24);
          __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_23, __pyx_t_24);
        }
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_ErrRestore(__pyx_t_8, __pyx_t_7, __pyx_t_6);
        __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_6 = 0; __pyx_t_9 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0;
        goto __pyx_L0;
      }
      __pyx_L8:;
    }
    goto __pyx_L51;
    __pyx_L4_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L51:;
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":545
 *         return await fut
 * 
 *     async def _api_request(self,             # <<<<<<<<<<<<<<
 *                            http_method: str,
 *                            url: str,
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_AddTraceback("_api_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_35generator9(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":573
 *                                       f"HTTP status is {response.status} - {response_text}.")
 * 
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_34request_signed_market_orders(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_34request_signed_market_orders(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_symbol = 0;
  PyObject *__pyx_v_side = 0;
  PyObject *__pyx_v_amount = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_signed_market_orders (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_symbol,&__pyx_n_s_side,&__pyx_n_s_amount,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_side)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("request_signed_market_orders", 1, 3, 3, 1); __PYX_ERR(0, 573, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("request_signed_market_orders", 1, 3, 3, 2); __PYX_ERR(0, 573, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "request_signed_market_orders") < 0)) __PYX_ERR(0, 573, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_symbol = ((PyObject*)values[0]);
    __pyx_v_side = values[1];
    __pyx_v_amount = ((PyObject*)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("request_signed_market_orders", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 573, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.request_signed_market_orders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 573, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_amount), (&PyUnicode_Type), 1, "amount", 1))) __PYX_ERR(0, 573, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_33request_signed_market_orders(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_symbol, __pyx_v_side, __pyx_v_amount);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_33request_signed_market_orders(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_signed_market_orders", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 573, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_symbol = __pyx_v_symbol;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
  __pyx_cur_scope->__pyx_v_side = __pyx_v_side;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_side);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_side);
  __pyx_cur_scope->__pyx_v_amount = __pyx_v_amount;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_amount);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_amount);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_35generator9, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_request_signed_market_orders, __pyx_n_s_RadarRelayMarket_request_signed, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.request_signed_market_orders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_35generator9(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_signed_market_orders", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L5_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 573, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":574
 * 
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:
 *         if side is TradeType.BUY:             # <<<<<<<<<<<<<<
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_BUY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_cur_scope->__pyx_v_side == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "wings/market/radar_relay_market.pyx":575
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:
 *         if side is TradeType.BUY:
 *             order_type = "BUY"             # <<<<<<<<<<<<<<
 *         elif side is TradeType.SELL:
 *             order_type = "SELL"
 */
    __Pyx_INCREF(__pyx_n_u_BUY);
    __Pyx_GIVEREF(__pyx_n_u_BUY);
    __pyx_cur_scope->__pyx_v_order_type = __pyx_n_u_BUY;

    /* "wings/market/radar_relay_market.pyx":574
 * 
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:
 *         if side is TradeType.BUY:             # <<<<<<<<<<<<<<
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:
 */
    goto __pyx_L4;
  }

  /* "wings/market/radar_relay_market.pyx":576
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:             # <<<<<<<<<<<<<<
 *             order_type = "SELL"
 *         else:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SELL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_cur_scope->__pyx_v_side == __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (likely(__pyx_t_3)) {

    /* "wings/market/radar_relay_market.pyx":577
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:
 *             order_type = "SELL"             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError("Invalid side. Aborting.")
 */
    __Pyx_INCREF(__pyx_n_u_SELL);
    __Pyx_GIVEREF(__pyx_n_u_SELL);
    __pyx_cur_scope->__pyx_v_order_type = __pyx_n_u_SELL;

    /* "wings/market/radar_relay_market.pyx":576
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:             # <<<<<<<<<<<<<<
 *             order_type = "SELL"
 *         else:
 */
    goto __pyx_L4;
  }

  /* "wings/market/radar_relay_market.pyx":579
 *             order_type = "SELL"
 *         else:
 *             raise ValueError("Invalid side. Aborting.")             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/market"
 *         data = {
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 579, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "wings/market/radar_relay_market.pyx":580
 *         else:
 *             raise ValueError("Invalid side. Aborting.")
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/market"             # <<<<<<<<<<<<<<
 *         data = {
 *             "type": order_type,
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = 0;
  __pyx_t_6 = 127;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u_markets);
  __pyx_t_5 += 9;
  __Pyx_GIVEREF(__pyx_kp_u_markets);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_markets);
  __pyx_t_7 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_symbol); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u_order_market);
  __pyx_t_5 += 13;
  __Pyx_GIVEREF(__pyx_kp_u_order_market);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u_order_market);
  __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_7);
  __pyx_cur_scope->__pyx_v_url = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "wings/market/radar_relay_market.pyx":582
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/market"
 *         data = {
 *             "type": order_type,             # <<<<<<<<<<<<<<
 *             "quantity": amount
 *         }
 */
  __pyx_t_7 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_u_type, __pyx_cur_scope->__pyx_v_order_type) < 0) __PYX_ERR(0, 582, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":583
 *         data = {
 *             "type": order_type,
 *             "quantity": amount             # <<<<<<<<<<<<<<
 *         }
 *         response_data = await self._api_request(http_method="post", url=url, data=data)
 */
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_u_quantity, __pyx_cur_scope->__pyx_v_amount) < 0) __PYX_ERR(0, 582, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_7);
  __pyx_cur_scope->__pyx_v_data = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "wings/market/radar_relay_market.pyx":585
 *             "quantity": amount
 *         }
 *         response_data = await self._api_request(http_method="post", url=url, data=data)             # <<<<<<<<<<<<<<
 *         return response_data
 * 
 */
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_api_request); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_http_method, __pyx_n_u_post) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_data, __pyx_cur_scope->__pyx_v_data) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L5_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 585, __pyx_L1_error)
    __pyx_t_2 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_2 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_2) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_cur_scope->__pyx_v_response_data = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":586
 *         }
 *         response_data = await self._api_request(http_method="post", url=url, data=data)
 *         return response_data             # <<<<<<<<<<<<<<
 * 
 *     async def request_unsigned_limit_order(self, symbol: str, side: TradeType, amount: str, price: str, expires: int)\
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_cur_scope->__pyx_v_response_data);
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":573
 *                                       f"HTTP status is {response.status} - {response_text}.")
 * 
 *     async def request_signed_market_orders(self, symbol: str, side: TradeType, amount: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("request_signed_market_orders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_38generator10(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":588
 *         return response_data
 * 
 *     async def request_unsigned_limit_order(self, symbol: str, side: TradeType, amount: str, price: str, expires: int)\             # <<<<<<<<<<<<<<
 *             -> Dict[str, any]:
 *         if side is TradeType.BUY:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_37request_unsigned_limit_order(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_37request_unsigned_limit_order(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_symbol = 0;
  PyObject *__pyx_v_side = 0;
  PyObject *__pyx_v_amount = 0;
  PyObject *__pyx_v_price = 0;
  PyObject *__pyx_v_expires = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_unsigned_limit_order (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_symbol,&__pyx_n_s_side,&__pyx_n_s_amount,&__pyx_n_s_price,&__pyx_n_s_expires,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_side)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("request_unsigned_limit_order", 1, 5, 5, 1); __PYX_ERR(0, 588, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("request_unsigned_limit_order", 1, 5, 5, 2); __PYX_ERR(0, 588, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_price)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("request_unsigned_limit_order", 1, 5, 5, 3); __PYX_ERR(0, 588, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_expires)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("request_unsigned_limit_order", 1, 5, 5, 4); __PYX_ERR(0, 588, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "request_unsigned_limit_order") < 0)) __PYX_ERR(0, 588, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_symbol = ((PyObject*)values[0]);
    __pyx_v_side = values[1];
    __pyx_v_amount = ((PyObject*)values[2]);
    __pyx_v_price = ((PyObject*)values[3]);
    __pyx_v_expires = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("request_unsigned_limit_order", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 588, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.request_unsigned_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 588, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_amount), (&PyUnicode_Type), 1, "amount", 1))) __PYX_ERR(0, 588, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_price), (&PyUnicode_Type), 1, "price", 1))) __PYX_ERR(0, 588, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_36request_unsigned_limit_order(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_symbol, __pyx_v_side, __pyx_v_amount, __pyx_v_price, __pyx_v_expires);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_36request_unsigned_limit_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, PyObject *__pyx_v_expires) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_unsigned_limit_order", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 588, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_symbol = __pyx_v_symbol;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
  __pyx_cur_scope->__pyx_v_side = __pyx_v_side;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_side);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_side);
  __pyx_cur_scope->__pyx_v_amount = __pyx_v_amount;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_amount);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_amount);
  __pyx_cur_scope->__pyx_v_price = __pyx_v_price;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_price);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_price);
  __pyx_cur_scope->__pyx_v_expires = __pyx_v_expires;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_expires);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_expires);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_38generator10, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_request_unsigned_limit_order, __pyx_n_s_RadarRelayMarket_request_unsigne, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 588, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.request_unsigned_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_38generator10(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_unsigned_limit_order", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L5_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 588, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":590
 *     async def request_unsigned_limit_order(self, symbol: str, side: TradeType, amount: str, price: str, expires: int)\
 *             -> Dict[str, any]:
 *         if side is TradeType.BUY:             # <<<<<<<<<<<<<<
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_BUY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_cur_scope->__pyx_v_side == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "wings/market/radar_relay_market.pyx":591
 *             -> Dict[str, any]:
 *         if side is TradeType.BUY:
 *             order_type = "BUY"             # <<<<<<<<<<<<<<
 *         elif side is TradeType.SELL:
 *             order_type = "SELL"
 */
    __Pyx_INCREF(__pyx_n_u_BUY);
    __Pyx_GIVEREF(__pyx_n_u_BUY);
    __pyx_cur_scope->__pyx_v_order_type = __pyx_n_u_BUY;

    /* "wings/market/radar_relay_market.pyx":590
 *     async def request_unsigned_limit_order(self, symbol: str, side: TradeType, amount: str, price: str, expires: int)\
 *             -> Dict[str, any]:
 *         if side is TradeType.BUY:             # <<<<<<<<<<<<<<
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:
 */
    goto __pyx_L4;
  }

  /* "wings/market/radar_relay_market.pyx":592
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:             # <<<<<<<<<<<<<<
 *             order_type = "SELL"
 *         else:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SELL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_cur_scope->__pyx_v_side == __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (likely(__pyx_t_3)) {

    /* "wings/market/radar_relay_market.pyx":593
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:
 *             order_type = "SELL"             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError("Invalid side. Aborting.")
 */
    __Pyx_INCREF(__pyx_n_u_SELL);
    __Pyx_GIVEREF(__pyx_n_u_SELL);
    __pyx_cur_scope->__pyx_v_order_type = __pyx_n_u_SELL;

    /* "wings/market/radar_relay_market.pyx":592
 *         if side is TradeType.BUY:
 *             order_type = "BUY"
 *         elif side is TradeType.SELL:             # <<<<<<<<<<<<<<
 *             order_type = "SELL"
 *         else:
 */
    goto __pyx_L4;
  }

  /* "wings/market/radar_relay_market.pyx":595
 *             order_type = "SELL"
 *         else:
 *             raise ValueError("Invalid side. Aborting.")             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/limit"
 *         data = {
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 595, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 595, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "wings/market/radar_relay_market.pyx":596
 *         else:
 *             raise ValueError("Invalid side. Aborting.")
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/limit"             # <<<<<<<<<<<<<<
 *         data = {
 *             "type": order_type,
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = 0;
  __pyx_t_6 = 127;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u_markets);
  __pyx_t_5 += 9;
  __Pyx_GIVEREF(__pyx_kp_u_markets);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_markets);
  __pyx_t_7 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_symbol); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u_order_limit);
  __pyx_t_5 += 12;
  __Pyx_GIVEREF(__pyx_kp_u_order_limit);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u_order_limit);
  __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_7);
  __pyx_cur_scope->__pyx_v_url = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "wings/market/radar_relay_market.pyx":598
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/limit"
 *         data = {
 *             "type": order_type,             # <<<<<<<<<<<<<<
 *             "quantity": amount,
 *             "price": price,
 */
  __pyx_t_7 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 598, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_u_type, __pyx_cur_scope->__pyx_v_order_type) < 0) __PYX_ERR(0, 598, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":599
 *         data = {
 *             "type": order_type,
 *             "quantity": amount,             # <<<<<<<<<<<<<<
 *             "price": price,
 *             "expiration": expires
 */
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_u_quantity, __pyx_cur_scope->__pyx_v_amount) < 0) __PYX_ERR(0, 598, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":600
 *             "type": order_type,
 *             "quantity": amount,
 *             "price": price,             # <<<<<<<<<<<<<<
 *             "expiration": expires
 *         }
 */
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_u_price, __pyx_cur_scope->__pyx_v_price) < 0) __PYX_ERR(0, 598, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":601
 *             "quantity": amount,
 *             "price": price,
 *             "expiration": expires             # <<<<<<<<<<<<<<
 *         }
 *         return await self._api_request(http_method="post", url=url, data=data)
 */
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_u_expiration, __pyx_cur_scope->__pyx_v_expires) < 0) __PYX_ERR(0, 598, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_7);
  __pyx_cur_scope->__pyx_v_data = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "wings/market/radar_relay_market.pyx":603
 *             "expiration": expires
 *         }
 *         return await self._api_request(http_method="post", url=url, data=data)             # <<<<<<<<<<<<<<
 * 
 *     def get_order_hash_hex(self, unsigned_order: Dict[str, any]) -> str:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_api_request); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_http_method, __pyx_n_u_post) < 0) __PYX_ERR(0, 603, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 603, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_data, __pyx_cur_scope->__pyx_v_data) < 0) __PYX_ERR(0, 603, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L5_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 603, __pyx_L1_error)
    __pyx_t_2 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_2 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_2) < 0) __PYX_ERR(0, 603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":588
 *         return response_data
 * 
 *     async def request_unsigned_limit_order(self, symbol: str, side: TradeType, amount: str, price: str, expires: int)\             # <<<<<<<<<<<<<<
 *             -> Dict[str, any]:
 *         if side is TradeType.BUY:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("request_unsigned_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":605
 *         return await self._api_request(http_method="post", url=url, data=data)
 * 
 *     def get_order_hash_hex(self, unsigned_order: Dict[str, any]) -> str:             # <<<<<<<<<<<<<<
 *         order_struct = jsdict_order_to_struct(unsigned_order)
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_40get_order_hash_hex(PyObject *__pyx_v_self, PyObject *__pyx_v_unsigned_order); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_40get_order_hash_hex(PyObject *__pyx_v_self, PyObject *__pyx_v_unsigned_order) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_order_hash_hex (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_39get_order_hash_hex(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_unsigned_order));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_39get_order_hash_hex(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_unsigned_order) {
  PyObject *__pyx_v_order_struct = NULL;
  PyObject *__pyx_v_order_hash_hex = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("get_order_hash_hex", 0);

  /* "wings/market/radar_relay_market.pyx":606
 * 
 *     def get_order_hash_hex(self, unsigned_order: Dict[str, any]) -> str:
 *         order_struct = jsdict_order_to_struct(unsigned_order)             # <<<<<<<<<<<<<<
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,
 *                                                  exchange_address=ZERO_EX_MAINNET_EXCHANGE_ADDRESS.lower())
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_jsdict_order_to_struct); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_unsigned_order) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_unsigned_order);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_order_struct = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":607
 *     def get_order_hash_hex(self, unsigned_order: Dict[str, any]) -> str:
 *         order_struct = jsdict_order_to_struct(unsigned_order)
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,             # <<<<<<<<<<<<<<
 *                                                  exchange_address=ZERO_EX_MAINNET_EXCHANGE_ADDRESS.lower())
 *         return order_hash_hex
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_generate_order_hash_hex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_order, __pyx_v_order_struct) < 0) __PYX_ERR(0, 607, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":608
 *         order_struct = jsdict_order_to_struct(unsigned_order)
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,
 *                                                  exchange_address=ZERO_EX_MAINNET_EXCHANGE_ADDRESS.lower())             # <<<<<<<<<<<<<<
 *         return order_hash_hex
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_ZERO_EX_MAINNET_EXCHANGE_ADDRESS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_lower); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_exchange_address, __pyx_t_3) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":607
 *     def get_order_hash_hex(self, unsigned_order: Dict[str, any]) -> str:
 *         order_struct = jsdict_order_to_struct(unsigned_order)
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,             # <<<<<<<<<<<<<<
 *                                                  exchange_address=ZERO_EX_MAINNET_EXCHANGE_ADDRESS.lower())
 *         return order_hash_hex
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_order_hash_hex = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":609
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,
 *                                                  exchange_address=ZERO_EX_MAINNET_EXCHANGE_ADDRESS.lower())
 *         return order_hash_hex             # <<<<<<<<<<<<<<
 * 
 *     def get_zero_ex_signature(self, order_hash_hex: str) -> str:
 */
  __Pyx_XDECREF(__pyx_r);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_order_hash_hex))||((__pyx_v_order_hash_hex) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_order_hash_hex)->tp_name), 0))) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_order_hash_hex);
  __pyx_r = ((PyObject*)__pyx_v_order_hash_hex);
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":605
 *         return await self._api_request(http_method="post", url=url, data=data)
 * 
 *     def get_order_hash_hex(self, unsigned_order: Dict[str, any]) -> str:             # <<<<<<<<<<<<<<
 *         order_struct = jsdict_order_to_struct(unsigned_order)
 *         order_hash_hex = generate_order_hash_hex(order=order_struct,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_order_hash_hex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_order_struct);
  __Pyx_XDECREF(__pyx_v_order_hash_hex);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":611
 *         return order_hash_hex
 * 
 *     def get_zero_ex_signature(self, order_hash_hex: str) -> str:             # <<<<<<<<<<<<<<
 *         signature = self._wallet.current_backend.sign_hash(hexstr=order_hash_hex)
 *         fixed_signature = fix_signature(self._provider, self._wallet.address, order_hash_hex, signature)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_42get_zero_ex_signature(PyObject *__pyx_v_self, PyObject *__pyx_v_order_hash_hex); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_42get_zero_ex_signature(PyObject *__pyx_v_self, PyObject *__pyx_v_order_hash_hex) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_zero_ex_signature (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_order_hash_hex), (&PyUnicode_Type), 1, "order_hash_hex", 1))) __PYX_ERR(0, 611, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_41get_zero_ex_signature(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject*)__pyx_v_order_hash_hex));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_41get_zero_ex_signature(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_hash_hex) {
  PyObject *__pyx_v_signature = NULL;
  PyObject *__pyx_v_fixed_signature = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("get_zero_ex_signature", 0);

  /* "wings/market/radar_relay_market.pyx":612
 * 
 *     def get_zero_ex_signature(self, order_hash_hex: str) -> str:
 *         signature = self._wallet.current_backend.sign_hash(hexstr=order_hash_hex)             # <<<<<<<<<<<<<<
 *         fixed_signature = fix_signature(self._provider, self._wallet.address, order_hash_hex, signature)
 *         return fixed_signature
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_wallet, __pyx_n_s_current_backend); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sign_hash); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_hexstr, __pyx_v_order_hash_hex) < 0) __PYX_ERR(0, 612, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_signature = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":613
 *     def get_zero_ex_signature(self, order_hash_hex: str) -> str:
 *         signature = self._wallet.current_backend.sign_hash(hexstr=order_hash_hex)
 *         fixed_signature = fix_signature(self._provider, self._wallet.address, order_hash_hex, signature)             # <<<<<<<<<<<<<<
 *         return fixed_signature
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fix_signature); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_wallet, __pyx_n_s_address); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[5] = {__pyx_t_4, __pyx_v_self->_provider, __pyx_t_2, __pyx_v_order_hash_hex, __pyx_v_signature};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[5] = {__pyx_t_4, __pyx_v_self->_provider, __pyx_t_2, __pyx_v_order_hash_hex, __pyx_v_signature};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(4+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_v_self->_provider);
    __Pyx_GIVEREF(__pyx_v_self->_provider);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_self->_provider);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_t_2);
    __Pyx_INCREF(__pyx_v_order_hash_hex);
    __Pyx_GIVEREF(__pyx_v_order_hash_hex);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_order_hash_hex);
    __Pyx_INCREF(__pyx_v_signature);
    __Pyx_GIVEREF(__pyx_v_signature);
    PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_signature);
    __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_fixed_signature = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":614
 *         signature = self._wallet.current_backend.sign_hash(hexstr=order_hash_hex)
 *         fixed_signature = fix_signature(self._provider, self._wallet.address, order_hash_hex, signature)
 *         return fixed_signature             # <<<<<<<<<<<<<<
 * 
 *     async def submit_market_order(self,
 */
  __Pyx_XDECREF(__pyx_r);
  if (!(likely(PyUnicode_CheckExact(__pyx_v_fixed_signature))||((__pyx_v_fixed_signature) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_fixed_signature)->tp_name), 0))) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_fixed_signature);
  __pyx_r = ((PyObject*)__pyx_v_fixed_signature);
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":611
 *         return order_hash_hex
 * 
 *     def get_zero_ex_signature(self, order_hash_hex: str) -> str:             # <<<<<<<<<<<<<<
 *         signature = self._wallet.current_backend.sign_hash(hexstr=order_hash_hex)
 *         fixed_signature = fix_signature(self._provider, self._wallet.address, order_hash_hex, signature)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_zero_ex_signature", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_signature);
  __Pyx_XDECREF(__pyx_v_fixed_signature);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_45generator11(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":616
 *         return fixed_signature
 * 
 *     async def submit_market_order(self,             # <<<<<<<<<<<<<<
 *                                   symbol: str,
 *                                   side: TradeType,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_44submit_market_order(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_44submit_market_order(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_symbol = 0;
  PyObject *__pyx_v_side = 0;
  PyObject *__pyx_v_amount = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("submit_market_order (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_symbol,&__pyx_n_s_side,&__pyx_n_s_amount,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_side)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("submit_market_order", 1, 3, 3, 1); __PYX_ERR(0, 616, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("submit_market_order", 1, 3, 3, 2); __PYX_ERR(0, 616, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "submit_market_order") < 0)) __PYX_ERR(0, 616, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_symbol = ((PyObject*)values[0]);
    __pyx_v_side = values[1];
    __pyx_v_amount = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("submit_market_order", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 616, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.submit_market_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 617, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_43submit_market_order(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_symbol, __pyx_v_side, __pyx_v_amount);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_43submit_market_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("submit_market_order", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 616, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_symbol = __pyx_v_symbol;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
  __pyx_cur_scope->__pyx_v_side = __pyx_v_side;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_side);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_side);
  __pyx_cur_scope->__pyx_v_amount = __pyx_v_amount;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_amount);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_amount);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_45generator11, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_submit_market_order, __pyx_n_s_RadarRelayMarket_submit_market_o, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 616, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.submit_market_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_45generator11(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("submit_market_order", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L4_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 616, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":620
 *                                   side: TradeType,
 *                                   amount: Decimal) -> Tuple[float, str]:
 *         response = await self.request_signed_market_orders(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                            side=side,
 *                                                            amount=str(amount))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_request_signed_market_orders); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_symbol, __pyx_cur_scope->__pyx_v_symbol) < 0) __PYX_ERR(0, 620, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":621
 *                                   amount: Decimal) -> Tuple[float, str]:
 *         response = await self.request_signed_market_orders(symbol=symbol,
 *                                                            side=side,             # <<<<<<<<<<<<<<
 *                                                            amount=str(amount))
 *         signed_market_orders = response["orders"]
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_side, __pyx_cur_scope->__pyx_v_side) < 0) __PYX_ERR(0, 620, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":622
 *         response = await self.request_signed_market_orders(symbol=symbol,
 *                                                            side=side,
 *                                                            amount=str(amount))             # <<<<<<<<<<<<<<
 *         signed_market_orders = response["orders"]
 *         average_price = float(response["averagePrice"])
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_cur_scope->__pyx_v_amount); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_amount, __pyx_t_3) < 0) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":620
 *                                   side: TradeType,
 *                                   amount: Decimal) -> Tuple[float, str]:
 *         response = await self.request_signed_market_orders(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                            side=side,
 *                                                            amount=str(amount))
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L4_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 620, __pyx_L1_error)
    __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_3 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_response = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":623
 *                                                            side=side,
 *                                                            amount=str(amount))
 *         signed_market_orders = response["orders"]             # <<<<<<<<<<<<<<
 *         average_price = float(response["averagePrice"])
 *         base_asset_decimals = self.trading_rules.get(symbol).amount_decimals
 */
  __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_response, __pyx_n_u_orders); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_signed_market_orders = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":624
 *                                                            amount=str(amount))
 *         signed_market_orders = response["orders"]
 *         average_price = float(response["averagePrice"])             # <<<<<<<<<<<<<<
 *         base_asset_decimals = self.trading_rules.get(symbol).amount_decimals
 *         amt_with_decimals = int(Decimal(amount) * Decimal(f"1e{base_asset_decimals}"))
 */
  __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_response, __pyx_n_u_averagePrice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_AsDouble(__pyx_t_3); if (unlikely(__pyx_t_4 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_cur_scope->__pyx_v_average_price = __pyx_t_4;

  /* "wings/market/radar_relay_market.pyx":625
 *         signed_market_orders = response["orders"]
 *         average_price = float(response["averagePrice"])
 *         base_asset_decimals = self.trading_rules.get(symbol).amount_decimals             # <<<<<<<<<<<<<<
 *         amt_with_decimals = int(Decimal(amount) * Decimal(f"1e{base_asset_decimals}"))
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_trading_rules); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_cur_scope->__pyx_v_symbol) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_cur_scope->__pyx_v_symbol);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_amount_decimals); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_base_asset_decimals = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":626
 *         average_price = float(response["averagePrice"])
 *         base_asset_decimals = self.trading_rules.get(symbol).amount_decimals
 *         amt_with_decimals = int(Decimal(amount) * Decimal(f"1e{base_asset_decimals}"))             # <<<<<<<<<<<<<<
 * 
 *         signatures = []
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_cur_scope->__pyx_v_amount) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_cur_scope->__pyx_v_amount);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_base_asset_decimals, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyUnicode_Concat(__pyx_kp_u_1e, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_amt_with_decimals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":628
 *         amt_with_decimals = int(Decimal(amount) * Decimal(f"1e{base_asset_decimals}"))
 * 
 *         signatures = []             # <<<<<<<<<<<<<<
 *         orders = []
 *         for order in signed_market_orders:
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_signatures = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":629
 * 
 *         signatures = []
 *         orders = []             # <<<<<<<<<<<<<<
 *         for order in signed_market_orders:
 *             signatures.append(order["signature"])
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_orders = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":630
 *         signatures = []
 *         orders = []
 *         for order in signed_market_orders:             # <<<<<<<<<<<<<<
 *             signatures.append(order["signature"])
 *             del order["signature"]
 */
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_signed_market_orders)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_signed_market_orders)) {
    __pyx_t_3 = __pyx_cur_scope->__pyx_v_signed_market_orders; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_signed_market_orders); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 630, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 630, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 630, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 630, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_8(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 630, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_order);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_order, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;

    /* "wings/market/radar_relay_market.pyx":631
 *         orders = []
 *         for order in signed_market_orders:
 *             signatures.append(order["signature"])             # <<<<<<<<<<<<<<
 *             del order["signature"]
 *             orders.append(jsdict_order_to_struct(order))
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_order, __pyx_n_u_signature); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyList_Append(__pyx_cur_scope->__pyx_v_signatures, __pyx_t_2); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 631, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "wings/market/radar_relay_market.pyx":632
 *         for order in signed_market_orders:
 *             signatures.append(order["signature"])
 *             del order["signature"]             # <<<<<<<<<<<<<<
 *             orders.append(jsdict_order_to_struct(order))
 *         tx_hash = ""
 */
    if (unlikely(PyObject_DelItem(__pyx_cur_scope->__pyx_v_order, __pyx_n_u_signature) < 0)) __PYX_ERR(0, 632, __pyx_L1_error)

    /* "wings/market/radar_relay_market.pyx":633
 *             signatures.append(order["signature"])
 *             del order["signature"]
 *             orders.append(jsdict_order_to_struct(order))             # <<<<<<<<<<<<<<
 *         tx_hash = ""
 *         if side is TradeType.BUY:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_jsdict_order_to_struct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 633, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_cur_scope->__pyx_v_order) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_cur_scope->__pyx_v_order);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 633, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_9 = __Pyx_PyList_Append(__pyx_cur_scope->__pyx_v_orders, __pyx_t_2); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 633, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "wings/market/radar_relay_market.pyx":630
 *         signatures = []
 *         orders = []
 *         for order in signed_market_orders:             # <<<<<<<<<<<<<<
 *             signatures.append(order["signature"])
 *             del order["signature"]
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":634
 *             del order["signature"]
 *             orders.append(jsdict_order_to_struct(order))
 *         tx_hash = ""             # <<<<<<<<<<<<<<
 *         if side is TradeType.BUY:
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)
 */
  __Pyx_INCREF(__pyx_kp_u__15);
  __Pyx_GIVEREF(__pyx_kp_u__15);
  __pyx_cur_scope->__pyx_v_tx_hash = __pyx_kp_u__15;

  /* "wings/market/radar_relay_market.pyx":635
 *             orders.append(jsdict_order_to_struct(order))
 *         tx_hash = ""
 *         if side is TradeType.BUY:             # <<<<<<<<<<<<<<
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)
 *         elif side is TradeType.SELL:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_BUY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_10 = (__pyx_cur_scope->__pyx_v_side == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_11 = (__pyx_t_10 != 0);
  if (__pyx_t_11) {

    /* "wings/market/radar_relay_market.pyx":636
 *         tx_hash = ""
 *         if side is TradeType.BUY:
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)             # <<<<<<<<<<<<<<
 *         elif side is TradeType.SELL:
 *             tx_hash = self._exchange.market_sell_orders(orders, amt_with_decimals, signatures)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_exchange, __pyx_n_s_market_buy_orders); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 636, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_12 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_cur_scope->__pyx_v_orders, __pyx_cur_scope->__pyx_v_amt_with_decimals, __pyx_cur_scope->__pyx_v_signatures};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 636, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_cur_scope->__pyx_v_orders, __pyx_cur_scope->__pyx_v_amt_with_decimals, __pyx_cur_scope->__pyx_v_signatures};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 636, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 636, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_orders);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_orders);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_12, __pyx_cur_scope->__pyx_v_orders);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_amt_with_decimals);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_amt_with_decimals);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_12, __pyx_cur_scope->__pyx_v_amt_with_decimals);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_signatures);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_signatures);
      PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_12, __pyx_cur_scope->__pyx_v_signatures);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 636, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_tx_hash);
    __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_tx_hash, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;

    /* "wings/market/radar_relay_market.pyx":635
 *             orders.append(jsdict_order_to_struct(order))
 *         tx_hash = ""
 *         if side is TradeType.BUY:             # <<<<<<<<<<<<<<
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)
 *         elif side is TradeType.SELL:
 */
    goto __pyx_L7;
  }

  /* "wings/market/radar_relay_market.pyx":637
 *         if side is TradeType.BUY:
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)
 *         elif side is TradeType.SELL:             # <<<<<<<<<<<<<<
 *             tx_hash = self._exchange.market_sell_orders(orders, amt_with_decimals, signatures)
 *         else:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SELL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_11 = (__pyx_cur_scope->__pyx_v_side == __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_10 = (__pyx_t_11 != 0);
  if (likely(__pyx_t_10)) {

    /* "wings/market/radar_relay_market.pyx":638
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)
 *         elif side is TradeType.SELL:
 *             tx_hash = self._exchange.market_sell_orders(orders, amt_with_decimals, signatures)             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError("Invalid side. Aborting.")
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_exchange, __pyx_n_s_market_sell_orders); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 638, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_12 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_cur_scope->__pyx_v_orders, __pyx_cur_scope->__pyx_v_amt_with_decimals, __pyx_cur_scope->__pyx_v_signatures};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 638, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_cur_scope->__pyx_v_orders, __pyx_cur_scope->__pyx_v_amt_with_decimals, __pyx_cur_scope->__pyx_v_signatures};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 638, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_1 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 638, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_orders);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_orders);
      PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_12, __pyx_cur_scope->__pyx_v_orders);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_amt_with_decimals);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_amt_with_decimals);
      PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_12, __pyx_cur_scope->__pyx_v_amt_with_decimals);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_signatures);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_signatures);
      PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_12, __pyx_cur_scope->__pyx_v_signatures);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 638, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_tx_hash);
    __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_tx_hash, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":637
 *         if side is TradeType.BUY:
 *             tx_hash = self._exchange.market_buy_orders(orders, amt_with_decimals, signatures)
 *         elif side is TradeType.SELL:             # <<<<<<<<<<<<<<
 *             tx_hash = self._exchange.market_sell_orders(orders, amt_with_decimals, signatures)
 *         else:
 */
    goto __pyx_L7;
  }

  /* "wings/market/radar_relay_market.pyx":640
 *             tx_hash = self._exchange.market_sell_orders(orders, amt_with_decimals, signatures)
 *         else:
 *             raise ValueError("Invalid side. Aborting.")             # <<<<<<<<<<<<<<
 *         return average_price, tx_hash
 * 
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 640, __pyx_L1_error)
  }
  __pyx_L7:;

  /* "wings/market/radar_relay_market.pyx":641
 *         else:
 *             raise ValueError("Invalid side. Aborting.")
 *         return average_price, tx_hash             # <<<<<<<<<<<<<<
 * 
 *     async def submit_limit_order(self,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_average_price); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_tx_hash);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_tx_hash);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_cur_scope->__pyx_v_tx_hash);
  __pyx_t_3 = 0;
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":616
 *         return fixed_signature
 * 
 *     async def submit_market_order(self,             # <<<<<<<<<<<<<<
 *                                   symbol: str,
 *                                   side: TradeType,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("submit_market_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_48generator12(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":643
 *         return average_price, tx_hash
 * 
 *     async def submit_limit_order(self,             # <<<<<<<<<<<<<<
 *                                  symbol: str,
 *                                  side: TradeType,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_47submit_limit_order(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_47submit_limit_order(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_symbol = 0;
  PyObject *__pyx_v_side = 0;
  PyObject *__pyx_v_amount = 0;
  PyObject *__pyx_v_price = 0;
  PyObject *__pyx_v_expires = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("submit_limit_order (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_symbol,&__pyx_n_s_side,&__pyx_n_s_amount,&__pyx_n_s_price,&__pyx_n_s_expires,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_side)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("submit_limit_order", 1, 5, 5, 1); __PYX_ERR(0, 643, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("submit_limit_order", 1, 5, 5, 2); __PYX_ERR(0, 643, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_price)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("submit_limit_order", 1, 5, 5, 3); __PYX_ERR(0, 643, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_expires)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("submit_limit_order", 1, 5, 5, 4); __PYX_ERR(0, 643, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "submit_limit_order") < 0)) __PYX_ERR(0, 643, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_symbol = ((PyObject*)values[0]);
    __pyx_v_side = values[1];
    __pyx_v_amount = values[2];
    __pyx_v_price = ((PyObject*)values[3]);
    __pyx_v_expires = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("submit_limit_order", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 643, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.submit_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 644, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_price), (&PyUnicode_Type), 1, "price", 1))) __PYX_ERR(0, 647, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_46submit_limit_order(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_symbol, __pyx_v_side, __pyx_v_amount, __pyx_v_price, __pyx_v_expires);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_46submit_limit_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_side, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, PyObject *__pyx_v_expires) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("submit_limit_order", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 643, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_symbol = __pyx_v_symbol;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
  __pyx_cur_scope->__pyx_v_side = __pyx_v_side;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_side);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_side);
  __pyx_cur_scope->__pyx_v_amount = __pyx_v_amount;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_amount);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_amount);
  __pyx_cur_scope->__pyx_v_price = __pyx_v_price;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_price);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_price);
  __pyx_cur_scope->__pyx_v_expires = __pyx_v_expires;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_expires);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_expires);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_48generator12, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_submit_limit_order, __pyx_n_s_RadarRelayMarket_submit_limit_or, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 643, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.submit_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_48generator12(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int64_t __pyx_t_4;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("submit_limit_order", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L4_resume_from_await;
    case 2: goto __pyx_L5_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 643, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":649
 *                                  price: str,
 *                                  expires: int) -> Tuple[str, Order]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders"             # <<<<<<<<<<<<<<
 *         unsigned_limit_order = await self.request_unsigned_limit_order(symbol=symbol,
 *                                                                        side=side,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_t_2, __pyx_kp_u_orders_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_url = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":650
 *                                  expires: int) -> Tuple[str, Order]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders"
 *         unsigned_limit_order = await self.request_unsigned_limit_order(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                                        side=side,
 *                                                                        amount=str(amount),
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_request_unsigned_limit_order); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_symbol, __pyx_cur_scope->__pyx_v_symbol) < 0) __PYX_ERR(0, 650, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":651
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders"
 *         unsigned_limit_order = await self.request_unsigned_limit_order(symbol=symbol,
 *                                                                        side=side,             # <<<<<<<<<<<<<<
 *                                                                        amount=str(amount),
 *                                                                        price=price,
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_side, __pyx_cur_scope->__pyx_v_side) < 0) __PYX_ERR(0, 650, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":652
 *         unsigned_limit_order = await self.request_unsigned_limit_order(symbol=symbol,
 *                                                                        side=side,
 *                                                                        amount=str(amount),             # <<<<<<<<<<<<<<
 *                                                                        price=price,
 *                                                                        expires=expires)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_cur_scope->__pyx_v_amount); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_amount, __pyx_t_3) < 0) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":653
 *                                                                        side=side,
 *                                                                        amount=str(amount),
 *                                                                        price=price,             # <<<<<<<<<<<<<<
 *                                                                        expires=expires)
 *         unsigned_limit_order["makerAddress"] = self._wallet.address.lower()
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_price, __pyx_cur_scope->__pyx_v_price) < 0) __PYX_ERR(0, 650, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":654
 *                                                                        amount=str(amount),
 *                                                                        price=price,
 *                                                                        expires=expires)             # <<<<<<<<<<<<<<
 *         unsigned_limit_order["makerAddress"] = self._wallet.address.lower()
 *         order_hash_hex = self.get_order_hash_hex(unsigned_limit_order)
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_expires, __pyx_cur_scope->__pyx_v_expires) < 0) __PYX_ERR(0, 650, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":650
 *                                  expires: int) -> Tuple[str, Order]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders"
 *         unsigned_limit_order = await self.request_unsigned_limit_order(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                                        side=side,
 *                                                                        amount=str(amount),
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L4_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 650, __pyx_L1_error)
    __pyx_t_3 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_3 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_3) < 0) __PYX_ERR(0, 650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_unsigned_limit_order = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":655
 *                                                                        price=price,
 *                                                                        expires=expires)
 *         unsigned_limit_order["makerAddress"] = self._wallet.address.lower()             # <<<<<<<<<<<<<<
 *         order_hash_hex = self.get_order_hash_hex(unsigned_limit_order)
 *         signed_limit_order = copy.deepcopy(unsigned_limit_order)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_wallet, __pyx_n_s_address); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_lower); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyObject_SetItem(__pyx_cur_scope->__pyx_v_unsigned_limit_order, __pyx_n_u_makerAddress, __pyx_t_3) < 0)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":656
 *                                                                        expires=expires)
 *         unsigned_limit_order["makerAddress"] = self._wallet.address.lower()
 *         order_hash_hex = self.get_order_hash_hex(unsigned_limit_order)             # <<<<<<<<<<<<<<
 *         signed_limit_order = copy.deepcopy(unsigned_limit_order)
 *         signature = self.get_zero_ex_signature(order_hash_hex)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_get_order_hash_hex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_cur_scope->__pyx_v_unsigned_limit_order) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_cur_scope->__pyx_v_unsigned_limit_order);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_order_hash_hex = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":657
 *         unsigned_limit_order["makerAddress"] = self._wallet.address.lower()
 *         order_hash_hex = self.get_order_hash_hex(unsigned_limit_order)
 *         signed_limit_order = copy.deepcopy(unsigned_limit_order)             # <<<<<<<<<<<<<<
 *         signature = self.get_zero_ex_signature(order_hash_hex)
 *         signed_limit_order["signature"] = signature
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_copy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_deepcopy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_cur_scope->__pyx_v_unsigned_limit_order) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_cur_scope->__pyx_v_unsigned_limit_order);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_signed_limit_order = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":658
 *         order_hash_hex = self.get_order_hash_hex(unsigned_limit_order)
 *         signed_limit_order = copy.deepcopy(unsigned_limit_order)
 *         signature = self.get_zero_ex_signature(order_hash_hex)             # <<<<<<<<<<<<<<
 *         signed_limit_order["signature"] = signature
 *         await self._api_request(http_method="post", url=url, data=signed_limit_order)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_get_zero_ex_signature); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_cur_scope->__pyx_v_order_hash_hex) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_cur_scope->__pyx_v_order_hash_hex);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_signature = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":659
 *         signed_limit_order = copy.deepcopy(unsigned_limit_order)
 *         signature = self.get_zero_ex_signature(order_hash_hex)
 *         signed_limit_order["signature"] = signature             # <<<<<<<<<<<<<<
 *         await self._api_request(http_method="post", url=url, data=signed_limit_order)
 *         self._latest_salt = int(unsigned_limit_order["salt"])
 */
  if (unlikely(PyObject_SetItem(__pyx_cur_scope->__pyx_v_signed_limit_order, __pyx_n_u_signature, __pyx_cur_scope->__pyx_v_signature) < 0)) __PYX_ERR(0, 659, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":660
 *         signature = self.get_zero_ex_signature(order_hash_hex)
 *         signed_limit_order["signature"] = signature
 *         await self._api_request(http_method="post", url=url, data=signed_limit_order)             # <<<<<<<<<<<<<<
 *         self._latest_salt = int(unsigned_limit_order["salt"])
 *         order_hash = self._w3.toHex(hexstr=order_hash_hex)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_api_request); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_http_method, __pyx_n_u_post) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_data, __pyx_cur_scope->__pyx_v_signed_limit_order) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 2;
    return __pyx_r;
    __pyx_L5_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 660, __pyx_L1_error)
  } else {
    PyObject* exc_type = __Pyx_PyErr_Occurred();
    if (exc_type) {
      if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
      else __PYX_ERR(0, 660, __pyx_L1_error)
    }
  }

  /* "wings/market/radar_relay_market.pyx":661
 *         signed_limit_order["signature"] = signature
 *         await self._api_request(http_method="post", url=url, data=signed_limit_order)
 *         self._latest_salt = int(unsigned_limit_order["salt"])             # <<<<<<<<<<<<<<
 *         order_hash = self._w3.toHex(hexstr=order_hash_hex)
 *         del unsigned_limit_order["signature"]
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_unsigned_limit_order, __pyx_n_u_salt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int64_t(__pyx_t_2); if (unlikely((__pyx_t_4 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_cur_scope->__pyx_v_self->_latest_salt = __pyx_t_4;

  /* "wings/market/radar_relay_market.pyx":662
 *         await self._api_request(http_method="post", url=url, data=signed_limit_order)
 *         self._latest_salt = int(unsigned_limit_order["salt"])
 *         order_hash = self._w3.toHex(hexstr=order_hash_hex)             # <<<<<<<<<<<<<<
 *         del unsigned_limit_order["signature"]
 *         zero_ex_order = jsdict_order_to_struct(unsigned_limit_order)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_w3, __pyx_n_s_toHex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_hexstr, __pyx_cur_scope->__pyx_v_order_hash_hex) < 0) __PYX_ERR(0, 662, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_order_hash = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":663
 *         self._latest_salt = int(unsigned_limit_order["salt"])
 *         order_hash = self._w3.toHex(hexstr=order_hash_hex)
 *         del unsigned_limit_order["signature"]             # <<<<<<<<<<<<<<
 *         zero_ex_order = jsdict_order_to_struct(unsigned_limit_order)
 *         return order_hash, zero_ex_order
 */
  if (unlikely(PyObject_DelItem(__pyx_cur_scope->__pyx_v_unsigned_limit_order, __pyx_n_u_signature) < 0)) __PYX_ERR(0, 663, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":664
 *         order_hash = self._w3.toHex(hexstr=order_hash_hex)
 *         del unsigned_limit_order["signature"]
 *         zero_ex_order = jsdict_order_to_struct(unsigned_limit_order)             # <<<<<<<<<<<<<<
 *         return order_hash, zero_ex_order
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_jsdict_order_to_struct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_cur_scope->__pyx_v_unsigned_limit_order) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_cur_scope->__pyx_v_unsigned_limit_order);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_zero_ex_order = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":665
 *         del unsigned_limit_order["signature"]
 *         zero_ex_order = jsdict_order_to_struct(unsigned_limit_order)
 *         return order_hash, zero_ex_order             # <<<<<<<<<<<<<<
 * 
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_hash);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_hash);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_cur_scope->__pyx_v_order_hash);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_zero_ex_order);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_zero_ex_order);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_cur_scope->__pyx_v_zero_ex_order);
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":643
 *         return average_price, tx_hash
 * 
 *     async def submit_limit_order(self,             # <<<<<<<<<<<<<<
 *                                  symbol: str,
 *                                  side: TradeType,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("submit_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_51generator13(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":667
 *         return order_hash, zero_ex_order
 * 
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:             # <<<<<<<<<<<<<<
 *         incomplete_order_ids = [o.client_order_id
 *                                 for o in self._in_flight_limit_orders.values()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_50cancel_all(PyObject *__pyx_v_self, PyObject *__pyx_arg_timeout_seconds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_50cancel_all(PyObject *__pyx_v_self, PyObject *__pyx_arg_timeout_seconds) {
  double __pyx_v_timeout_seconds;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cancel_all (wrapper)", 0);
  assert(__pyx_arg_timeout_seconds); {
    __pyx_v_timeout_seconds = __pyx_PyFloat_AsDouble(__pyx_arg_timeout_seconds); if (unlikely((__pyx_v_timeout_seconds == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 667, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.cancel_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_49cancel_all(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((double)__pyx_v_timeout_seconds));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_49cancel_all(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_timeout_seconds) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cancel_all", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 667, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_timeout_seconds = __pyx_v_timeout_seconds;
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_51generator13, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_cancel_all, __pyx_n_s_RadarRelayMarket_cancel_all, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 667, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.cancel_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_51generator13(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  PyObject *__pyx_t_23 = NULL;
  PyObject *__pyx_t_24 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cancel_all", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L21_resume_from_await;
    case 2: goto __pyx_L34_resume_from_await;
    case 3: goto __pyx_L43_resume_from_await;
    case 4: goto __pyx_L44_resume_from_await;
    case 5: goto __pyx_L45_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 667, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":668
 * 
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:
 *         incomplete_order_ids = [o.client_order_id             # <<<<<<<<<<<<<<
 *                                 for o in self._in_flight_limit_orders.values()
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "wings/market/radar_relay_market.pyx":669
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:
 *         incomplete_order_ids = [o.client_order_id
 *                                 for o in self._in_flight_limit_orders.values()             # <<<<<<<<<<<<<<
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]
 *         if self._latest_salt == -1 or len(incomplete_order_ids) == 0:
 */
    __pyx_t_3 = 0;
    if (unlikely(__pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 669, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_dict_iterator(__pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders, 1, __pyx_n_s_values, (&__pyx_t_4), (&__pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_6;
    __pyx_t_6 = 0;
    while (1) {
      __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_4, &__pyx_t_3, NULL, &__pyx_t_6, NULL, __pyx_t_5);
      if (unlikely(__pyx_t_7 == 0)) break;
      if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 669, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;

      /* "wings/market/radar_relay_market.pyx":670
 *         incomplete_order_ids = [o.client_order_id
 *                                 for o in self._in_flight_limit_orders.values()
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]             # <<<<<<<<<<<<<<
 *         if self._latest_salt == -1 or len(incomplete_order_ids) == 0:
 *             return []
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o, __pyx_n_s_is_done); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (!__pyx_t_9) {
      } else {
        __pyx_t_8 = __pyx_t_9;
        goto __pyx_L7_bool_binop_done;
      }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o, __pyx_n_s_is_cancelled); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (!__pyx_t_9) {
      } else {
        __pyx_t_8 = __pyx_t_9;
        goto __pyx_L7_bool_binop_done;
      }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o, __pyx_n_s_is_expired); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (!__pyx_t_9) {
      } else {
        __pyx_t_8 = __pyx_t_9;
        goto __pyx_L7_bool_binop_done;
      }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o, __pyx_n_s_is_failure); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 670, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = __pyx_t_9;
      __pyx_L7_bool_binop_done:;
      __pyx_t_9 = ((!__pyx_t_8) != 0);
      if (__pyx_t_9) {

        /* "wings/market/radar_relay_market.pyx":668
 * 
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:
 *         incomplete_order_ids = [o.client_order_id             # <<<<<<<<<<<<<<
 *                                 for o in self._in_flight_limit_orders.values()
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_8genexpr1__pyx_v_o, __pyx_n_s_client_order_id); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 668, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 668, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "wings/market/radar_relay_market.pyx":670
 *         incomplete_order_ids = [o.client_order_id
 *                                 for o in self._in_flight_limit_orders.values()
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]             # <<<<<<<<<<<<<<
 *         if self._latest_salt == -1 or len(incomplete_order_ids) == 0:
 *             return []
 */
      }
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } /* exit inner scope */
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_incomplete_order_ids = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":671
 *                                 for o in self._in_flight_limit_orders.values()
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]
 *         if self._latest_salt == -1 or len(incomplete_order_ids) == 0:             # <<<<<<<<<<<<<<
 *             return []
 * 
 */
  __pyx_t_8 = ((__pyx_cur_scope->__pyx_v_self->_latest_salt == -1L) != 0);
  if (!__pyx_t_8) {
  } else {
    __pyx_t_9 = __pyx_t_8;
    goto __pyx_L12_bool_binop_done;
  }
  __pyx_t_4 = PyList_GET_SIZE(__pyx_cur_scope->__pyx_v_incomplete_order_ids); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 671, __pyx_L1_error)
  __pyx_t_8 = ((__pyx_t_4 == 0) != 0);
  __pyx_t_9 = __pyx_t_8;
  __pyx_L12_bool_binop_done:;
  if (__pyx_t_9) {

    /* "wings/market/radar_relay_market.pyx":672
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]
 *         if self._latest_salt == -1 or len(incomplete_order_ids) == 0:
 *             return []             # <<<<<<<<<<<<<<
 * 
 *         tx_hash = self._exchange.cancel_orders_up_to(self._latest_salt)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 672, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "wings/market/radar_relay_market.pyx":671
 *                                 for o in self._in_flight_limit_orders.values()
 *                                 if not (o.is_done or o.is_cancelled or o.is_expired or o.is_failure)]
 *         if self._latest_salt == -1 or len(incomplete_order_ids) == 0:             # <<<<<<<<<<<<<<
 *             return []
 * 
 */
  }

  /* "wings/market/radar_relay_market.pyx":674
 *             return []
 * 
 *         tx_hash = self._exchange.cancel_orders_up_to(self._latest_salt)             # <<<<<<<<<<<<<<
 *         receipt = None
 *         try:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_exchange, __pyx_n_s_cancel_orders_up_to); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 674, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyInt_From_int64_t(__pyx_cur_scope->__pyx_v_self->_latest_salt); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 674, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_10 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_10, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 674, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_tx_hash = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":675
 * 
 *         tx_hash = self._exchange.cancel_orders_up_to(self._latest_salt)
 *         receipt = None             # <<<<<<<<<<<<<<
 *         try:
 *             async with timeout(timeout_seconds):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __pyx_cur_scope->__pyx_v_receipt = Py_None;

  /* "wings/market/radar_relay_market.pyx":676
 *         tx_hash = self._exchange.cancel_orders_up_to(self._latest_salt)
 *         receipt = None
 *         try:             # <<<<<<<<<<<<<<
 *             async with timeout(timeout_seconds):
 *                 while receipt is None:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
    __Pyx_XGOTREF(__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_12);
    __Pyx_XGOTREF(__pyx_t_13);
    /*try:*/ {

      /* "wings/market/radar_relay_market.pyx":677
 *         receipt = None
 *         try:
 *             async with timeout(timeout_seconds):             # <<<<<<<<<<<<<<
 *                 while receipt is None:
 *                     receipt = self.get_tx_hash_receipt(tx_hash)
 */
      /*with:*/ {
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_timeout); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 677, __pyx_L14_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_timeout_seconds); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 677, __pyx_L14_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_10 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_10, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 677, __pyx_L14_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_14 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_aexit); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 677, __pyx_L14_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_6 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_aenter); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 677, __pyx_L20_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_10 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_2 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 677, __pyx_L20_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_2);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_t_1);
          __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
          __Pyx_XGIVEREF(__pyx_t_11);
          __pyx_cur_scope->__pyx_t_1 = __pyx_t_11;
          __Pyx_XGIVEREF(__pyx_t_12);
          __pyx_cur_scope->__pyx_t_2 = __pyx_t_12;
          __Pyx_XGIVEREF(__pyx_t_13);
          __pyx_cur_scope->__pyx_t_3 = __pyx_t_13;
          __Pyx_XGIVEREF(__pyx_t_14);
          __pyx_cur_scope->__pyx_t_4 = __pyx_t_14;
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 1;
          return __pyx_r;
          __pyx_L21_resume_from_await:;
          __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
          __pyx_cur_scope->__pyx_t_0 = 0;
          __Pyx_XGOTREF(__pyx_t_1);
          __pyx_t_11 = __pyx_cur_scope->__pyx_t_1;
          __pyx_cur_scope->__pyx_t_1 = 0;
          __Pyx_XGOTREF(__pyx_t_11);
          __pyx_t_12 = __pyx_cur_scope->__pyx_t_2;
          __pyx_cur_scope->__pyx_t_2 = 0;
          __Pyx_XGOTREF(__pyx_t_12);
          __pyx_t_13 = __pyx_cur_scope->__pyx_t_3;
          __pyx_cur_scope->__pyx_t_3 = 0;
          __Pyx_XGOTREF(__pyx_t_13);
          __pyx_t_14 = __pyx_cur_scope->__pyx_t_4;
          __pyx_cur_scope->__pyx_t_4 = 0;
          __Pyx_XGOTREF(__pyx_t_14);
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 677, __pyx_L20_error)
          __pyx_t_2 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_2);
        } else {
          __pyx_t_2 = NULL;
          if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_2) < 0) __PYX_ERR(0, 677, __pyx_L20_error)
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        /*try:*/ {
          {
            __Pyx_ExceptionSave(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17);
            __Pyx_XGOTREF(__pyx_t_15);
            __Pyx_XGOTREF(__pyx_t_16);
            __Pyx_XGOTREF(__pyx_t_17);
            /*try:*/ {

              /* "wings/market/radar_relay_market.pyx":678
 *         try:
 *             async with timeout(timeout_seconds):
 *                 while receipt is None:             # <<<<<<<<<<<<<<
 *                     receipt = self.get_tx_hash_receipt(tx_hash)
 *                     if receipt is None:
 */
              while (1) {
                __pyx_t_9 = (__pyx_cur_scope->__pyx_v_receipt == Py_None);
                __pyx_t_8 = (__pyx_t_9 != 0);
                if (!__pyx_t_8) break;

                /* "wings/market/radar_relay_market.pyx":679
 *             async with timeout(timeout_seconds):
 *                 while receipt is None:
 *                     receipt = self.get_tx_hash_receipt(tx_hash)             # <<<<<<<<<<<<<<
 *                     if receipt is None:
 *                         await asyncio.sleep(1.0)
 */
                __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_get_tx_hash_receipt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 679, __pyx_L25_error)
                __Pyx_GOTREF(__pyx_t_2);
                __pyx_t_6 = NULL;
                if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                  __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
                  if (likely(__pyx_t_6)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                    __Pyx_INCREF(__pyx_t_6);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_2, function);
                  }
                }
                __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_cur_scope->__pyx_v_tx_hash) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_cur_scope->__pyx_v_tx_hash);
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 679, __pyx_L25_error)
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_receipt);
                __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_receipt, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;

                /* "wings/market/radar_relay_market.pyx":680
 *                 while receipt is None:
 *                     receipt = self.get_tx_hash_receipt(tx_hash)
 *                     if receipt is None:             # <<<<<<<<<<<<<<
 *                         await asyncio.sleep(1.0)
 *                         continue
 */
                __pyx_t_8 = (__pyx_cur_scope->__pyx_v_receipt == Py_None);
                __pyx_t_9 = (__pyx_t_8 != 0);
                if (__pyx_t_9) {

                  /* "wings/market/radar_relay_market.pyx":681
 *                     receipt = self.get_tx_hash_receipt(tx_hash)
 *                     if receipt is None:
 *                         await asyncio.sleep(1.0)             # <<<<<<<<<<<<<<
 *                         continue
 *                     if receipt["status"] == 0:
 */
                  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 681, __pyx_L25_error)
                  __Pyx_GOTREF(__pyx_t_2);
                  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sleep); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 681, __pyx_L25_error)
                  __Pyx_GOTREF(__pyx_t_6);
                  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                  __pyx_t_2 = NULL;
                  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
                    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
                    if (likely(__pyx_t_2)) {
                      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                      __Pyx_INCREF(__pyx_t_2);
                      __Pyx_INCREF(function);
                      __Pyx_DECREF_SET(__pyx_t_6, function);
                    }
                  }
                  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_float_1_0) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_float_1_0);
                  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 681, __pyx_L25_error)
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_1);
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __Pyx_XGOTREF(__pyx_r);
                  if (likely(__pyx_r)) {
                    __Pyx_XGIVEREF(__pyx_t_11);
                    __pyx_cur_scope->__pyx_t_0 = __pyx_t_11;
                    __Pyx_XGIVEREF(__pyx_t_12);
                    __pyx_cur_scope->__pyx_t_1 = __pyx_t_12;
                    __Pyx_XGIVEREF(__pyx_t_13);
                    __pyx_cur_scope->__pyx_t_2 = __pyx_t_13;
                    __Pyx_XGIVEREF(__pyx_t_14);
                    __pyx_cur_scope->__pyx_t_3 = __pyx_t_14;
                    __Pyx_XGIVEREF(__pyx_t_15);
                    __pyx_cur_scope->__pyx_t_4 = __pyx_t_15;
                    __Pyx_XGIVEREF(__pyx_t_16);
                    __pyx_cur_scope->__pyx_t_5 = __pyx_t_16;
                    __Pyx_XGIVEREF(__pyx_t_17);
                    __pyx_cur_scope->__pyx_t_6 = __pyx_t_17;
                    __Pyx_XGIVEREF(__pyx_r);
                    __Pyx_RefNannyFinishContext();
                    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
                    /* return from generator, awaiting value */
                    __pyx_generator->resume_label = 2;
                    return __pyx_r;
                    __pyx_L34_resume_from_await:;
                    __pyx_t_11 = __pyx_cur_scope->__pyx_t_0;
                    __pyx_cur_scope->__pyx_t_0 = 0;
                    __Pyx_XGOTREF(__pyx_t_11);
                    __pyx_t_12 = __pyx_cur_scope->__pyx_t_1;
                    __pyx_cur_scope->__pyx_t_1 = 0;
                    __Pyx_XGOTREF(__pyx_t_12);
                    __pyx_t_13 = __pyx_cur_scope->__pyx_t_2;
                    __pyx_cur_scope->__pyx_t_2 = 0;
                    __Pyx_XGOTREF(__pyx_t_13);
                    __pyx_t_14 = __pyx_cur_scope->__pyx_t_3;
                    __pyx_cur_scope->__pyx_t_3 = 0;
                    __Pyx_XGOTREF(__pyx_t_14);
                    __pyx_t_15 = __pyx_cur_scope->__pyx_t_4;
                    __pyx_cur_scope->__pyx_t_4 = 0;
                    __Pyx_XGOTREF(__pyx_t_15);
                    __pyx_t_16 = __pyx_cur_scope->__pyx_t_5;
                    __pyx_cur_scope->__pyx_t_5 = 0;
                    __Pyx_XGOTREF(__pyx_t_16);
                    __pyx_t_17 = __pyx_cur_scope->__pyx_t_6;
                    __pyx_cur_scope->__pyx_t_6 = 0;
                    __Pyx_XGOTREF(__pyx_t_17);
                    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 681, __pyx_L25_error)
                  } else {
                    PyObject* exc_type = __Pyx_PyErr_Occurred();
                    if (exc_type) {
                      if (likely(exc_type == PyExc_StopIteration || (exc_type != PyExc_GeneratorExit && __Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))) PyErr_Clear();
                      else __PYX_ERR(0, 681, __pyx_L25_error)
                    }
                  }

                  /* "wings/market/radar_relay_market.pyx":682
 *                     if receipt is None:
 *                         await asyncio.sleep(1.0)
 *                         continue             # <<<<<<<<<<<<<<
 *                     if receipt["status"] == 0:
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 */
                  goto __pyx_L31_continue;

                  /* "wings/market/radar_relay_market.pyx":680
 *                 while receipt is None:
 *                     receipt = self.get_tx_hash_receipt(tx_hash)
 *                     if receipt is None:             # <<<<<<<<<<<<<<
 *                         await asyncio.sleep(1.0)
 *                         continue
 */
                }

                /* "wings/market/radar_relay_market.pyx":683
 *                         await asyncio.sleep(1.0)
 *                         continue
 *                     if receipt["status"] == 0:             # <<<<<<<<<<<<<<
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 *                     elif receipt["status"] == 1:
 */
                __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_receipt, __pyx_n_u_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 683, __pyx_L25_error)
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 683, __pyx_L25_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 683, __pyx_L25_error)
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                if (__pyx_t_9) {

                  /* "wings/market/radar_relay_market.pyx":684
 *                         continue
 *                     if receipt["status"] == 0:
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]             # <<<<<<<<<<<<<<
 *                     elif receipt["status"] == 1:
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]
 */
                  __Pyx_XDECREF(__pyx_r);
                  { /* enter inner scope */
                    __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 684, __pyx_L25_error)
                    __Pyx_GOTREF(__pyx_t_6);
                    __pyx_t_1 = __pyx_cur_scope->__pyx_v_incomplete_order_ids; __Pyx_INCREF(__pyx_t_1); __pyx_t_4 = 0;
                    for (;;) {
                      if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_1)) break;
                      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 684, __pyx_L25_error)
                      #else
                      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 684, __pyx_L25_error)
                      __Pyx_GOTREF(__pyx_t_2);
                      #endif
                      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid);
                      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_CancellationResult); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 684, __pyx_L25_error)
                      __Pyx_GOTREF(__pyx_t_10);
                      __pyx_t_18 = NULL;
                      __pyx_t_5 = 0;
                      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
                        __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_10);
                        if (likely(__pyx_t_18)) {
                          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
                          __Pyx_INCREF(__pyx_t_18);
                          __Pyx_INCREF(function);
                          __Pyx_DECREF_SET(__pyx_t_10, function);
                          __pyx_t_5 = 1;
                        }
                      }
                      #if CYTHON_FAST_PYCALL
                      if (PyFunction_Check(__pyx_t_10)) {
                        PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid, Py_False};
                        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 684, __pyx_L25_error)
                        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __Pyx_GOTREF(__pyx_t_2);
                      } else
                      #endif
                      #if CYTHON_FAST_PYCCALL
                      if (__Pyx_PyFastCFunction_Check(__pyx_t_10)) {
                        PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid, Py_False};
                        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 684, __pyx_L25_error)
                        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
                        __Pyx_GOTREF(__pyx_t_2);
                      } else
                      #endif
                      {
                        __pyx_t_19 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 684, __pyx_L25_error)
                        __Pyx_GOTREF(__pyx_t_19);
                        if (__pyx_t_18) {
                          __Pyx_GIVEREF(__pyx_t_18); PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_18); __pyx_t_18 = NULL;
                        }
                        __Pyx_INCREF(__pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid);
                        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid);
                        PyTuple_SET_ITEM(__pyx_t_19, 0+__pyx_t_5, __pyx_cur_scope->__pyx_8genexpr2__pyx_v_oid);
                        __Pyx_INCREF(Py_False);
                        __Pyx_GIVEREF(Py_False);
                        PyTuple_SET_ITEM(__pyx_t_19, 1+__pyx_t_5, Py_False);
                        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_19, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 684, __pyx_L25_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
                      }
                      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
                      if (unlikely(__Pyx_ListComp_Append(__pyx_t_6, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 684, __pyx_L25_error)
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                    }
                    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  } /* exit inner scope */
                  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_6);
                  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                  __pyx_t_6 = 0;
                  goto __pyx_L29_try_return;

                  /* "wings/market/radar_relay_market.pyx":683
 *                         await asyncio.sleep(1.0)
 *                         continue
 *                     if receipt["status"] == 0:             # <<<<<<<<<<<<<<
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 *                     elif receipt["status"] == 1:
 */
                }

                /* "wings/market/radar_relay_market.pyx":685
 *                     if receipt["status"] == 0:
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 *                     elif receipt["status"] == 1:             # <<<<<<<<<<<<<<
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]
 *         except Exception:
 */
                __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_receipt, __pyx_n_u_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 685, __pyx_L25_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 685, __pyx_L25_error)
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 685, __pyx_L25_error)
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                if (__pyx_t_9) {

                  /* "wings/market/radar_relay_market.pyx":686
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 *                     elif receipt["status"] == 1:
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]             # <<<<<<<<<<<<<<
 *         except Exception:
 *             self.logger().error(f"Unexpected error cancelling orders.", exc_info=True)
 */
                  __Pyx_XDECREF(__pyx_r);
                  { /* enter inner scope */
                    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 686, __pyx_L25_error)
                    __Pyx_GOTREF(__pyx_t_1);
                    __pyx_t_6 = __pyx_cur_scope->__pyx_v_incomplete_order_ids; __Pyx_INCREF(__pyx_t_6); __pyx_t_4 = 0;
                    for (;;) {
                      if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_6)) break;
                      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 686, __pyx_L25_error)
                      #else
                      __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 686, __pyx_L25_error)
                      __Pyx_GOTREF(__pyx_t_2);
                      #endif
                      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid);
                      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_CancellationResult); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 686, __pyx_L25_error)
                      __Pyx_GOTREF(__pyx_t_10);
                      __pyx_t_19 = NULL;
                      __pyx_t_5 = 0;
                      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
                        __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_10);
                        if (likely(__pyx_t_19)) {
                          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
                          __Pyx_INCREF(__pyx_t_19);
                          __Pyx_INCREF(function);
                          __Pyx_DECREF_SET(__pyx_t_10, function);
                          __pyx_t_5 = 1;
                        }
                      }
                      #if CYTHON_FAST_PYCALL
                      if (PyFunction_Check(__pyx_t_10)) {
                        PyObject *__pyx_temp[3] = {__pyx_t_19, __pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid, Py_True};
                        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 686, __pyx_L25_error)
                        __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
                        __Pyx_GOTREF(__pyx_t_2);
                      } else
                      #endif
                      #if CYTHON_FAST_PYCCALL
                      if (__Pyx_PyFastCFunction_Check(__pyx_t_10)) {
                        PyObject *__pyx_temp[3] = {__pyx_t_19, __pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid, Py_True};
                        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 686, __pyx_L25_error)
                        __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
                        __Pyx_GOTREF(__pyx_t_2);
                      } else
                      #endif
                      {
                        __pyx_t_18 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 686, __pyx_L25_error)
                        __Pyx_GOTREF(__pyx_t_18);
                        if (__pyx_t_19) {
                          __Pyx_GIVEREF(__pyx_t_19); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_19); __pyx_t_19 = NULL;
                        }
                        __Pyx_INCREF(__pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid);
                        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid);
                        PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_5, __pyx_cur_scope->__pyx_8genexpr3__pyx_v_oid);
                        __Pyx_INCREF(Py_True);
                        __Pyx_GIVEREF(Py_True);
                        PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_5, Py_True);
                        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_18, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 686, __pyx_L25_error)
                        __Pyx_GOTREF(__pyx_t_2);
                        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
                      }
                      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
                      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 686, __pyx_L25_error)
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                    }
                    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                  } /* exit inner scope */
                  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_1);
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __pyx_t_1 = 0;
                  goto __pyx_L29_try_return;

                  /* "wings/market/radar_relay_market.pyx":685
 *                     if receipt["status"] == 0:
 *                         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 *                     elif receipt["status"] == 1:             # <<<<<<<<<<<<<<
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]
 *         except Exception:
 */
                }
                __pyx_L31_continue:;
              }

              /* "wings/market/radar_relay_market.pyx":677
 *         receipt = None
 *         try:
 *             async with timeout(timeout_seconds):             # <<<<<<<<<<<<<<
 *                 while receipt is None:
 *                     receipt = self.get_tx_hash_receipt(tx_hash)
 */
            }
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
            goto __pyx_L30_try_end;
            __pyx_L25_error:;
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
            __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            /*except:*/ {
              __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.cancel_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_6, &__pyx_t_2) < 0) __PYX_ERR(0, 677, __pyx_L27_except_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_10 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 677, __pyx_L27_except_error)
              __Pyx_GOTREF(__pyx_t_10);
              __pyx_t_20 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_10, NULL);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
              if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 677, __pyx_L27_except_error)
              __Pyx_GOTREF(__pyx_t_20);
              __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_20);
              __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
              __Pyx_XGOTREF(__pyx_r);
              if (likely(__pyx_r)) {
                __Pyx_XGIVEREF(__pyx_t_1);
                __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
                __Pyx_XGIVEREF(__pyx_t_2);
                __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
                __Pyx_XGIVEREF(__pyx_t_6);
                __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
                __Pyx_XGIVEREF(__pyx_t_11);
                __pyx_cur_scope->__pyx_t_3 = __pyx_t_11;
                __Pyx_XGIVEREF(__pyx_t_12);
                __pyx_cur_scope->__pyx_t_4 = __pyx_t_12;
                __Pyx_XGIVEREF(__pyx_t_13);
                __pyx_cur_scope->__pyx_t_5 = __pyx_t_13;
                __Pyx_XGIVEREF(__pyx_t_14);
                __pyx_cur_scope->__pyx_t_6 = __pyx_t_14;
                __Pyx_XGIVEREF(__pyx_t_15);
                __pyx_cur_scope->__pyx_t_7 = __pyx_t_15;
                __Pyx_XGIVEREF(__pyx_t_16);
                __pyx_cur_scope->__pyx_t_8 = __pyx_t_16;
                __Pyx_XGIVEREF(__pyx_t_17);
                __pyx_cur_scope->__pyx_t_9 = __pyx_t_17;
                __Pyx_XGIVEREF(__pyx_t_20);
                __pyx_cur_scope->__pyx_t_10 = __pyx_t_20;
                __Pyx_XGIVEREF(__pyx_r);
                __Pyx_RefNannyFinishContext();
                __Pyx_Coroutine_SwapException(__pyx_generator);
                /* return from generator, awaiting value */
                __pyx_generator->resume_label = 3;
                return __pyx_r;
                __pyx_L43_resume_from_await:;
                __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
                __pyx_cur_scope->__pyx_t_0 = 0;
                __Pyx_XGOTREF(__pyx_t_1);
                __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
                __pyx_cur_scope->__pyx_t_1 = 0;
                __Pyx_XGOTREF(__pyx_t_2);
                __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
                __pyx_cur_scope->__pyx_t_2 = 0;
                __Pyx_XGOTREF(__pyx_t_6);
                __pyx_t_11 = __pyx_cur_scope->__pyx_t_3;
                __pyx_cur_scope->__pyx_t_3 = 0;
                __Pyx_XGOTREF(__pyx_t_11);
                __pyx_t_12 = __pyx_cur_scope->__pyx_t_4;
                __pyx_cur_scope->__pyx_t_4 = 0;
                __Pyx_XGOTREF(__pyx_t_12);
                __pyx_t_13 = __pyx_cur_scope->__pyx_t_5;
                __pyx_cur_scope->__pyx_t_5 = 0;
                __Pyx_XGOTREF(__pyx_t_13);
                __pyx_t_14 = __pyx_cur_scope->__pyx_t_6;
                __pyx_cur_scope->__pyx_t_6 = 0;
                __Pyx_XGOTREF(__pyx_t_14);
                __pyx_t_15 = __pyx_cur_scope->__pyx_t_7;
                __pyx_cur_scope->__pyx_t_7 = 0;
                __Pyx_XGOTREF(__pyx_t_15);
                __pyx_t_16 = __pyx_cur_scope->__pyx_t_8;
                __pyx_cur_scope->__pyx_t_8 = 0;
                __Pyx_XGOTREF(__pyx_t_16);
                __pyx_t_17 = __pyx_cur_scope->__pyx_t_9;
                __pyx_cur_scope->__pyx_t_9 = 0;
                __Pyx_XGOTREF(__pyx_t_17);
                __pyx_t_20 = __pyx_cur_scope->__pyx_t_10;
                __pyx_cur_scope->__pyx_t_10 = 0;
                __Pyx_XGOTREF(__pyx_t_20);
                if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 677, __pyx_L27_except_error)
                __pyx_t_10 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_10);
              } else {
                __pyx_t_10 = NULL;
                if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_10) < 0) __PYX_ERR(0, 677, __pyx_L27_except_error)
                __Pyx_GOTREF(__pyx_t_10);
              }
              __pyx_t_20 = __pyx_t_10;
              __pyx_t_10 = 0;
              __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_20);
              __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
              if (__pyx_t_9 < 0) __PYX_ERR(0, 677, __pyx_L27_except_error)
              __pyx_t_8 = ((!(__pyx_t_9 != 0)) != 0);
              if (__pyx_t_8) {
                __Pyx_GIVEREF(__pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_6);
                __Pyx_XGIVEREF(__pyx_t_2);
                __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_6, __pyx_t_2);
                __pyx_t_1 = 0; __pyx_t_6 = 0; __pyx_t_2 = 0; 
                __PYX_ERR(0, 677, __pyx_L27_except_error)
              }
              __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L26_exception_handled;
            }
            __pyx_L27_except_error:;
            __Pyx_XGIVEREF(__pyx_t_15);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_ExceptionReset(__pyx_t_15, __pyx_t_16, __pyx_t_17);
            goto __pyx_L14_error;
            __pyx_L29_try_return:;
            __Pyx_XGIVEREF(__pyx_t_15);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_ExceptionReset(__pyx_t_15, __pyx_t_16, __pyx_t_17);
            goto __pyx_L22_return;
            __pyx_L26_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_15);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_ExceptionReset(__pyx_t_15, __pyx_t_16, __pyx_t_17);
            __pyx_L30_try_end:;
          }
        }
        /*finally:*/ {
          /*normal exit:*/{
            if (__pyx_t_14) {
              __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_tuple__13, NULL);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 677, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_17);
              __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_17);
              __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
              __Pyx_XGOTREF(__pyx_r);
              if (likely(__pyx_r)) {
                __Pyx_XGIVEREF(__pyx_t_11);
                __pyx_cur_scope->__pyx_t_0 = __pyx_t_11;
                __Pyx_XGIVEREF(__pyx_t_12);
                __pyx_cur_scope->__pyx_t_1 = __pyx_t_12;
                __Pyx_XGIVEREF(__pyx_t_13);
                __pyx_cur_scope->__pyx_t_2 = __pyx_t_13;
                __Pyx_XGIVEREF(__pyx_t_14);
                __pyx_cur_scope->__pyx_t_3 = __pyx_t_14;
                __Pyx_XGIVEREF(__pyx_t_17);
                __pyx_cur_scope->__pyx_t_4 = __pyx_t_17;
                __Pyx_XGIVEREF(__pyx_r);
                __Pyx_RefNannyFinishContext();
                __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
                /* return from generator, awaiting value */
                __pyx_generator->resume_label = 4;
                return __pyx_r;
                __pyx_L44_resume_from_await:;
                __pyx_t_11 = __pyx_cur_scope->__pyx_t_0;
                __pyx_cur_scope->__pyx_t_0 = 0;
                __Pyx_XGOTREF(__pyx_t_11);
                __pyx_t_12 = __pyx_cur_scope->__pyx_t_1;
                __pyx_cur_scope->__pyx_t_1 = 0;
                __Pyx_XGOTREF(__pyx_t_12);
                __pyx_t_13 = __pyx_cur_scope->__pyx_t_2;
                __pyx_cur_scope->__pyx_t_2 = 0;
                __Pyx_XGOTREF(__pyx_t_13);
                __pyx_t_14 = __pyx_cur_scope->__pyx_t_3;
                __pyx_cur_scope->__pyx_t_3 = 0;
                __Pyx_XGOTREF(__pyx_t_14);
                __pyx_t_17 = __pyx_cur_scope->__pyx_t_4;
                __pyx_cur_scope->__pyx_t_4 = 0;
                __Pyx_XGOTREF(__pyx_t_17);
                if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 677, __pyx_L14_error)
                __pyx_t_2 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_2);
              } else {
                __pyx_t_2 = NULL;
                if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_2) < 0) __PYX_ERR(0, 677, __pyx_L14_error)
                __Pyx_GOTREF(__pyx_t_2);
              }
              __pyx_t_17 = __pyx_t_2;
              __pyx_t_2 = 0;
              __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            }
            goto __pyx_L24;
          }
          __pyx_L22_return: {
            __Pyx_PyThreadState_assign
            __pyx_t_17 = 0; __pyx_t_16 = 0; __pyx_t_15 = 0; __pyx_t_20 = 0; __pyx_t_21 = 0; __pyx_t_22 = 0;
            if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_20, &__pyx_t_21, &__pyx_t_22);
            if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_17, &__pyx_t_16, &__pyx_t_15) < 0)) __Pyx_ErrFetch(&__pyx_t_17, &__pyx_t_16, &__pyx_t_15);
            __Pyx_XGOTREF(__pyx_t_17);
            __Pyx_XGOTREF(__pyx_t_16);
            __Pyx_XGOTREF(__pyx_t_15);
            __Pyx_XGOTREF(__pyx_t_20);
            __Pyx_XGOTREF(__pyx_t_21);
            __Pyx_XGOTREF(__pyx_t_22);
            __pyx_t_23 = __pyx_r;
            __pyx_r = 0;
            if (__pyx_t_14) {
              __pyx_t_24 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_tuple__13, NULL);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 677, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_24);
              __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_24);
              __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
              __Pyx_XGOTREF(__pyx_r);
              if (likely(__pyx_r)) {
                __Pyx_XGIVEREF(__pyx_t_11);
                __pyx_cur_scope->__pyx_t_0 = __pyx_t_11;
                __Pyx_XGIVEREF(__pyx_t_12);
                __pyx_cur_scope->__pyx_t_1 = __pyx_t_12;
                __Pyx_XGIVEREF(__pyx_t_13);
                __pyx_cur_scope->__pyx_t_2 = __pyx_t_13;
                __Pyx_XGIVEREF(__pyx_t_14);
                __pyx_cur_scope->__pyx_t_3 = __pyx_t_14;
                __Pyx_XGIVEREF(__pyx_t_15);
                __pyx_cur_scope->__pyx_t_4 = __pyx_t_15;
                __Pyx_XGIVEREF(__pyx_t_16);
                __pyx_cur_scope->__pyx_t_5 = __pyx_t_16;
                __Pyx_XGIVEREF(__pyx_t_17);
                __pyx_cur_scope->__pyx_t_6 = __pyx_t_17;
                __Pyx_XGIVEREF(__pyx_t_20);
                __pyx_cur_scope->__pyx_t_7 = __pyx_t_20;
                __Pyx_XGIVEREF(__pyx_t_21);
                __pyx_cur_scope->__pyx_t_8 = __pyx_t_21;
                __Pyx_XGIVEREF(__pyx_t_22);
                __pyx_cur_scope->__pyx_t_9 = __pyx_t_22;
                __Pyx_XGIVEREF(__pyx_t_23);
                __pyx_cur_scope->__pyx_t_10 = __pyx_t_23;
                __Pyx_XGIVEREF(__pyx_t_24);
                __pyx_cur_scope->__pyx_t_11 = __pyx_t_24;
                __Pyx_XGIVEREF(__pyx_r);
                __Pyx_RefNannyFinishContext();
                __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
                /* return from generator, awaiting value */
                __pyx_generator->resume_label = 5;
                return __pyx_r;
                __pyx_L45_resume_from_await:;
                __pyx_t_11 = __pyx_cur_scope->__pyx_t_0;
                __pyx_cur_scope->__pyx_t_0 = 0;
                __Pyx_XGOTREF(__pyx_t_11);
                __pyx_t_12 = __pyx_cur_scope->__pyx_t_1;
                __pyx_cur_scope->__pyx_t_1 = 0;
                __Pyx_XGOTREF(__pyx_t_12);
                __pyx_t_13 = __pyx_cur_scope->__pyx_t_2;
                __pyx_cur_scope->__pyx_t_2 = 0;
                __Pyx_XGOTREF(__pyx_t_13);
                __pyx_t_14 = __pyx_cur_scope->__pyx_t_3;
                __pyx_cur_scope->__pyx_t_3 = 0;
                __Pyx_XGOTREF(__pyx_t_14);
                __pyx_t_15 = __pyx_cur_scope->__pyx_t_4;
                __pyx_cur_scope->__pyx_t_4 = 0;
                __Pyx_XGOTREF(__pyx_t_15);
                __pyx_t_16 = __pyx_cur_scope->__pyx_t_5;
                __pyx_cur_scope->__pyx_t_5 = 0;
                __Pyx_XGOTREF(__pyx_t_16);
                __pyx_t_17 = __pyx_cur_scope->__pyx_t_6;
                __pyx_cur_scope->__pyx_t_6 = 0;
                __Pyx_XGOTREF(__pyx_t_17);
                __pyx_t_20 = __pyx_cur_scope->__pyx_t_7;
                __pyx_cur_scope->__pyx_t_7 = 0;
                __Pyx_XGOTREF(__pyx_t_20);
                __pyx_t_21 = __pyx_cur_scope->__pyx_t_8;
                __pyx_cur_scope->__pyx_t_8 = 0;
                __Pyx_XGOTREF(__pyx_t_21);
                __pyx_t_22 = __pyx_cur_scope->__pyx_t_9;
                __pyx_cur_scope->__pyx_t_9 = 0;
                __Pyx_XGOTREF(__pyx_t_22);
                __pyx_t_23 = __pyx_cur_scope->__pyx_t_10;
                __pyx_cur_scope->__pyx_t_10 = 0;
                __Pyx_XGOTREF(__pyx_t_23);
                __pyx_t_24 = __pyx_cur_scope->__pyx_t_11;
                __pyx_cur_scope->__pyx_t_11 = 0;
                __Pyx_XGOTREF(__pyx_t_24);
                if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 677, __pyx_L14_error)
                __pyx_t_2 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_2);
              } else {
                __pyx_t_2 = NULL;
                if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_2) < 0) __PYX_ERR(0, 677, __pyx_L14_error)
                __Pyx_GOTREF(__pyx_t_2);
              }
              __pyx_t_24 = __pyx_t_2;
              __pyx_t_2 = 0;
              __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
            }
            __pyx_r = __pyx_t_23;
            __pyx_t_23 = 0;
            if (PY_MAJOR_VERSION >= 3) {
              __Pyx_XGIVEREF(__pyx_t_20);
              __Pyx_XGIVEREF(__pyx_t_21);
              __Pyx_XGIVEREF(__pyx_t_22);
              __Pyx_ExceptionReset(__pyx_t_20, __pyx_t_21, __pyx_t_22);
            }
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_15);
            __Pyx_ErrRestore(__pyx_t_17, __pyx_t_16, __pyx_t_15);
            __pyx_t_17 = 0; __pyx_t_16 = 0; __pyx_t_15 = 0; __pyx_t_20 = 0; __pyx_t_21 = 0; __pyx_t_22 = 0;
            goto __pyx_L18_try_return;
          }
          __pyx_L24:;
        }
        goto __pyx_L46;
        __pyx_L20_error:;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        goto __pyx_L14_error;
        __pyx_L46:;
      }

      /* "wings/market/radar_relay_market.pyx":676
 *         tx_hash = self._exchange.cancel_orders_up_to(self._latest_salt)
 *         receipt = None
 *         try:             # <<<<<<<<<<<<<<
 *             async with timeout(timeout_seconds):
 *                 while receipt is None:
 */
    }
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    goto __pyx_L19_try_end;
    __pyx_L14_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "wings/market/radar_relay_market.pyx":687
 *                     elif receipt["status"] == 1:
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]
 *         except Exception:             # <<<<<<<<<<<<<<
 *             self.logger().error(f"Unexpected error cancelling orders.", exc_info=True)
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 */
    __pyx_t_5 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_5) {
      __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.cancel_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_6, &__pyx_t_1) < 0) __PYX_ERR(0, 687, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_1);

      /* "wings/market/radar_relay_market.pyx":688
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]
 *         except Exception:
 *             self.logger().error(f"Unexpected error cancelling orders.", exc_info=True)             # <<<<<<<<<<<<<<
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 * 
 */
      __pyx_t_18 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 688, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_19 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_18))) {
        __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_18);
        if (likely(__pyx_t_19)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
          __Pyx_INCREF(__pyx_t_19);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_18, function);
        }
      }
      __pyx_t_10 = (__pyx_t_19) ? __Pyx_PyObject_CallOneArg(__pyx_t_18, __pyx_t_19) : __Pyx_PyObject_CallNoArg(__pyx_t_18);
      __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 688, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_error); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 688, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 688, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_exc_info, Py_True) < 0) __PYX_ERR(0, 688, __pyx_L16_except_error)
      __pyx_t_19 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__16, __pyx_t_10); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 688, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L15_exception_handled;
    }
    goto __pyx_L16_except_error;
    __pyx_L16_except_error:;

    /* "wings/market/radar_relay_market.pyx":676
 *         tx_hash = self._exchange.cancel_orders_up_to(self._latest_salt)
 *         receipt = None
 *         try:             # <<<<<<<<<<<<<<
 *             async with timeout(timeout_seconds):
 *                 while receipt is None:
 */
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
    goto __pyx_L1_error;
    __pyx_L18_try_return:;
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
    goto __pyx_L0;
    __pyx_L15_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
    __pyx_L19_try_end:;
  }

  /* "wings/market/radar_relay_market.pyx":689
 *         except Exception:
 *             self.logger().error(f"Unexpected error cancelling orders.", exc_info=True)
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]             # <<<<<<<<<<<<<<
 * 
 *     async def execute_trade(self,
 */
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 689, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __pyx_cur_scope->__pyx_v_incomplete_order_ids; __Pyx_INCREF(__pyx_t_6); __pyx_t_4 = 0;
    for (;;) {
      if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 689, __pyx_L1_error)
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_19, __pyx_n_s_CancellationResult); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __pyx_t_10 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_19))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_19);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_19);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_19, function);
          __pyx_t_5 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_19)) {
        PyObject *__pyx_temp[3] = {__pyx_t_10, __pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid, Py_False};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_19, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_19)) {
        PyObject *__pyx_temp[3] = {__pyx_t_10, __pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid, Py_False};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_19, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_18 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 689, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        if (__pyx_t_10) {
          __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_10); __pyx_t_10 = NULL;
        }
        __Pyx_INCREF(__pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid);
        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid);
        PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_5, __pyx_cur_scope->__pyx_8genexpr4__pyx_v_oid);
        __Pyx_INCREF(Py_False);
        __Pyx_GIVEREF(Py_False);
        PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_5, Py_False);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_19, __pyx_t_18, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      }
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } /* exit inner scope */
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":667
 *         return order_hash, zero_ex_order
 * 
 *     async def cancel_all(self, timeout_seconds: float) -> List[CancellationResult]:             # <<<<<<<<<<<<<<
 *         incomplete_order_ids = [o.client_order_id
 *                                 for o in self._in_flight_limit_orders.values()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_AddTraceback("cancel_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_54generator14(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":691
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 * 
 *     async def execute_trade(self,             # <<<<<<<<<<<<<<
 *                             order_id: str,
 *                             order_type: OrderType,
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_53execute_trade(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_53execute_trade(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_order_id = 0;
  PyObject *__pyx_v_order_type = 0;
  PyObject *__pyx_v_order_side = 0;
  PyObject *__pyx_v_symbol = 0;
  double __pyx_v_amount;
  double __pyx_v_price;
  PyObject *__pyx_v_expires = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("execute_trade (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_order_id,&__pyx_n_s_order_type,&__pyx_n_s_order_side,&__pyx_n_s_symbol,&__pyx_n_s_amount,&__pyx_n_s_price,&__pyx_n_s_expires,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order_type)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, 1); __PYX_ERR(0, 691, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order_side)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, 2); __PYX_ERR(0, 691, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, 3); __PYX_ERR(0, 691, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_amount)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, 4); __PYX_ERR(0, 691, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_price)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, 5); __PYX_ERR(0, 691, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_expires)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, 6); __PYX_ERR(0, 691, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "execute_trade") < 0)) __PYX_ERR(0, 691, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_order_id = ((PyObject*)values[0]);
    __pyx_v_order_type = values[1];
    __pyx_v_order_side = values[2];
    __pyx_v_symbol = ((PyObject*)values[3]);
    __pyx_v_amount = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_amount == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_price = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_price == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 697, __pyx_L3_error)
    __pyx_v_expires = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("execute_trade", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 691, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.execute_trade", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_order_id), (&PyUnicode_Type), 1, "order_id", 1))) __PYX_ERR(0, 692, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 695, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_52execute_trade(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_order_id, __pyx_v_order_type, __pyx_v_order_side, __pyx_v_symbol, __pyx_v_amount, __pyx_v_price, __pyx_v_expires);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_52execute_trade(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id, PyObject *__pyx_v_order_type, PyObject *__pyx_v_order_side, PyObject *__pyx_v_symbol, double __pyx_v_amount, double __pyx_v_price, PyObject *__pyx_v_expires) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("execute_trade", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 691, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_order_id = __pyx_v_order_id;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_id);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_id);
  __pyx_cur_scope->__pyx_v_order_type = __pyx_v_order_type;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_type);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_type);
  __pyx_cur_scope->__pyx_v_order_side = __pyx_v_order_side;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_side);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_side);
  __pyx_cur_scope->__pyx_v_symbol = __pyx_v_symbol;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
  __pyx_cur_scope->__pyx_v_amount = __pyx_v_amount;
  __pyx_cur_scope->__pyx_v_price = __pyx_v_price;
  __pyx_cur_scope->__pyx_v_expires = __pyx_v_expires;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_expires);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_expires);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_54generator14, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_execute_trade, __pyx_n_s_RadarRelayMarket_execute_trade, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 691, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.execute_trade", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_54generator14(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_UCS4 __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *(*__pyx_t_13)(PyObject *);
  int __pyx_t_14;
  int64_t __pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("execute_trade", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L14_resume_from_await;
    case 2: goto __pyx_L17_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 691, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":701
 *         cdef:
 *             str q_price
 *             object q_amt = self.c_quantize_order_amount(symbol, amount)             # <<<<<<<<<<<<<<
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *             bint is_buy = order_side is TradeType.BUY
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_quantize_order_amount(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_symbol, __pyx_cur_scope->__pyx_v_amount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_q_amt = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":702
 *             str q_price
 *             object q_amt = self.c_quantize_order_amount(symbol, amount)
 *             TradingRule trading_rule = self._trading_rules[symbol]             # <<<<<<<<<<<<<<
 *             bint is_buy = order_side is TradeType.BUY
 *         try:
 */
  if (unlikely(__pyx_cur_scope->__pyx_v_self->_trading_rules == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 702, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_cur_scope->__pyx_v_self->_trading_rules, __pyx_cur_scope->__pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5wings_6market_18radar_relay_market_TradingRule))))) __PYX_ERR(0, 702, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_trading_rule = ((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":703
 *             object q_amt = self.c_quantize_order_amount(symbol, amount)
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *             bint is_buy = order_side is TradeType.BUY             # <<<<<<<<<<<<<<
 *         try:
 *             if float(q_amt) < trading_rule.min_order_size:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_BUY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_cur_scope->__pyx_v_order_side == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_cur_scope->__pyx_v_is_buy = __pyx_t_3;

  /* "wings/market/radar_relay_market.pyx":704
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *             bint is_buy = order_side is TradeType.BUY
 *         try:             # <<<<<<<<<<<<<<
 *             if float(q_amt) < trading_rule.min_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {

      /* "wings/market/radar_relay_market.pyx":705
 *             bint is_buy = order_side is TradeType.BUY
 *         try:
 *             if float(q_amt) < trading_rule.min_order_size:             # <<<<<<<<<<<<<<
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 *                                  f" {trading_rule.min_order_size}")
 */
      __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_cur_scope->__pyx_v_q_amt); if (unlikely(__pyx_t_7 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 705, __pyx_L4_error)
      __pyx_t_3 = ((__pyx_t_7 < __pyx_cur_scope->__pyx_v_trading_rule->min_order_size) != 0);
      if (unlikely(__pyx_t_3)) {

        /* "wings/market/radar_relay_market.pyx":706
 *         try:
 *             if float(q_amt) < trading_rule.min_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "             # <<<<<<<<<<<<<<
 *                                  f" {trading_rule.min_order_size}")
 *             if float(q_amt) > trading_rule.max_order_size:
 */
        __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 706, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_Buy_order_amount);
        __pyx_t_8 += 17;
        __Pyx_GIVEREF(__pyx_kp_u_Buy_order_amount);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Buy_order_amount);
        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_q_amt, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 706, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
        __pyx_t_1 = 0;
        __Pyx_INCREF(__pyx_kp_u_is_lower_than_the_minimum_order);
        __pyx_t_8 += 39;
        __Pyx_GIVEREF(__pyx_kp_u_is_lower_than_the_minimum_order);
        PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_is_lower_than_the_minimum_order);

        /* "wings/market/radar_relay_market.pyx":707
 *             if float(q_amt) < trading_rule.min_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 *                                  f" {trading_rule.min_order_size}")             # <<<<<<<<<<<<<<
 *             if float(q_amt) > trading_rule.max_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is greater than the maximum order size "
 */
        __pyx_t_1 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_trading_rule->min_order_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 707, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 707, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_10);
        __pyx_t_10 = 0;

        /* "wings/market/radar_relay_market.pyx":706
 *         try:
 *             if float(q_amt) < trading_rule.min_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "             # <<<<<<<<<<<<<<
 *                                  f" {trading_rule.min_order_size}")
 *             if float(q_amt) > trading_rule.max_order_size:
 */
        __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_2, 4, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 706, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 706, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_Raise(__pyx_t_2, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __PYX_ERR(0, 706, __pyx_L4_error)

        /* "wings/market/radar_relay_market.pyx":705
 *             bint is_buy = order_side is TradeType.BUY
 *         try:
 *             if float(q_amt) < trading_rule.min_order_size:             # <<<<<<<<<<<<<<
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 *                                  f" {trading_rule.min_order_size}")
 */
      }

      /* "wings/market/radar_relay_market.pyx":708
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 *                                  f" {trading_rule.min_order_size}")
 *             if float(q_amt) > trading_rule.max_order_size:             # <<<<<<<<<<<<<<
 *                 raise ValueError(f"Buy order amount {q_amt} is greater than the maximum order size "
 *                                  f"{trading_rule.max_order_size}")
 */
      __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_cur_scope->__pyx_v_q_amt); if (unlikely(__pyx_t_7 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 708, __pyx_L4_error)
      __pyx_t_3 = ((__pyx_t_7 > __pyx_cur_scope->__pyx_v_trading_rule->max_order_size) != 0);
      if (unlikely(__pyx_t_3)) {

        /* "wings/market/radar_relay_market.pyx":709
 *                                  f" {trading_rule.min_order_size}")
 *             if float(q_amt) > trading_rule.max_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is greater than the maximum order size "             # <<<<<<<<<<<<<<
 *                                  f"{trading_rule.max_order_size}")
 * 
 */
        __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_Buy_order_amount);
        __pyx_t_8 += 17;
        __Pyx_GIVEREF(__pyx_kp_u_Buy_order_amount);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Buy_order_amount);
        __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_q_amt, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 709, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_10);
        __pyx_t_10 = 0;
        __Pyx_INCREF(__pyx_kp_u_is_greater_than_the_maximum_ord);
        __pyx_t_8 += 40;
        __Pyx_GIVEREF(__pyx_kp_u_is_greater_than_the_maximum_ord);
        PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_is_greater_than_the_maximum_ord);

        /* "wings/market/radar_relay_market.pyx":710
 *             if float(q_amt) > trading_rule.max_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is greater than the maximum order size "
 *                                  f"{trading_rule.max_order_size}")             # <<<<<<<<<<<<<<
 * 
 *             if order_type is OrderType.LIMIT:
 */
        __pyx_t_10 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_trading_rule->max_order_size); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 710, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_10, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 710, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "wings/market/radar_relay_market.pyx":709
 *                                  f" {trading_rule.min_order_size}")
 *             if float(q_amt) > trading_rule.max_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is greater than the maximum order size "             # <<<<<<<<<<<<<<
 *                                  f"{trading_rule.max_order_size}")
 * 
 */
        __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_2, 4, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 709, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_Raise(__pyx_t_2, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __PYX_ERR(0, 709, __pyx_L4_error)

        /* "wings/market/radar_relay_market.pyx":708
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 *                                  f" {trading_rule.min_order_size}")
 *             if float(q_amt) > trading_rule.max_order_size:             # <<<<<<<<<<<<<<
 *                 raise ValueError(f"Buy order amount {q_amt} is greater than the maximum order size "
 *                                  f"{trading_rule.max_order_size}")
 */
      }

      /* "wings/market/radar_relay_market.pyx":712
 *                                  f"{trading_rule.max_order_size}")
 * 
 *             if order_type is OrderType.LIMIT:             # <<<<<<<<<<<<<<
 *                 if price == NaN:
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 712, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_LIMIT); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 712, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = (__pyx_cur_scope->__pyx_v_order_type == __pyx_t_1);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_11 = (__pyx_t_3 != 0);
      if (__pyx_t_11) {

        /* "wings/market/radar_relay_market.pyx":713
 * 
 *             if order_type is OrderType.LIMIT:
 *                 if price == NaN:             # <<<<<<<<<<<<<<
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 *                 elif expires is None:
 */
        __pyx_t_1 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_price); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 713, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_NaN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 713, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_10 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 713, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 713, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(__pyx_t_11)) {

          /* "wings/market/radar_relay_market.pyx":714
 *             if order_type is OrderType.LIMIT:
 *                 if price == NaN:
 *                     raise ValueError(f"Limit orders require a price. Aborting.")             # <<<<<<<<<<<<<<
 *                 elif expires is None:
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 */
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 714, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_Raise(__pyx_t_10, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __PYX_ERR(0, 714, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":713
 * 
 *             if order_type is OrderType.LIMIT:
 *                 if price == NaN:             # <<<<<<<<<<<<<<
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 *                 elif expires is None:
 */
        }

        /* "wings/market/radar_relay_market.pyx":715
 *                 if price == NaN:
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 *                 elif expires is None:             # <<<<<<<<<<<<<<
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 *                 elif expires < time.time():
 */
        __pyx_t_11 = (__pyx_cur_scope->__pyx_v_expires == Py_None);
        __pyx_t_3 = (__pyx_t_11 != 0);
        if (unlikely(__pyx_t_3)) {

          /* "wings/market/radar_relay_market.pyx":716
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 *                 elif expires is None:
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")             # <<<<<<<<<<<<<<
 *                 elif expires < time.time():
 *                     raise ValueError(f"expiration time {expires} must be greater than current time {time.time()}")
 */
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 716, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_Raise(__pyx_t_10, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __PYX_ERR(0, 716, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":715
 *                 if price == NaN:
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 *                 elif expires is None:             # <<<<<<<<<<<<<<
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 *                 elif expires < time.time():
 */
        }

        /* "wings/market/radar_relay_market.pyx":717
 *                 elif expires is None:
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 *                 elif expires < time.time():             # <<<<<<<<<<<<<<
 *                     raise ValueError(f"expiration time {expires} must be greater than current time {time.time()}")
 *                 else:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 717, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 717, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_10 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 717, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_RichCompare(__pyx_cur_scope->__pyx_v_expires, __pyx_t_10, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 717, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 717, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(__pyx_t_3)) {

          /* "wings/market/radar_relay_market.pyx":718
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 *                 elif expires < time.time():
 *                     raise ValueError(f"expiration time {expires} must be greater than current time {time.time()}")             # <<<<<<<<<<<<<<
 *                 else:
 *                     q_price = str(self.c_quantize_order_price(symbol, price))
 */
          __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_8 = 0;
          __pyx_t_9 = 127;
          __Pyx_INCREF(__pyx_kp_u_expiration_time);
          __pyx_t_8 += 16;
          __Pyx_GIVEREF(__pyx_kp_u_expiration_time);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_expiration_time);
          __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_expires, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
          __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_10);
          __pyx_t_10 = 0;
          __Pyx_INCREF(__pyx_kp_u_must_be_greater_than_current_ti);
          __pyx_t_8 += 35;
          __Pyx_GIVEREF(__pyx_kp_u_must_be_greater_than_current_ti);
          PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_must_be_greater_than_current_ti);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_12);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_12, function);
            }
          }
          __pyx_t_10 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_12);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_t_12 = __Pyx_PyObject_FormatSimple(__pyx_t_10, __pyx_empty_unicode); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) : __pyx_t_9;
          __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_12);
          __pyx_t_12 = 0;
          __pyx_t_12 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 718, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_Raise(__pyx_t_1, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __PYX_ERR(0, 718, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":717
 *                 elif expires is None:
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 *                 elif expires < time.time():             # <<<<<<<<<<<<<<
 *                     raise ValueError(f"expiration time {expires} must be greater than current time {time.time()}")
 *                 else:
 */
        }

        /* "wings/market/radar_relay_market.pyx":720
 *                     raise ValueError(f"expiration time {expires} must be greater than current time {time.time()}")
 *                 else:
 *                     q_price = str(self.c_quantize_order_price(symbol, price))             # <<<<<<<<<<<<<<
 *                     exchange_order_id, zero_ex_order = await self.submit_limit_order(symbol=symbol,
 *                                                                                      side=order_side,
 */
        /*else*/ {
          __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_quantize_order_price(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_symbol, __pyx_cur_scope->__pyx_v_price); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 720, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_12 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 720, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_GIVEREF(__pyx_t_12);
          __pyx_cur_scope->__pyx_v_q_price = ((PyObject*)__pyx_t_12);
          __pyx_t_12 = 0;

          /* "wings/market/radar_relay_market.pyx":721
 *                 else:
 *                     q_price = str(self.c_quantize_order_price(symbol, price))
 *                     exchange_order_id, zero_ex_order = await self.submit_limit_order(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                                                      side=order_side,
 *                                                                                      amount=q_amt,
 */
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_submit_limit_order); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 721, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_1 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 721, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_symbol, __pyx_cur_scope->__pyx_v_symbol) < 0) __PYX_ERR(0, 721, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":722
 *                     q_price = str(self.c_quantize_order_price(symbol, price))
 *                     exchange_order_id, zero_ex_order = await self.submit_limit_order(symbol=symbol,
 *                                                                                      side=order_side,             # <<<<<<<<<<<<<<
 *                                                                                      amount=q_amt,
 *                                                                                      price=q_price,
 */
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_side, __pyx_cur_scope->__pyx_v_order_side) < 0) __PYX_ERR(0, 721, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":723
 *                     exchange_order_id, zero_ex_order = await self.submit_limit_order(symbol=symbol,
 *                                                                                      side=order_side,
 *                                                                                      amount=q_amt,             # <<<<<<<<<<<<<<
 *                                                                                      price=q_price,
 *                                                                                      expires=expires)
 */
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_amount, __pyx_cur_scope->__pyx_v_q_amt) < 0) __PYX_ERR(0, 721, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":724
 *                                                                                      side=order_side,
 *                                                                                      amount=q_amt,
 *                                                                                      price=q_price,             # <<<<<<<<<<<<<<
 *                                                                                      expires=expires)
 *                     self.c_start_tracking_limit_order(order_id=order_id,
 */
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_price, __pyx_cur_scope->__pyx_v_q_price) < 0) __PYX_ERR(0, 721, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":725
 *                                                                                      amount=q_amt,
 *                                                                                      price=q_price,
 *                                                                                      expires=expires)             # <<<<<<<<<<<<<<
 *                     self.c_start_tracking_limit_order(order_id=order_id,
 *                                                       exchange_order_id=exchange_order_id,
 */
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_expires, __pyx_cur_scope->__pyx_v_expires) < 0) __PYX_ERR(0, 721, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":721
 *                 else:
 *                     q_price = str(self.c_quantize_order_price(symbol, price))
 *                     exchange_order_id, zero_ex_order = await self.submit_limit_order(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                                                      side=order_side,
 *                                                                                      amount=q_amt,
 */
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 721, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XGOTREF(__pyx_r);
          if (likely(__pyx_r)) {
            __Pyx_XGIVEREF(__pyx_t_4);
            __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
            __Pyx_XGIVEREF(__pyx_t_5);
            __pyx_cur_scope->__pyx_t_1 = __pyx_t_5;
            __Pyx_XGIVEREF(__pyx_t_6);
            __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
            __Pyx_XGIVEREF(__pyx_r);
            __Pyx_RefNannyFinishContext();
            __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
            /* return from generator, awaiting value */
            __pyx_generator->resume_label = 1;
            return __pyx_r;
            __pyx_L14_resume_from_await:;
            __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
            __pyx_cur_scope->__pyx_t_0 = 0;
            __Pyx_XGOTREF(__pyx_t_4);
            __pyx_t_5 = __pyx_cur_scope->__pyx_t_1;
            __pyx_cur_scope->__pyx_t_1 = 0;
            __Pyx_XGOTREF(__pyx_t_5);
            __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
            __pyx_cur_scope->__pyx_t_2 = 0;
            __Pyx_XGOTREF(__pyx_t_6);
            if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 721, __pyx_L4_error)
            __pyx_t_10 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_10);
          } else {
            __pyx_t_10 = NULL;
            if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_10) < 0) __PYX_ERR(0, 721, __pyx_L4_error)
            __Pyx_GOTREF(__pyx_t_10);
          }
          if ((likely(PyTuple_CheckExact(__pyx_t_10))) || (PyList_CheckExact(__pyx_t_10))) {
            PyObject* sequence = __pyx_t_10;
            Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
            if (unlikely(size != 2)) {
              if (size > 2) __Pyx_RaiseTooManyValuesError(2);
              else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
              __PYX_ERR(0, 721, __pyx_L4_error)
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            if (likely(PyTuple_CheckExact(sequence))) {
              __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
              __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
            } else {
              __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
              __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
            }
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_12);
            #else
            __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 721, __pyx_L4_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 721, __pyx_L4_error)
            __Pyx_GOTREF(__pyx_t_12);
            #endif
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          } else {
            Py_ssize_t index = -1;
            __pyx_t_2 = PyObject_GetIter(__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 721, __pyx_L4_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_13 = Py_TYPE(__pyx_t_2)->tp_iternext;
            index = 0; __pyx_t_1 = __pyx_t_13(__pyx_t_2); if (unlikely(!__pyx_t_1)) goto __pyx_L15_unpacking_failed;
            __Pyx_GOTREF(__pyx_t_1);
            index = 1; __pyx_t_12 = __pyx_t_13(__pyx_t_2); if (unlikely(!__pyx_t_12)) goto __pyx_L15_unpacking_failed;
            __Pyx_GOTREF(__pyx_t_12);
            if (__Pyx_IternextUnpackEndCheck(__pyx_t_13(__pyx_t_2), 2) < 0) __PYX_ERR(0, 721, __pyx_L4_error)
            __pyx_t_13 = NULL;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            goto __pyx_L16_unpacking_done;
            __pyx_L15_unpacking_failed:;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_13 = NULL;
            if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
            __PYX_ERR(0, 721, __pyx_L4_error)
            __pyx_L16_unpacking_done:;
          }
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_cur_scope->__pyx_v_exchange_order_id = __pyx_t_1;
          __pyx_t_1 = 0;
          __Pyx_GIVEREF(__pyx_t_12);
          __pyx_cur_scope->__pyx_v_zero_ex_order = __pyx_t_12;
          __pyx_t_12 = 0;

          /* "wings/market/radar_relay_market.pyx":727
 *                                                                                      expires=expires)
 *                     self.c_start_tracking_limit_order(order_id=order_id,
 *                                                       exchange_order_id=exchange_order_id,             # <<<<<<<<<<<<<<
 *                                                       symbol=symbol,
 *                                                       is_buy=is_buy,
 */
          if (!(likely(PyUnicode_CheckExact(__pyx_cur_scope->__pyx_v_exchange_order_id))||((__pyx_cur_scope->__pyx_v_exchange_order_id) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_cur_scope->__pyx_v_exchange_order_id)->tp_name), 0))) __PYX_ERR(0, 727, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":731
 *                                                       is_buy=is_buy,
 *                                                       order_type= order_type,
 *                                                       amount=Decimal(q_amt),             # <<<<<<<<<<<<<<
 *                                                       price=Decimal(q_price),
 *                                                       expires=expires,
 */
          __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 731, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_1 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_12);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_12, function);
            }
          }
          __pyx_t_10 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_1, __pyx_cur_scope->__pyx_v_q_amt) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_cur_scope->__pyx_v_q_amt);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 731, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

          /* "wings/market/radar_relay_market.pyx":732
 *                                                       order_type= order_type,
 *                                                       amount=Decimal(q_amt),
 *                                                       price=Decimal(q_price),             # <<<<<<<<<<<<<<
 *                                                       expires=expires,
 *                                                       zero_ex_order=zero_ex_order)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 732, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_12 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_cur_scope->__pyx_v_q_price) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_cur_scope->__pyx_v_q_price);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 732, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "wings/market/radar_relay_market.pyx":733
 *                                                       amount=Decimal(q_amt),
 *                                                       price=Decimal(q_price),
 *                                                       expires=expires,             # <<<<<<<<<<<<<<
 *                                                       zero_ex_order=zero_ex_order)
 *             elif order_type is OrderType.MARKET:
 */
          __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_expires); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 733, __pyx_L4_error)

          /* "wings/market/radar_relay_market.pyx":726
 *                                                                                      price=q_price,
 *                                                                                      expires=expires)
 *                     self.c_start_tracking_limit_order(order_id=order_id,             # <<<<<<<<<<<<<<
 *                                                       exchange_order_id=exchange_order_id,
 *                                                       symbol=symbol,
 */
          __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_start_tracking_limit_order(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_order_id, ((PyObject*)__pyx_cur_scope->__pyx_v_exchange_order_id), __pyx_cur_scope->__pyx_v_symbol, __pyx_cur_scope->__pyx_v_is_buy, __pyx_cur_scope->__pyx_v_order_type, __pyx_t_10, __pyx_t_12, __pyx_t_14, __pyx_cur_scope->__pyx_v_zero_ex_order); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 726, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }

        /* "wings/market/radar_relay_market.pyx":712
 *                                  f"{trading_rule.max_order_size}")
 * 
 *             if order_type is OrderType.LIMIT:             # <<<<<<<<<<<<<<
 *                 if price == NaN:
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 */
        goto __pyx_L12;
      }

      /* "wings/market/radar_relay_market.pyx":735
 *                                                       expires=expires,
 *                                                       zero_ex_order=zero_ex_order)
 *             elif order_type is OrderType.MARKET:             # <<<<<<<<<<<<<<
 *                 avg_price, tx_hash = await self.submit_market_order(symbol=symbol,
 *                                                                     side=order_side,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 735, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_MARKET); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 735, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = (__pyx_cur_scope->__pyx_v_order_type == __pyx_t_12);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_11 = (__pyx_t_3 != 0);
      if (__pyx_t_11) {

        /* "wings/market/radar_relay_market.pyx":736
 *                                                       zero_ex_order=zero_ex_order)
 *             elif order_type is OrderType.MARKET:
 *                 avg_price, tx_hash = await self.submit_market_order(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                                     side=order_side,
 *                                                                     amount=q_amt)
 */
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_submit_market_order); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 736, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 736, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_symbol, __pyx_cur_scope->__pyx_v_symbol) < 0) __PYX_ERR(0, 736, __pyx_L4_error)

        /* "wings/market/radar_relay_market.pyx":737
 *             elif order_type is OrderType.MARKET:
 *                 avg_price, tx_hash = await self.submit_market_order(symbol=symbol,
 *                                                                     side=order_side,             # <<<<<<<<<<<<<<
 *                                                                     amount=q_amt)
 *                 q_price = str(self.c_quantize_order_price(symbol, avg_price))
 */
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_side, __pyx_cur_scope->__pyx_v_order_side) < 0) __PYX_ERR(0, 736, __pyx_L4_error)

        /* "wings/market/radar_relay_market.pyx":738
 *                 avg_price, tx_hash = await self.submit_market_order(symbol=symbol,
 *                                                                     side=order_side,
 *                                                                     amount=q_amt)             # <<<<<<<<<<<<<<
 *                 q_price = str(self.c_quantize_order_price(symbol, avg_price))
 *                 self.c_start_tracking_market_order(order_id=order_id,
 */
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_amount, __pyx_cur_scope->__pyx_v_q_amt) < 0) __PYX_ERR(0, 736, __pyx_L4_error)

        /* "wings/market/radar_relay_market.pyx":736
 *                                                       zero_ex_order=zero_ex_order)
 *             elif order_type is OrderType.MARKET:
 *                 avg_price, tx_hash = await self.submit_market_order(symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                                     side=order_side,
 *                                                                     amount=q_amt)
 */
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 736, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_10);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XGOTREF(__pyx_r);
        if (likely(__pyx_r)) {
          __Pyx_XGIVEREF(__pyx_t_4);
          __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
          __Pyx_XGIVEREF(__pyx_t_5);
          __pyx_cur_scope->__pyx_t_1 = __pyx_t_5;
          __Pyx_XGIVEREF(__pyx_t_6);
          __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
          __Pyx_XGIVEREF(__pyx_r);
          __Pyx_RefNannyFinishContext();
          __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
          /* return from generator, awaiting value */
          __pyx_generator->resume_label = 2;
          return __pyx_r;
          __pyx_L17_resume_from_await:;
          __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
          __pyx_cur_scope->__pyx_t_0 = 0;
          __Pyx_XGOTREF(__pyx_t_4);
          __pyx_t_5 = __pyx_cur_scope->__pyx_t_1;
          __pyx_cur_scope->__pyx_t_1 = 0;
          __Pyx_XGOTREF(__pyx_t_5);
          __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
          __pyx_cur_scope->__pyx_t_2 = 0;
          __Pyx_XGOTREF(__pyx_t_6);
          if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 736, __pyx_L4_error)
          __pyx_t_10 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_10);
        } else {
          __pyx_t_10 = NULL;
          if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_10) < 0) __PYX_ERR(0, 736, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
        }
        if ((likely(PyTuple_CheckExact(__pyx_t_10))) || (PyList_CheckExact(__pyx_t_10))) {
          PyObject* sequence = __pyx_t_10;
          Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
          if (unlikely(size != 2)) {
            if (size > 2) __Pyx_RaiseTooManyValuesError(2);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            __PYX_ERR(0, 736, __pyx_L4_error)
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
          } else {
            __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
          }
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_12);
          #else
          __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 736, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 736, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_12);
          #endif
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        } else {
          Py_ssize_t index = -1;
          __pyx_t_2 = PyObject_GetIter(__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 736, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_13 = Py_TYPE(__pyx_t_2)->tp_iternext;
          index = 0; __pyx_t_1 = __pyx_t_13(__pyx_t_2); if (unlikely(!__pyx_t_1)) goto __pyx_L18_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_1);
          index = 1; __pyx_t_12 = __pyx_t_13(__pyx_t_2); if (unlikely(!__pyx_t_12)) goto __pyx_L18_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_12);
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_13(__pyx_t_2), 2) < 0) __PYX_ERR(0, 736, __pyx_L4_error)
          __pyx_t_13 = NULL;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          goto __pyx_L19_unpacking_done;
          __pyx_L18_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_13 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          __PYX_ERR(0, 736, __pyx_L4_error)
          __pyx_L19_unpacking_done:;
        }
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_cur_scope->__pyx_v_avg_price = __pyx_t_1;
        __pyx_t_1 = 0;
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_cur_scope->__pyx_v_tx_hash = __pyx_t_12;
        __pyx_t_12 = 0;

        /* "wings/market/radar_relay_market.pyx":739
 *                                                                     side=order_side,
 *                                                                     amount=q_amt)
 *                 q_price = str(self.c_quantize_order_price(symbol, avg_price))             # <<<<<<<<<<<<<<
 *                 self.c_start_tracking_market_order(order_id=order_id,
 *                                                    tx_hash=tx_hash,
 */
        __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_cur_scope->__pyx_v_avg_price); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L4_error)
        __pyx_t_10 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_quantize_order_price(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_symbol, __pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 739, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_10); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 739, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_cur_scope->__pyx_v_q_price = ((PyObject*)__pyx_t_12);
        __pyx_t_12 = 0;

        /* "wings/market/radar_relay_market.pyx":741
 *                 q_price = str(self.c_quantize_order_price(symbol, avg_price))
 *                 self.c_start_tracking_market_order(order_id=order_id,
 *                                                    tx_hash=tx_hash,             # <<<<<<<<<<<<<<
 *                                                    symbol=symbol,
 *                                                    is_buy=is_buy,
 */
        if (!(likely(PyUnicode_CheckExact(__pyx_cur_scope->__pyx_v_tx_hash))||((__pyx_cur_scope->__pyx_v_tx_hash) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_cur_scope->__pyx_v_tx_hash)->tp_name), 0))) __PYX_ERR(0, 741, __pyx_L4_error)

        /* "wings/market/radar_relay_market.pyx":745
 *                                                    is_buy=is_buy,
 *                                                    order_type= order_type,
 *                                                    amount=Decimal(q_amt),             # <<<<<<<<<<<<<<
 *                                                    price=Decimal(q_price))
 *             if is_buy:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 745, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_1 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
          }
        }
        __pyx_t_12 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_1, __pyx_cur_scope->__pyx_v_q_amt) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_cur_scope->__pyx_v_q_amt);
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 745, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "wings/market/radar_relay_market.pyx":746
 *                                                    order_type= order_type,
 *                                                    amount=Decimal(q_amt),
 *                                                    price=Decimal(q_price))             # <<<<<<<<<<<<<<
 *             if is_buy:
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 746, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_10 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_cur_scope->__pyx_v_q_price) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_cur_scope->__pyx_v_q_price);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 746, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "wings/market/radar_relay_market.pyx":740
 *                                                                     amount=q_amt)
 *                 q_price = str(self.c_quantize_order_price(symbol, avg_price))
 *                 self.c_start_tracking_market_order(order_id=order_id,             # <<<<<<<<<<<<<<
 *                                                    tx_hash=tx_hash,
 *                                                    symbol=symbol,
 */
        __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_start_tracking_market_order(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_order_id, ((PyObject*)__pyx_cur_scope->__pyx_v_tx_hash), __pyx_cur_scope->__pyx_v_symbol, __pyx_cur_scope->__pyx_v_is_buy, __pyx_cur_scope->__pyx_v_order_type, __pyx_t_12, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 740, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "wings/market/radar_relay_market.pyx":735
 *                                                       expires=expires,
 *                                                       zero_ex_order=zero_ex_order)
 *             elif order_type is OrderType.MARKET:             # <<<<<<<<<<<<<<
 *                 avg_price, tx_hash = await self.submit_market_order(symbol=symbol,
 *                                                                     side=order_side,
 */
      }
      __pyx_L12:;

      /* "wings/market/radar_relay_market.pyx":747
 *                                                    amount=Decimal(q_amt),
 *                                                    price=Decimal(q_price))
 *             if is_buy:             # <<<<<<<<<<<<<<
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,
 *                                      BuyOrderCreatedEvent(
 */
      __pyx_t_11 = (__pyx_cur_scope->__pyx_v_is_buy != 0);
      if (__pyx_t_11) {

        /* "wings/market/radar_relay_market.pyx":748
 *                                                    price=Decimal(q_price))
 *             if is_buy:
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                      BuyOrderCreatedEvent(
 *                                          self._current_timestamp,
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_BUY_ORDER_CREATED_EVENT_T); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 748, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_1); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "wings/market/radar_relay_market.pyx":749
 *             if is_buy:
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,
 *                                      BuyOrderCreatedEvent(             # <<<<<<<<<<<<<<
 *                                          self._current_timestamp,
 *                                          order_type,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_BuyOrderCreatedEvent); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 749, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);

        /* "wings/market/radar_relay_market.pyx":750
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,
 *                                      BuyOrderCreatedEvent(
 *                                          self._current_timestamp,             # <<<<<<<<<<<<<<
 *                                          order_type,
 *                                          symbol,
 */
        __pyx_t_12 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 750, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_12);

        /* "wings/market/radar_relay_market.pyx":753
 *                                          order_type,
 *                                          symbol,
 *                                          Decimal(q_amt),             # <<<<<<<<<<<<<<
 *                                          Decimal(q_price),
 *                                          order_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 753, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_17 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
          }
        }
        __pyx_t_2 = (__pyx_t_17) ? __Pyx_PyObject_Call2Args(__pyx_t_16, __pyx_t_17, __pyx_cur_scope->__pyx_v_q_amt) : __Pyx_PyObject_CallOneArg(__pyx_t_16, __pyx_cur_scope->__pyx_v_q_amt);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 753, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "wings/market/radar_relay_market.pyx":754
 *                                          symbol,
 *                                          Decimal(q_amt),
 *                                          Decimal(q_price),             # <<<<<<<<<<<<<<
 *                                          order_id
 *                                      ))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 754, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_17);
        if (unlikely(!__pyx_cur_scope->__pyx_v_q_price)) { __Pyx_RaiseUnboundLocalError("q_price"); __PYX_ERR(0, 754, __pyx_L4_error) }
        __pyx_t_18 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
          }
        }
        __pyx_t_16 = (__pyx_t_18) ? __Pyx_PyObject_Call2Args(__pyx_t_17, __pyx_t_18, __pyx_cur_scope->__pyx_v_q_price) : __Pyx_PyObject_CallOneArg(__pyx_t_17, __pyx_cur_scope->__pyx_v_q_price);
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 754, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

        /* "wings/market/radar_relay_market.pyx":755
 *                                          Decimal(q_amt),
 *                                          Decimal(q_price),
 *                                          order_id             # <<<<<<<<<<<<<<
 *                                      ))
 *             else:
 */
        __pyx_t_17 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_10)) {
          PyObject *__pyx_temp[7] = {__pyx_t_17, __pyx_t_12, __pyx_cur_scope->__pyx_v_order_type, __pyx_cur_scope->__pyx_v_symbol, __pyx_t_2, __pyx_t_16, __pyx_cur_scope->__pyx_v_order_id};
          __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_14, 6+__pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 749, __pyx_L4_error)
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_10)) {
          PyObject *__pyx_temp[7] = {__pyx_t_17, __pyx_t_12, __pyx_cur_scope->__pyx_v_order_type, __pyx_cur_scope->__pyx_v_symbol, __pyx_t_2, __pyx_t_16, __pyx_cur_scope->__pyx_v_order_id};
          __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_14, 6+__pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 749, __pyx_L4_error)
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        } else
        #endif
        {
          __pyx_t_18 = PyTuple_New(6+__pyx_t_14); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 749, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_18);
          if (__pyx_t_17) {
            __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_17); __pyx_t_17 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_14, __pyx_t_12);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_type);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_type);
          PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_14, __pyx_cur_scope->__pyx_v_order_type);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
          PyTuple_SET_ITEM(__pyx_t_18, 2+__pyx_t_14, __pyx_cur_scope->__pyx_v_symbol);
          __Pyx_GIVEREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_18, 3+__pyx_t_14, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_18, 4+__pyx_t_14, __pyx_t_16);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_id);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_id);
          PyTuple_SET_ITEM(__pyx_t_18, 5+__pyx_t_14, __pyx_cur_scope->__pyx_v_order_id);
          __pyx_t_12 = 0;
          __pyx_t_2 = 0;
          __pyx_t_16 = 0;
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 749, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "wings/market/radar_relay_market.pyx":748
 *                                                    price=Decimal(q_price))
 *             if is_buy:
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                      BuyOrderCreatedEvent(
 *                                          self._current_timestamp,
 */
        __pyx_t_10 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 748, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "wings/market/radar_relay_market.pyx":747
 *                                                    amount=Decimal(q_amt),
 *                                                    price=Decimal(q_price))
 *             if is_buy:             # <<<<<<<<<<<<<<
 *                 self.c_trigger_event(self.MARKET_BUY_ORDER_CREATED_EVENT_TAG,
 *                                      BuyOrderCreatedEvent(
 */
        goto __pyx_L20;
      }

      /* "wings/market/radar_relay_market.pyx":758
 *                                      ))
 *             else:
 *                 self.c_trigger_event(self.MARKET_SELL_ORDER_CREATED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                     SellOrderCreatedEvent(
 *                                         self._current_timestamp,
 */
      /*else*/ {
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_SELL_ORDER_CREATED_EVENT); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 758, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_10); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 758, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "wings/market/radar_relay_market.pyx":759
 *             else:
 *                 self.c_trigger_event(self.MARKET_SELL_ORDER_CREATED_EVENT_TAG,
 *                                     SellOrderCreatedEvent(             # <<<<<<<<<<<<<<
 *                                         self._current_timestamp,
 *                                         order_type,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SellOrderCreatedEvent); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 759, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);

        /* "wings/market/radar_relay_market.pyx":760
 *                 self.c_trigger_event(self.MARKET_SELL_ORDER_CREATED_EVENT_TAG,
 *                                     SellOrderCreatedEvent(
 *                                         self._current_timestamp,             # <<<<<<<<<<<<<<
 *                                         order_type,
 *                                         symbol,
 */
        __pyx_t_18 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 760, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_18);

        /* "wings/market/radar_relay_market.pyx":763
 *                                         order_type,
 *                                         symbol,
 *                                         Decimal(q_amt),             # <<<<<<<<<<<<<<
 *                                         Decimal(q_price),
 *                                         order_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 763, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_12 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_16 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_12, __pyx_cur_scope->__pyx_v_q_amt) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_cur_scope->__pyx_v_q_amt);
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 763, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "wings/market/radar_relay_market.pyx":764
 *                                         symbol,
 *                                         Decimal(q_amt),
 *                                         Decimal(q_price),             # <<<<<<<<<<<<<<
 *                                         order_id
 *                                     ))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 764, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_12);
        if (unlikely(!__pyx_cur_scope->__pyx_v_q_price)) { __Pyx_RaiseUnboundLocalError("q_price"); __PYX_ERR(0, 764, __pyx_L4_error) }
        __pyx_t_17 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
          }
        }
        __pyx_t_2 = (__pyx_t_17) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_17, __pyx_cur_scope->__pyx_v_q_price) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_cur_scope->__pyx_v_q_price);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 764, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

        /* "wings/market/radar_relay_market.pyx":765
 *                                         Decimal(q_amt),
 *                                         Decimal(q_price),
 *                                         order_id             # <<<<<<<<<<<<<<
 *                                     ))
 * 
 */
        __pyx_t_12 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_1)) {
          PyObject *__pyx_temp[7] = {__pyx_t_12, __pyx_t_18, __pyx_cur_scope->__pyx_v_order_type, __pyx_cur_scope->__pyx_v_symbol, __pyx_t_16, __pyx_t_2, __pyx_cur_scope->__pyx_v_order_id};
          __pyx_t_10 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_14, 6+__pyx_t_14); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 759, __pyx_L4_error)
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
          PyObject *__pyx_temp[7] = {__pyx_t_12, __pyx_t_18, __pyx_cur_scope->__pyx_v_order_type, __pyx_cur_scope->__pyx_v_symbol, __pyx_t_16, __pyx_t_2, __pyx_cur_scope->__pyx_v_order_id};
          __pyx_t_10 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_14, 6+__pyx_t_14); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 759, __pyx_L4_error)
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        } else
        #endif
        {
          __pyx_t_17 = PyTuple_New(6+__pyx_t_14); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 759, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_17);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_12); __pyx_t_12 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_14, __pyx_t_18);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_type);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_type);
          PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_14, __pyx_cur_scope->__pyx_v_order_type);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_symbol);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_symbol);
          PyTuple_SET_ITEM(__pyx_t_17, 2+__pyx_t_14, __pyx_cur_scope->__pyx_v_symbol);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_17, 3+__pyx_t_14, __pyx_t_16);
          __Pyx_GIVEREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_17, 4+__pyx_t_14, __pyx_t_2);
          __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_id);
          __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_id);
          PyTuple_SET_ITEM(__pyx_t_17, 5+__pyx_t_14, __pyx_cur_scope->__pyx_v_order_id);
          __pyx_t_18 = 0;
          __pyx_t_16 = 0;
          __pyx_t_2 = 0;
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_17, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 759, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "wings/market/radar_relay_market.pyx":758
 *                                      ))
 *             else:
 *                 self.c_trigger_event(self.MARKET_SELL_ORDER_CREATED_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                                     SellOrderCreatedEvent(
 *                                         self._current_timestamp,
 */
        __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 758, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __pyx_L20:;

      /* "wings/market/radar_relay_market.pyx":768
 *                                     ))
 * 
 *             return order_id             # <<<<<<<<<<<<<<
 *         except Exception:
 *             self.logger().error(f"Error submitting trade order to Radar Relay for {str(q_amt)} {symbol}.", exc_info=True)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_cur_scope->__pyx_v_order_id);
      goto __pyx_L8_try_return;

      /* "wings/market/radar_relay_market.pyx":704
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *             bint is_buy = order_side is TradeType.BUY
 *         try:             # <<<<<<<<<<<<<<
 *             if float(q_amt) < trading_rule.min_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 */
    }
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "wings/market/radar_relay_market.pyx":769
 * 
 *             return order_id
 *         except Exception:             # <<<<<<<<<<<<<<
 *             self.logger().error(f"Error submitting trade order to Radar Relay for {str(q_amt)} {symbol}.", exc_info=True)
 *             self.c_trigger_event(
 */
    __pyx_t_14 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_14) {
      __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.execute_trade", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_10, &__pyx_t_17) < 0) __PYX_ERR(0, 769, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GOTREF(__pyx_t_17);

      /* "wings/market/radar_relay_market.pyx":770
 *             return order_id
 *         except Exception:
 *             self.logger().error(f"Error submitting trade order to Radar Relay for {str(q_amt)} {symbol}.", exc_info=True)             # <<<<<<<<<<<<<<
 *             self.c_trigger_event(
 *                 self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 */
      __pyx_t_16 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_18 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
        __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_16);
        if (likely(__pyx_t_18)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
          __Pyx_INCREF(__pyx_t_18);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_16, function);
        }
      }
      __pyx_t_2 = (__pyx_t_18) ? __Pyx_PyObject_CallOneArg(__pyx_t_16, __pyx_t_18) : __Pyx_PyObject_CallNoArg(__pyx_t_16);
      __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_error); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = 0;
      __pyx_t_9 = 127;
      __Pyx_INCREF(__pyx_kp_u_Error_submitting_trade_order_to);
      __pyx_t_8 += 48;
      __Pyx_GIVEREF(__pyx_kp_u_Error_submitting_trade_order_to);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Error_submitting_trade_order_to);
      __pyx_t_18 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_cur_scope->__pyx_v_q_amt); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_18);
      __pyx_t_18 = 0;
      __Pyx_INCREF(__pyx_kp_u__19);
      __pyx_t_8 += 1;
      __Pyx_GIVEREF(__pyx_kp_u__19);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u__19);
      __pyx_t_18 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_symbol); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_18);
      __pyx_t_18 = 0;
      __Pyx_INCREF(__pyx_kp_u__9);
      __pyx_t_8 += 1;
      __Pyx_GIVEREF(__pyx_kp_u__9);
      PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u__9);
      __pyx_t_18 = __Pyx_PyUnicode_Join(__pyx_t_2, 5, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_18);
      __pyx_t_18 = 0;
      __pyx_t_18 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      if (PyDict_SetItem(__pyx_t_18, __pyx_n_s_exc_info, Py_True) < 0) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_2, __pyx_t_18); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 770, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "wings/market/radar_relay_market.pyx":772
 *             self.logger().error(f"Error submitting trade order to Radar Relay for {str(q_amt)} {symbol}.", exc_info=True)
 *             self.c_trigger_event(
 *                 self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,             # <<<<<<<<<<<<<<
 *                 MarketTransactionFailureEvent(self._current_timestamp, order_id)
 *             )
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 772, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_12); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 772, __pyx_L6_except_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "wings/market/radar_relay_market.pyx":773
 *             self.c_trigger_event(
 *                 self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                 MarketTransactionFailureEvent(self._current_timestamp, order_id)             # <<<<<<<<<<<<<<
 *             )
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_MarketTransactionFailureEvent); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 773, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_2 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 773, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_16 = NULL;
      __pyx_t_14 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_18))) {
        __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_18);
        if (likely(__pyx_t_16)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
          __Pyx_INCREF(__pyx_t_16);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_18, function);
          __pyx_t_14 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_18)) {
        PyObject *__pyx_temp[3] = {__pyx_t_16, __pyx_t_2, __pyx_cur_scope->__pyx_v_order_id};
        __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 773, __pyx_L6_except_error)
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_18)) {
        PyObject *__pyx_temp[3] = {__pyx_t_16, __pyx_t_2, __pyx_cur_scope->__pyx_v_order_id};
        __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 773, __pyx_L6_except_error)
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      {
        __pyx_t_19 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 773, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_19);
        if (__pyx_t_16) {
          __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_16); __pyx_t_16 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_19, 0+__pyx_t_14, __pyx_t_2);
        __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_id);
        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_id);
        PyTuple_SET_ITEM(__pyx_t_19, 1+__pyx_t_14, __pyx_cur_scope->__pyx_v_order_id);
        __pyx_t_2 = 0;
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_19, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 773, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      }
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

      /* "wings/market/radar_relay_market.pyx":771
 *         except Exception:
 *             self.logger().error(f"Error submitting trade order to Radar Relay for {str(q_amt)} {symbol}.", exc_info=True)
 *             self.c_trigger_event(             # <<<<<<<<<<<<<<
 *                 self.MARKET_TRANSACTION_FAILURE_EVENT_TAG,
 *                 MarketTransactionFailureEvent(self._current_timestamp, order_id)
 */
      __pyx_t_18 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.__pyx_base.c_trigger_event(((struct __pyx_obj_5wings_6pubsub_PubSub *)__pyx_cur_scope->__pyx_v_self), __pyx_t_15, __pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 771, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
      goto __pyx_L5_exception_handled;
    }
    goto __pyx_L6_except_error;
    __pyx_L6_except_error:;

    /* "wings/market/radar_relay_market.pyx":704
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *             bint is_buy = order_side is TradeType.BUY
 *         try:             # <<<<<<<<<<<<<<
 *             if float(q_amt) < trading_rule.min_order_size:
 *                 raise ValueError(f"Buy order amount {q_amt} is lower than the minimum order size "
 */
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L8_try_return:;
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L0;
    __pyx_L5_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":691
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 * 
 *     async def execute_trade(self,             # <<<<<<<<<<<<<<
 *                             order_id: str,
 *                             order_type: OrderType,
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_AddTraceback("execute_trade", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":776
 *             )
 * 
 *     cdef str c_buy(self,             # <<<<<<<<<<<<<<
 *                    str symbol,
 *                    double amount,
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount, struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy *__pyx_optional_args) {
  PyObject *__pyx_v_order_type = __pyx_k__20;
  double __pyx_v_price = __pyx_k__21;
  PyObject *__pyx_v_kargs = __pyx_k__22;
  int64_t __pyx_v_tracking_nonce;
  PyObject *__pyx_v_order_id = 0;
  PyObject *__pyx_v_expires = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int64_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("c_buy", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_order_type = __pyx_optional_args->order_type;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_price = __pyx_optional_args->price;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_kargs = __pyx_optional_args->kargs;
        }
      }
    }
  }

  /* "wings/market/radar_relay_market.pyx":783
 *                    dict kargs = {}):
 *         cdef:
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)             # <<<<<<<<<<<<<<
 *             str order_id = str(f"buy-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_float_1e6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int64_t(__pyx_t_3); if (unlikely((__pyx_t_4 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_tracking_nonce = ((int64_t)__pyx_t_4);

  /* "wings/market/radar_relay_market.pyx":784
 *         cdef:
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)
 *             str order_id = str(f"buy-{symbol}-{tracking_nonce}")             # <<<<<<<<<<<<<<
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:
 */
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = 0;
  __pyx_t_6 = 127;
  __Pyx_INCREF(__pyx_kp_u_buy);
  __pyx_t_5 += 4;
  __Pyx_GIVEREF(__pyx_kp_u_buy);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_buy);
  __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u__4);
  __pyx_t_5 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__4);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__4);
  __pyx_t_1 = __Pyx_PyInt_From_int64_t(__pyx_v_tracking_nonce); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_order_id = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":785
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)
 *             str order_id = str(f"buy-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)             # <<<<<<<<<<<<<<
 *         if expires is not None:
 *             expires = int(expires)
 */
  if (unlikely(__pyx_v_kargs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 785, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_kargs, __pyx_n_u_expiration_ts, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_expires = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":786
 *             str order_id = str(f"buy-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:             # <<<<<<<<<<<<<<
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 */
  __pyx_t_7 = (__pyx_v_expires != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "wings/market/radar_relay_market.pyx":787
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:
 *             expires = int(expires)             # <<<<<<<<<<<<<<
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 *                                                  order_type=order_type,
 */
    __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_expires); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_expires, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":786
 *             str order_id = str(f"buy-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:             # <<<<<<<<<<<<<<
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 */
  }

  /* "wings/market/radar_relay_market.pyx":788
 *         if expires is not None:
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,             # <<<<<<<<<<<<<<
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.BUY,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_execute_trade); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = __Pyx_PyDict_NewPresized(7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_order_id, __pyx_v_order_id) < 0) __PYX_ERR(0, 788, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":789
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 *                                                  order_type=order_type,             # <<<<<<<<<<<<<<
 *                                                  order_side=TradeType.BUY,
 *                                                  symbol=symbol,
 */
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_order_type, __pyx_v_order_type) < 0) __PYX_ERR(0, 788, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":790
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.BUY,             # <<<<<<<<<<<<<<
 *                                                  symbol=symbol,
 *                                                  amount=amount,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_BUY); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_order_side, __pyx_t_11) < 0) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "wings/market/radar_relay_market.pyx":791
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.BUY,
 *                                                  symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                  amount=amount,
 *                                                  price=price,
 */
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_symbol, __pyx_v_symbol) < 0) __PYX_ERR(0, 788, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":792
 *                                                  order_side=TradeType.BUY,
 *                                                  symbol=symbol,
 *                                                  amount=amount,             # <<<<<<<<<<<<<<
 *                                                  price=price,
 *                                                  expires=expires))
 */
  __pyx_t_11 = PyFloat_FromDouble(__pyx_v_amount); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_amount, __pyx_t_11) < 0) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "wings/market/radar_relay_market.pyx":793
 *                                                  symbol=symbol,
 *                                                  amount=amount,
 *                                                  price=price,             # <<<<<<<<<<<<<<
 *                                                  expires=expires))
 *         return order_id
 */
  __pyx_t_11 = PyFloat_FromDouble(__pyx_v_price); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_price, __pyx_t_11) < 0) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "wings/market/radar_relay_market.pyx":794
 *                                                  amount=amount,
 *                                                  price=price,
 *                                                  expires=expires))             # <<<<<<<<<<<<<<
 *         return order_id
 * 
 */
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_expires, __pyx_v_expires) < 0) __PYX_ERR(0, 788, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":788
 *         if expires is not None:
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,             # <<<<<<<<<<<<<<
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.BUY,
 */
  __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_9); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_9, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_11);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":795
 *                                                  price=price,
 *                                                  expires=expires))
 *         return order_id             # <<<<<<<<<<<<<<
 * 
 *     cdef str c_sell(self,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_order_id);
  __pyx_r = __pyx_v_order_id;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":776
 *             )
 * 
 *     cdef str c_buy(self,             # <<<<<<<<<<<<<<
 *                    str symbol,
 *                    double amount,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_buy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_order_id);
  __Pyx_XDECREF(__pyx_v_expires);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":797
 *         return order_id
 * 
 *     cdef str c_sell(self,             # <<<<<<<<<<<<<<
 *                     str symbol,
 *                     double amount,
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount, struct __pyx_opt_args_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell *__pyx_optional_args) {
  PyObject *__pyx_v_order_type = __pyx_k__23;
  double __pyx_v_price = __pyx_k__24;
  PyObject *__pyx_v_kargs = __pyx_k__25;
  int64_t __pyx_v_tracking_nonce;
  PyObject *__pyx_v_order_id = 0;
  PyObject *__pyx_v_expires = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int64_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("c_sell", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_order_type = __pyx_optional_args->order_type;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_price = __pyx_optional_args->price;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_kargs = __pyx_optional_args->kargs;
        }
      }
    }
  }

  /* "wings/market/radar_relay_market.pyx":804
 *                     dict kargs = {}):
 *         cdef:
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)             # <<<<<<<<<<<<<<
 *             str order_id = str(f"sell-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_float_1e6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int64_t(__pyx_t_3); if (unlikely((__pyx_t_4 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 804, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_tracking_nonce = ((int64_t)__pyx_t_4);

  /* "wings/market/radar_relay_market.pyx":805
 *         cdef:
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)
 *             str order_id = str(f"sell-{symbol}-{tracking_nonce}")             # <<<<<<<<<<<<<<
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:
 */
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = 0;
  __pyx_t_6 = 127;
  __Pyx_INCREF(__pyx_kp_u_sell);
  __pyx_t_5 += 5;
  __Pyx_GIVEREF(__pyx_kp_u_sell);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_sell);
  __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u__4);
  __pyx_t_5 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__4);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__4);
  __pyx_t_1 = __Pyx_PyInt_From_int64_t(__pyx_v_tracking_nonce); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_order_id = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":806
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)
 *             str order_id = str(f"sell-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)             # <<<<<<<<<<<<<<
 *         if expires is not None:
 *             expires = int(expires)
 */
  if (unlikely(__pyx_v_kargs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 806, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_kargs, __pyx_n_u_expiration_ts, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_expires = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":807
 *             str order_id = str(f"sell-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:             # <<<<<<<<<<<<<<
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 */
  __pyx_t_7 = (__pyx_v_expires != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "wings/market/radar_relay_market.pyx":808
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:
 *             expires = int(expires)             # <<<<<<<<<<<<<<
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 *                                                  order_type=order_type,
 */
    __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_expires); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_expires, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "wings/market/radar_relay_market.pyx":807
 *             str order_id = str(f"sell-{symbol}-{tracking_nonce}")
 *         expires = kargs.get("expiration_ts", None)
 *         if expires is not None:             # <<<<<<<<<<<<<<
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 */
  }

  /* "wings/market/radar_relay_market.pyx":809
 *         if expires is not None:
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,             # <<<<<<<<<<<<<<
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.SELL,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_execute_trade); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = __Pyx_PyDict_NewPresized(7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_order_id, __pyx_v_order_id) < 0) __PYX_ERR(0, 809, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":810
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 *                                                  order_type=order_type,             # <<<<<<<<<<<<<<
 *                                                  order_side=TradeType.SELL,
 *                                                  symbol=symbol,
 */
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_order_type, __pyx_v_order_type) < 0) __PYX_ERR(0, 809, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":811
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.SELL,             # <<<<<<<<<<<<<<
 *                                                  symbol=symbol,
 *                                                  amount=amount,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_SELL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_order_side, __pyx_t_11) < 0) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "wings/market/radar_relay_market.pyx":812
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.SELL,
 *                                                  symbol=symbol,             # <<<<<<<<<<<<<<
 *                                                  amount=amount,
 *                                                  price=price,
 */
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_symbol, __pyx_v_symbol) < 0) __PYX_ERR(0, 809, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":813
 *                                                  order_side=TradeType.SELL,
 *                                                  symbol=symbol,
 *                                                  amount=amount,             # <<<<<<<<<<<<<<
 *                                                  price=price,
 *                                                  expires=expires))
 */
  __pyx_t_11 = PyFloat_FromDouble(__pyx_v_amount); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_amount, __pyx_t_11) < 0) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "wings/market/radar_relay_market.pyx":814
 *                                                  symbol=symbol,
 *                                                  amount=amount,
 *                                                  price=price,             # <<<<<<<<<<<<<<
 *                                                  expires=expires))
 *         return order_id
 */
  __pyx_t_11 = PyFloat_FromDouble(__pyx_v_price); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_price, __pyx_t_11) < 0) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "wings/market/radar_relay_market.pyx":815
 *                                                  amount=amount,
 *                                                  price=price,
 *                                                  expires=expires))             # <<<<<<<<<<<<<<
 *         return order_id
 * 
 */
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_expires, __pyx_v_expires) < 0) __PYX_ERR(0, 809, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":809
 *         if expires is not None:
 *             expires = int(expires)
 *         asyncio.ensure_future(self.execute_trade(order_id=order_id,             # <<<<<<<<<<<<<<
 *                                                  order_type=order_type,
 *                                                  order_side=TradeType.SELL,
 */
  __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_9); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_9, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_11);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":816
 *                                                  price=price,
 *                                                  expires=expires))
 *         return order_id             # <<<<<<<<<<<<<<
 * 
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_order_id);
  __pyx_r = __pyx_v_order_id;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":797
 *         return order_id
 * 
 *     cdef str c_sell(self,             # <<<<<<<<<<<<<<
 *                     str symbol,
 *                     double amount,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_sell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_order_id);
  __Pyx_XDECREF(__pyx_v_expires);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_57generator15(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":818
 *         return order_id
 * 
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         order = self._in_flight_limit_orders.get(client_order_id)
 *         if not order:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_56cancel_order(PyObject *__pyx_v_self, PyObject *__pyx_v_client_order_id); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_56cancel_order(PyObject *__pyx_v_self, PyObject *__pyx_v_client_order_id) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cancel_order (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_client_order_id), (&PyUnicode_Type), 1, "client_order_id", 1))) __PYX_ERR(0, 818, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_55cancel_order(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject*)__pyx_v_client_order_id));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_55cancel_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_client_order_id) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cancel_order", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 818, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_client_order_id = __pyx_v_client_order_id;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_client_order_id);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_client_order_id);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_57generator15, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_cancel_order, __pyx_n_s_RadarRelayMarket_cancel_order, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 818, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.cancel_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_57generator15(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  Py_UCS4 __pyx_t_8;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cancel_order", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 818, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":819
 * 
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:
 *         order = self._in_flight_limit_orders.get(client_order_id)             # <<<<<<<<<<<<<<
 *         if not order:
 *             self.logger().info(f"Failed to cancel order {client_order_id}. Order not found in tracked orders.")
 */
  if (unlikely(__pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 819, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_cur_scope->__pyx_v_self->_in_flight_limit_orders, __pyx_cur_scope->__pyx_v_client_order_id, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_order = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":820
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:
 *         order = self._in_flight_limit_orders.get(client_order_id)
 *         if not order:             # <<<<<<<<<<<<<<
 *             self.logger().info(f"Failed to cancel order {client_order_id}. Order not found in tracked orders.")
 *             return
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_order); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 820, __pyx_L1_error)
  __pyx_t_3 = ((!__pyx_t_2) != 0);
  if (__pyx_t_3) {

    /* "wings/market/radar_relay_market.pyx":821
 *         order = self._in_flight_limit_orders.get(client_order_id)
 *         if not order:
 *             self.logger().info(f"Failed to cancel order {client_order_id}. Order not found in tracked orders.")             # <<<<<<<<<<<<<<
 *             return
 *         return self._exchange.cancel_order(order.zero_ex_order)
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_logger); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_info); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = 0;
    __pyx_t_8 = 127;
    __Pyx_INCREF(__pyx_kp_u_Failed_to_cancel_order);
    __pyx_t_7 += 23;
    __Pyx_GIVEREF(__pyx_kp_u_Failed_to_cancel_order);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Failed_to_cancel_order);
    __pyx_t_6 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_client_order_id); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_8;
    __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u_Order_not_found_in_tracked_orde);
    __pyx_t_7 += 36;
    __Pyx_GIVEREF(__pyx_kp_u_Order_not_found_in_tracked_orde);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_Order_not_found_in_tracked_orde);
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "wings/market/radar_relay_market.pyx":822
 *         if not order:
 *             self.logger().info(f"Failed to cancel order {client_order_id}. Order not found in tracked orders.")
 *             return             # <<<<<<<<<<<<<<
 *         return self._exchange.cancel_order(order.zero_ex_order)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "wings/market/radar_relay_market.pyx":820
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:
 *         order = self._in_flight_limit_orders.get(client_order_id)
 *         if not order:             # <<<<<<<<<<<<<<
 *             self.logger().info(f"Failed to cancel order {client_order_id}. Order not found in tracked orders.")
 *             return
 */
  }

  /* "wings/market/radar_relay_market.pyx":823
 *             self.logger().info(f"Failed to cancel order {client_order_id}. Order not found in tracked orders.")
 *             return
 *         return self._exchange.cancel_order(order.zero_ex_order)             # <<<<<<<<<<<<<<
 * 
 *     cdef c_cancel(self, str symbol, str client_order_id):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_exchange, __pyx_n_s_cancel_order); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_order, __pyx_n_s_zero_ex_order); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = 0;
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":818
 *         return order_id
 * 
 *     async def cancel_order(self, client_order_id: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         order = self._in_flight_limit_orders.get(client_order_id)
 *         if not order:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cancel_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":825
 *         return self._exchange.cancel_order(order.zero_ex_order)
 * 
 *     cdef c_cancel(self, str symbol, str client_order_id):             # <<<<<<<<<<<<<<
 *         asyncio.ensure_future(self.cancel_order(client_order_id))
 * 
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_cancel(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_symbol, PyObject *__pyx_v_client_order_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("c_cancel", 0);

  /* "wings/market/radar_relay_market.pyx":826
 * 
 *     cdef c_cancel(self, str symbol, str client_order_id):
 *         asyncio.ensure_future(self.cancel_order(client_order_id))             # <<<<<<<<<<<<<<
 * 
 *     def get_all_balances(self) -> Dict[str, float]:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cancel_order); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_client_order_id) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_client_order_id);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":825
 *         return self._exchange.cancel_order(order.zero_ex_order)
 * 
 *     cdef c_cancel(self, str symbol, str client_order_id):             # <<<<<<<<<<<<<<
 *         asyncio.ensure_future(self.cancel_order(client_order_id))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_cancel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":828
 *         asyncio.ensure_future(self.cancel_order(client_order_id))
 * 
 *     def get_all_balances(self) -> Dict[str, float]:             # <<<<<<<<<<<<<<
 *         return self._account_balances.copy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_59get_all_balances(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_59get_all_balances(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_all_balances (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_58get_all_balances(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_58get_all_balances(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_all_balances", 0);

  /* "wings/market/radar_relay_market.pyx":829
 * 
 *     def get_all_balances(self) -> Dict[str, float]:
 *         return self._account_balances.copy()             # <<<<<<<<<<<<<<
 * 
 *     def get_balance(self, currency: str) -> float:
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->_account_balances == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "copy");
    __PYX_ERR(0, 829, __pyx_L1_error)
  }
  __pyx_t_1 = PyDict_Copy(__pyx_v_self->_account_balances); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":828
 *         asyncio.ensure_future(self.cancel_order(client_order_id))
 * 
 *     def get_all_balances(self) -> Dict[str, float]:             # <<<<<<<<<<<<<<
 *         return self._account_balances.copy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_all_balances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":831
 *         return self._account_balances.copy()
 * 
 *     def get_balance(self, currency: str) -> float:             # <<<<<<<<<<<<<<
 *         return self.c_get_balance(currency)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_61get_balance(PyObject *__pyx_v_self, PyObject *__pyx_v_currency); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_61get_balance(PyObject *__pyx_v_self, PyObject *__pyx_v_currency) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_balance (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_currency), (&PyUnicode_Type), 1, "currency", 1))) __PYX_ERR(0, 831, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_60get_balance(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject*)__pyx_v_currency));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_60get_balance(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_currency) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_balance", 0);

  /* "wings/market/radar_relay_market.pyx":832
 * 
 *     def get_balance(self, currency: str) -> float:
 *         return self.c_get_balance(currency)             # <<<<<<<<<<<<<<
 * 
 *     def get_price(self, symbol: str, is_buy: bool) -> float:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_get_balance(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_v_self), __pyx_v_currency); if (unlikely(__pyx_t_1 == ((double)-1.0) && PyErr_Occurred())) __PYX_ERR(0, 832, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":831
 *         return self._account_balances.copy()
 * 
 *     def get_balance(self, currency: str) -> float:             # <<<<<<<<<<<<<<
 *         return self.c_get_balance(currency)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_balance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":834
 *         return self.c_get_balance(currency)
 * 
 *     def get_price(self, symbol: str, is_buy: bool) -> float:             # <<<<<<<<<<<<<<
 *         return self.c_get_price(symbol, is_buy)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_63get_price(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_63get_price(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_symbol = 0;
  PyObject *__pyx_v_is_buy = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_price (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_symbol,&__pyx_n_s_is_buy,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_symbol)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_is_buy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_price", 1, 2, 2, 1); __PYX_ERR(0, 834, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_price") < 0)) __PYX_ERR(0, 834, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_symbol = ((PyObject*)values[0]);
    __pyx_v_is_buy = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_price", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 834, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_price", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbol), (&PyUnicode_Type), 1, "symbol", 1))) __PYX_ERR(0, 834, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_62get_price(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), __pyx_v_symbol, __pyx_v_is_buy);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_62get_price(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, PyObject *__pyx_v_is_buy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_price", 0);

  /* "wings/market/radar_relay_market.pyx":835
 * 
 *     def get_price(self, symbol: str, is_buy: bool) -> float:
 *         return self.c_get_price(symbol, is_buy)             # <<<<<<<<<<<<<<
 * 
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_is_buy); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 835, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_get_price(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_v_self), __pyx_v_symbol, __pyx_t_1); if (unlikely(__pyx_t_2 == ((double)-1.0) && PyErr_Occurred())) __PYX_ERR(0, 835, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 835, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":834
 *         return self.c_get_balance(currency)
 * 
 *     def get_price(self, symbol: str, is_buy: bool) -> float:             # <<<<<<<<<<<<<<
 *         return self.c_get_price(symbol, is_buy)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_price", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_66generator16(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":837
 *         return self.c_get_price(symbol, is_buy)
 * 
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"
 *         response_data = await self._api_request("get", url=url)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_65get_order(PyObject *__pyx_v_self, PyObject *__pyx_v_order_hash); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_65get_order(PyObject *__pyx_v_self, PyObject *__pyx_v_order_hash) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_order (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_order_hash), (&PyUnicode_Type), 1, "order_hash", 1))) __PYX_ERR(0, 837, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_64get_order(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject*)__pyx_v_order_hash));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_64get_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_hash) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_order", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 837, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_order_hash = __pyx_v_order_hash;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_order_hash);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_order_hash);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_66generator16, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_get_order, __pyx_n_s_RadarRelayMarket_get_order, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 837, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_66generator16(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_order", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L4_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 837, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":838
 * 
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"             # <<<<<<<<<<<<<<
 *         response_data = await self._api_request("get", url=url)
 *         return response_data
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u_orders_3);
  __pyx_t_2 += 8;
  __Pyx_GIVEREF(__pyx_kp_u_orders_3);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_orders_3);
  __pyx_t_5 = __Pyx_PyUnicode_Unicode(__pyx_cur_scope->__pyx_v_order_hash); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_cur_scope->__pyx_v_url = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "wings/market/radar_relay_market.pyx":839
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"
 *         response_data = await self._api_request("get", url=url)             # <<<<<<<<<<<<<<
 *         return response_data
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_api_request); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 839, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__26, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L4_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 839, __pyx_L1_error)
    __pyx_t_4 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_4);
  } else {
    __pyx_t_4 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_4) < 0) __PYX_ERR(0, 839, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_response_data = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "wings/market/radar_relay_market.pyx":840
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"
 *         response_data = await self._api_request("get", url=url)
 *         return response_data             # <<<<<<<<<<<<<<
 * 
 *     def get_tx_hash_receipt(self, tx_hash: str) -> Dict[str, any]:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_cur_scope->__pyx_v_response_data);
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":837
 *         return self.c_get_price(symbol, is_buy)
 * 
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"
 *         response_data = await self._api_request("get", url=url)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("get_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":842
 *         return response_data
 * 
 *     def get_tx_hash_receipt(self, tx_hash: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         return self._w3.eth.getTransactionReceipt(tx_hash)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_68get_tx_hash_receipt(PyObject *__pyx_v_self, PyObject *__pyx_v_tx_hash); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_68get_tx_hash_receipt(PyObject *__pyx_v_self, PyObject *__pyx_v_tx_hash) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_tx_hash_receipt (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tx_hash), (&PyUnicode_Type), 1, "tx_hash", 1))) __PYX_ERR(0, 842, __pyx_L1_error)
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_67get_tx_hash_receipt(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject*)__pyx_v_tx_hash));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_67get_tx_hash_receipt(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_tx_hash) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_tx_hash_receipt", 0);

  /* "wings/market/radar_relay_market.pyx":843
 * 
 *     def get_tx_hash_receipt(self, tx_hash: str) -> Dict[str, any]:
 *         return self._w3.eth.getTransactionReceipt(tx_hash)             # <<<<<<<<<<<<<<
 * 
 *     async def list_account_orders(self) -> List[Dict[str, any]]:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_w3, __pyx_n_s_eth); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_getTransactionReceipt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_tx_hash) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_tx_hash);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":842
 *         return response_data
 * 
 *     def get_tx_hash_receipt(self, tx_hash: str) -> Dict[str, any]:             # <<<<<<<<<<<<<<
 *         return self._w3.eth.getTransactionReceipt(tx_hash)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.get_tx_hash_receipt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_71generator17(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "wings/market/radar_relay_market.pyx":845
 *         return self._w3.eth.getTransactionReceipt(tx_hash)
 * 
 *     async def list_account_orders(self) -> List[Dict[str, any]]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/accounts/{self._wallet.address}/orders"
 *         response_data = await self._api_request("get", url=url)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_70list_account_orders(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_70list_account_orders(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_account_orders (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_69list_account_orders(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_69list_account_orders(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_account_orders", 0);
  __pyx_cur_scope = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *)__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders(__pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 845, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Coroutine_New((__pyx_coroutine_body_t) __pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_71generator17, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_list_account_orders, __pyx_n_s_RadarRelayMarket_list_account_or, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!gen)) __PYX_ERR(0, 845, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.list_account_orders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5wings_6market_18radar_relay_market_16RadarRelayMarket_71generator17(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *__pyx_cur_scope = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_account_orders", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L4_resume_from_await;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 845, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":846
 * 
 *     async def list_account_orders(self) -> List[Dict[str, any]]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/accounts/{self._wallet.address}/orders"             # <<<<<<<<<<<<<<
 *         response_data = await self._api_request("get", url=url)
 *         return response_data
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u_accounts);
  __pyx_t_2 += 10;
  __Pyx_GIVEREF(__pyx_kp_u_accounts);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_accounts);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_wallet, __pyx_n_s_address); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_orders_2);
  __pyx_t_2 += 7;
  __Pyx_GIVEREF(__pyx_kp_u_orders_2);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u_orders_2);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_url = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "wings/market/radar_relay_market.pyx":847
 *     async def list_account_orders(self) -> List[Dict[str, any]]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/accounts/{self._wallet.address}/orders"
 *         response_data = await self._api_request("get", url=url)             # <<<<<<<<<<<<<<
 *         return response_data
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_api_request); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_url, __pyx_cur_scope->__pyx_v_url) < 0) __PYX_ERR(0, 847, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__26, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __Pyx_Coroutine_Yield_From(__pyx_generator, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_XGOTREF(__pyx_r);
  if (likely(__pyx_r)) {
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, awaiting value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L4_resume_from_await:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 847, __pyx_L1_error)
    __pyx_t_5 = __pyx_sent_value; __Pyx_INCREF(__pyx_t_5);
  } else {
    __pyx_t_5 = NULL;
    if (__Pyx_PyGen_FetchStopIterationValue(&__pyx_t_5) < 0) __PYX_ERR(0, 847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  }
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_cur_scope->__pyx_v_response_data = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "wings/market/radar_relay_market.pyx":848
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/accounts/{self._wallet.address}/orders"
 *         response_data = await self._api_request("get", url=url)
 *         return response_data             # <<<<<<<<<<<<<<
 * 
 *     def wrap_eth(self, amount: float) -> str:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = NULL; __Pyx_ReturnWithStopIteration(__pyx_cur_scope->__pyx_v_response_data);
  goto __pyx_L0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "wings/market/radar_relay_market.pyx":845
 *         return self._w3.eth.getTransactionReceipt(tx_hash)
 * 
 *     async def list_account_orders(self) -> List[Dict[str, any]]:             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/accounts/{self._wallet.address}/orders"
 *         response_data = await self._api_request("get", url=url)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("list_account_orders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":850
 *         return response_data
 * 
 *     def wrap_eth(self, amount: float) -> str:             # <<<<<<<<<<<<<<
 *         return self._wallet.wrap_eth(amount)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_73wrap_eth(PyObject *__pyx_v_self, PyObject *__pyx_arg_amount); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_73wrap_eth(PyObject *__pyx_v_self, PyObject *__pyx_arg_amount) {
  double __pyx_v_amount;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("wrap_eth (wrapper)", 0);
  assert(__pyx_arg_amount); {
    __pyx_v_amount = __pyx_PyFloat_AsDouble(__pyx_arg_amount); if (unlikely((__pyx_v_amount == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 850, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.wrap_eth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_72wrap_eth(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((double)__pyx_v_amount));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_72wrap_eth(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_amount) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("wrap_eth", 0);

  /* "wings/market/radar_relay_market.pyx":851
 * 
 *     def wrap_eth(self, amount: float) -> str:
 *         return self._wallet.wrap_eth(amount)             # <<<<<<<<<<<<<<
 * 
 *     def unwrap_eth(self, amount: float) -> str:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_wallet, __pyx_n_s_wrap_eth); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_amount); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 851, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":850
 *         return response_data
 * 
 *     def wrap_eth(self, amount: float) -> str:             # <<<<<<<<<<<<<<
 *         return self._wallet.wrap_eth(amount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.wrap_eth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":853
 *         return self._wallet.wrap_eth(amount)
 * 
 *     def unwrap_eth(self, amount: float) -> str:             # <<<<<<<<<<<<<<
 *         return self._wallet.unwrap_eth(amount)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_75unwrap_eth(PyObject *__pyx_v_self, PyObject *__pyx_arg_amount); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_75unwrap_eth(PyObject *__pyx_v_self, PyObject *__pyx_arg_amount) {
  double __pyx_v_amount;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unwrap_eth (wrapper)", 0);
  assert(__pyx_arg_amount); {
    __pyx_v_amount = __pyx_PyFloat_AsDouble(__pyx_arg_amount); if (unlikely((__pyx_v_amount == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.unwrap_eth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_74unwrap_eth(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((double)__pyx_v_amount));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_74unwrap_eth(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_amount) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("unwrap_eth", 0);

  /* "wings/market/radar_relay_market.pyx":854
 * 
 *     def unwrap_eth(self, amount: float) -> str:
 *         return self._wallet.unwrap_eth(amount)             # <<<<<<<<<<<<<<
 * 
 *     cdef double c_get_balance(self, str currency) except? -1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_wallet, __pyx_n_s_unwrap_eth); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_amount); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 854, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":853
 *         return self._wallet.wrap_eth(amount)
 * 
 *     def unwrap_eth(self, amount: float) -> str:             # <<<<<<<<<<<<<<
 *         return self._wallet.unwrap_eth(amount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.unwrap_eth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":856
 *         return self._wallet.unwrap_eth(amount)
 * 
 *     cdef double c_get_balance(self, str currency) except? -1:             # <<<<<<<<<<<<<<
 *         return float(self._account_balances.get(currency, 0.0))
 * 
 */

static double __pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_balance(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_currency) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("c_get_balance", 0);

  /* "wings/market/radar_relay_market.pyx":857
 * 
 *     cdef double c_get_balance(self, str currency) except? -1:
 *         return float(self._account_balances.get(currency, 0.0))             # <<<<<<<<<<<<<<
 * 
 *     cdef OrderBook c_get_order_book(self, str symbol):
 */
  if (unlikely(__pyx_v_self->_account_balances == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 857, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->_account_balances, __pyx_v_currency, __pyx_float_0_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_AsDouble(__pyx_t_1); if (unlikely(__pyx_t_2 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 857, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":856
 *         return self._wallet.unwrap_eth(amount)
 * 
 *     cdef double c_get_balance(self, str currency) except? -1:             # <<<<<<<<<<<<<<
 *         return float(self._account_balances.get(currency, 0.0))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_get_balance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1.0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":859
 *         return float(self._account_balances.get(currency, 0.0))
 * 
 *     cdef OrderBook c_get_order_book(self, str symbol):             # <<<<<<<<<<<<<<
 *         cdef:
 *             dict order_books = self._order_book_tracker.order_books
 */

static struct __pyx_obj_5wings_10order_book_OrderBook *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_book(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol) {
  PyObject *__pyx_v_order_books = 0;
  struct __pyx_obj_5wings_10order_book_OrderBook *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_UCS4 __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("c_get_order_book", 0);

  /* "wings/market/radar_relay_market.pyx":861
 *     cdef OrderBook c_get_order_book(self, str symbol):
 *         cdef:
 *             dict order_books = self._order_book_tracker.order_books             # <<<<<<<<<<<<<<
 * 
 *         if symbol not in order_books:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_order_book_tracker, __pyx_n_s_order_books); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 861, __pyx_L1_error)
  __pyx_v_order_books = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":863
 *             dict order_books = self._order_book_tracker.order_books
 * 
 *         if symbol not in order_books:             # <<<<<<<<<<<<<<
 *             raise ValueError(f"No order book exists for '{symbol}'.")
 *         return order_books[symbol]
 */
  if (unlikely(__pyx_v_order_books == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 863, __pyx_L1_error)
  }
  __pyx_t_2 = (__Pyx_PyDict_ContainsTF(__pyx_v_symbol, __pyx_v_order_books, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 863, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (unlikely(__pyx_t_3)) {

    /* "wings/market/radar_relay_market.pyx":864
 * 
 *         if symbol not in order_books:
 *             raise ValueError(f"No order book exists for '{symbol}'.")             # <<<<<<<<<<<<<<
 *         return order_books[symbol]
 * 
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = 0;
    __pyx_t_5 = 127;
    __Pyx_INCREF(__pyx_kp_u_No_order_book_exists_for);
    __pyx_t_4 += 26;
    __Pyx_GIVEREF(__pyx_kp_u_No_order_book_exists_for);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_No_order_book_exists_for);
    __pyx_t_6 = __Pyx_PyUnicode_Unicode(__pyx_v_symbol); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_5;
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__27);
    __pyx_t_4 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__27);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__27);
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 864, __pyx_L1_error)

    /* "wings/market/radar_relay_market.pyx":863
 *             dict order_books = self._order_book_tracker.order_books
 * 
 *         if symbol not in order_books:             # <<<<<<<<<<<<<<
 *             raise ValueError(f"No order book exists for '{symbol}'.")
 *         return order_books[symbol]
 */
  }

  /* "wings/market/radar_relay_market.pyx":865
 *         if symbol not in order_books:
 *             raise ValueError(f"No order book exists for '{symbol}'.")
 *         return order_books[symbol]             # <<<<<<<<<<<<<<
 * 
 *     cdef double c_get_price(self, str symbol, bint is_buy) except? -1:
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (unlikely(__pyx_v_order_books == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 865, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_order_books, __pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5wings_10order_book_OrderBook))))) __PYX_ERR(0, 865, __pyx_L1_error)
  __pyx_r = ((struct __pyx_obj_5wings_10order_book_OrderBook *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":859
 *         return float(self._account_balances.get(currency, 0.0))
 * 
 *     cdef OrderBook c_get_order_book(self, str symbol):             # <<<<<<<<<<<<<<
 *         cdef:
 *             dict order_books = self._order_book_tracker.order_books
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_get_order_book", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_order_books);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":867
 *         return order_books[symbol]
 * 
 *     cdef double c_get_price(self, str symbol, bint is_buy) except? -1:             # <<<<<<<<<<<<<<
 *         cdef:
 *             OrderBook order_book = self.c_get_order_book(symbol)
 */

static double __pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_price(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, int __pyx_v_is_buy) {
  struct __pyx_obj_5wings_10order_book_OrderBook *__pyx_v_order_book = 0;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("c_get_price", 0);

  /* "wings/market/radar_relay_market.pyx":869
 *     cdef double c_get_price(self, str symbol, bint is_buy) except? -1:
 *         cdef:
 *             OrderBook order_book = self.c_get_order_book(symbol)             # <<<<<<<<<<<<<<
 * 
 *         return order_book.c_get_price(is_buy)
 */
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_get_order_book(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_v_self), __pyx_v_symbol)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_order_book = ((struct __pyx_obj_5wings_10order_book_OrderBook *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":871
 *             OrderBook order_book = self.c_get_order_book(symbol)
 * 
 *         return order_book.c_get_price(is_buy)             # <<<<<<<<<<<<<<
 * 
 *     cdef c_start(self, Clock clock, double timestamp):
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_5wings_10order_book_OrderBook *)__pyx_v_order_book->__pyx_base.__pyx_vtab)->c_get_price(__pyx_v_order_book, __pyx_v_is_buy); if (unlikely(__pyx_t_2 == ((double)-1.0) && PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L1_error)
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":867
 *         return order_books[symbol]
 * 
 *     cdef double c_get_price(self, str symbol, bint is_buy) except? -1:             # <<<<<<<<<<<<<<
 *         cdef:
 *             OrderBook order_book = self.c_get_order_book(symbol)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_get_price", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1.0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_order_book);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":873
 *         return order_book.c_get_price(is_buy)
 * 
 *     cdef c_start(self, Clock clock, double timestamp):             # <<<<<<<<<<<<<<
 *         MarketBase.c_start(self, clock, timestamp)
 *         self._order_tracker_task = asyncio.ensure_future(self._order_book_tracker.start())
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, struct __pyx_obj_5wings_5clock_Clock *__pyx_v_clock, double __pyx_v_timestamp) {
  PyObject *__pyx_v_tx_hashes = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("c_start", 0);

  /* "wings/market/radar_relay_market.pyx":874
 * 
 *     cdef c_start(self, Clock clock, double timestamp):
 *         MarketBase.c_start(self, clock, timestamp)             # <<<<<<<<<<<<<<
 *         self._order_tracker_task = asyncio.ensure_future(self._order_book_tracker.start())
 *         self._status_polling_task = asyncio.ensure_future(self._status_polling_loop())
 */
  __pyx_t_1 = __pyx_vtabptr_5wings_6market_11market_base_MarketBase->__pyx_base.c_start(((struct __pyx_obj_5wings_13time_iterator_TimeIterator *)__pyx_v_self), __pyx_v_clock, __pyx_v_timestamp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":875
 *     cdef c_start(self, Clock clock, double timestamp):
 *         MarketBase.c_start(self, clock, timestamp)
 *         self._order_tracker_task = asyncio.ensure_future(self._order_book_tracker.start())             # <<<<<<<<<<<<<<
 *         self._status_polling_task = asyncio.ensure_future(self._status_polling_loop())
 *         self._coro_scheduler_task = asyncio.ensure_future(self.coro_scheduler(self._coro_queue))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_order_book_tracker, __pyx_n_s_start); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_order_tracker_task);
  __Pyx_DECREF(__pyx_v_self->_order_tracker_task);
  __pyx_v_self->_order_tracker_task = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":876
 *         MarketBase.c_start(self, clock, timestamp)
 *         self._order_tracker_task = asyncio.ensure_future(self._order_book_tracker.start())
 *         self._status_polling_task = asyncio.ensure_future(self._status_polling_loop())             # <<<<<<<<<<<<<<
 *         self._coro_scheduler_task = asyncio.ensure_future(self.coro_scheduler(self._coro_queue))
 *         tx_hashes = self.wallet.current_backend.check_and_fix_approval_amounts(
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_status_polling_loop); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_status_polling_task);
  __Pyx_DECREF(__pyx_v_self->_status_polling_task);
  __pyx_v_self->_status_polling_task = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":877
 *         self._order_tracker_task = asyncio.ensure_future(self._order_book_tracker.start())
 *         self._status_polling_task = asyncio.ensure_future(self._status_polling_loop())
 *         self._coro_scheduler_task = asyncio.ensure_future(self.coro_scheduler(self._coro_queue))             # <<<<<<<<<<<<<<
 *         tx_hashes = self.wallet.current_backend.check_and_fix_approval_amounts(
 *             spender=self._wallet_spender_address)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_coro_scheduler); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_self->_coro_queue) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_self->_coro_queue);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_coro_scheduler_task);
  __Pyx_DECREF(__pyx_v_self->_coro_scheduler_task);
  __pyx_v_self->_coro_scheduler_task = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":878
 *         self._status_polling_task = asyncio.ensure_future(self._status_polling_loop())
 *         self._coro_scheduler_task = asyncio.ensure_future(self.coro_scheduler(self._coro_queue))
 *         tx_hashes = self.wallet.current_backend.check_and_fix_approval_amounts(             # <<<<<<<<<<<<<<
 *             spender=self._wallet_spender_address)
 *         self._pending_approval_tx_hashes.update(tx_hashes)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_wallet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_current_backend); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_and_fix_approval_amounts); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "wings/market/radar_relay_market.pyx":879
 *         self._coro_scheduler_task = asyncio.ensure_future(self.coro_scheduler(self._coro_queue))
 *         tx_hashes = self.wallet.current_backend.check_and_fix_approval_amounts(
 *             spender=self._wallet_spender_address)             # <<<<<<<<<<<<<<
 *         self._pending_approval_tx_hashes.update(tx_hashes)
 *         self._approval_tx_polling_task = asyncio.ensure_future(self._approval_tx_polling_loop())
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_spender, __pyx_v_self->_wallet_spender_address) < 0) __PYX_ERR(0, 879, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":878
 *         self._status_polling_task = asyncio.ensure_future(self._status_polling_loop())
 *         self._coro_scheduler_task = asyncio.ensure_future(self.coro_scheduler(self._coro_queue))
 *         tx_hashes = self.wallet.current_backend.check_and_fix_approval_amounts(             # <<<<<<<<<<<<<<
 *             spender=self._wallet_spender_address)
 *         self._pending_approval_tx_hashes.update(tx_hashes)
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_tx_hashes = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":880
 *         tx_hashes = self.wallet.current_backend.check_and_fix_approval_amounts(
 *             spender=self._wallet_spender_address)
 *         self._pending_approval_tx_hashes.update(tx_hashes)             # <<<<<<<<<<<<<<
 *         self._approval_tx_polling_task = asyncio.ensure_future(self._approval_tx_polling_loop())
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_pending_approval_tx_hashes, __pyx_n_s_update); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_tx_hashes) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_tx_hashes);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":881
 *             spender=self._wallet_spender_address)
 *         self._pending_approval_tx_hashes.update(tx_hashes)
 *         self._approval_tx_polling_task = asyncio.ensure_future(self._approval_tx_polling_loop())             # <<<<<<<<<<<<<<
 * 
 *     cdef c_tick(self, double timestamp):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_asyncio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ensure_future); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_approval_tx_polling_loop); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_approval_tx_polling_task);
  __Pyx_DECREF(__pyx_v_self->_approval_tx_polling_task);
  __pyx_v_self->_approval_tx_polling_task = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":873
 *         return order_book.c_get_price(is_buy)
 * 
 *     cdef c_start(self, Clock clock, double timestamp):             # <<<<<<<<<<<<<<
 *         MarketBase.c_start(self, clock, timestamp)
 *         self._order_tracker_task = asyncio.ensure_future(self._order_book_tracker.start())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_start", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tx_hashes);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":883
 *         self._approval_tx_polling_task = asyncio.ensure_future(self._approval_tx_polling_loop())
 * 
 *     cdef c_tick(self, double timestamp):             # <<<<<<<<<<<<<<
 *         cdef:
 *             int64_t last_tick = <int64_t>(self._last_timestamp / self._poll_interval)
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_tick(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, double __pyx_v_timestamp) {
  int64_t __pyx_v_last_tick;
  int64_t __pyx_v_current_tick;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("c_tick", 0);

  /* "wings/market/radar_relay_market.pyx":885
 *     cdef c_tick(self, double timestamp):
 *         cdef:
 *             int64_t last_tick = <int64_t>(self._last_timestamp / self._poll_interval)             # <<<<<<<<<<<<<<
 *             int64_t current_tick = <int64_t>(timestamp / self._poll_interval)
 * 
 */
  if (unlikely(__pyx_v_self->_poll_interval == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 885, __pyx_L1_error)
  }
  __pyx_v_last_tick = ((int64_t)(__pyx_v_self->_last_timestamp / __pyx_v_self->_poll_interval));

  /* "wings/market/radar_relay_market.pyx":886
 *         cdef:
 *             int64_t last_tick = <int64_t>(self._last_timestamp / self._poll_interval)
 *             int64_t current_tick = <int64_t>(timestamp / self._poll_interval)             # <<<<<<<<<<<<<<
 * 
 *         self._tx_tracker.c_tick(timestamp)
 */
  if (unlikely(__pyx_v_self->_poll_interval == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 886, __pyx_L1_error)
  }
  __pyx_v_current_tick = ((int64_t)(__pyx_v_timestamp / __pyx_v_self->_poll_interval));

  /* "wings/market/radar_relay_market.pyx":888
 *             int64_t current_tick = <int64_t>(timestamp / self._poll_interval)
 * 
 *         self._tx_tracker.c_tick(timestamp)             # <<<<<<<<<<<<<<
 *         MarketBase.c_tick(self, timestamp)
 *         if current_tick > last_tick:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_19transaction_tracker_TransactionTracker *)__pyx_v_self->_tx_tracker->__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.c_tick(((struct __pyx_obj_5wings_13time_iterator_TimeIterator *)__pyx_v_self->_tx_tracker), __pyx_v_timestamp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":889
 * 
 *         self._tx_tracker.c_tick(timestamp)
 *         MarketBase.c_tick(self, timestamp)             # <<<<<<<<<<<<<<
 *         if current_tick > last_tick:
 *             if not self._poll_notifier.is_set():
 */
  __pyx_t_1 = __pyx_vtabptr_5wings_6market_11market_base_MarketBase->__pyx_base.c_tick(((struct __pyx_obj_5wings_13time_iterator_TimeIterator *)__pyx_v_self), __pyx_v_timestamp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 889, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":890
 *         self._tx_tracker.c_tick(timestamp)
 *         MarketBase.c_tick(self, timestamp)
 *         if current_tick > last_tick:             # <<<<<<<<<<<<<<
 *             if not self._poll_notifier.is_set():
 *                 self._poll_notifier.set()
 */
  __pyx_t_2 = ((__pyx_v_current_tick > __pyx_v_last_tick) != 0);
  if (__pyx_t_2) {

    /* "wings/market/radar_relay_market.pyx":891
 *         MarketBase.c_tick(self, timestamp)
 *         if current_tick > last_tick:
 *             if not self._poll_notifier.is_set():             # <<<<<<<<<<<<<<
 *                 self._poll_notifier.set()
 *         self.c_check_and_remove_expired_orders()
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_poll_notifier, __pyx_n_s_is_set); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 891, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = ((!__pyx_t_2) != 0);
    if (__pyx_t_5) {

      /* "wings/market/radar_relay_market.pyx":892
 *         if current_tick > last_tick:
 *             if not self._poll_notifier.is_set():
 *                 self._poll_notifier.set()             # <<<<<<<<<<<<<<
 *         self.c_check_and_remove_expired_orders()
 *         self._last_timestamp = timestamp
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_poll_notifier, __pyx_n_s_set); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 892, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "wings/market/radar_relay_market.pyx":891
 *         MarketBase.c_tick(self, timestamp)
 *         if current_tick > last_tick:
 *             if not self._poll_notifier.is_set():             # <<<<<<<<<<<<<<
 *                 self._poll_notifier.set()
 *         self.c_check_and_remove_expired_orders()
 */
    }

    /* "wings/market/radar_relay_market.pyx":890
 *         self._tx_tracker.c_tick(timestamp)
 *         MarketBase.c_tick(self, timestamp)
 *         if current_tick > last_tick:             # <<<<<<<<<<<<<<
 *             if not self._poll_notifier.is_set():
 *                 self._poll_notifier.set()
 */
  }

  /* "wings/market/radar_relay_market.pyx":893
 *             if not self._poll_notifier.is_set():
 *                 self._poll_notifier.set()
 *         self.c_check_and_remove_expired_orders()             # <<<<<<<<<<<<<<
 *         self._last_timestamp = timestamp
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_check_and_remove_expired_orders(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":894
 *                 self._poll_notifier.set()
 *         self.c_check_and_remove_expired_orders()
 *         self._last_timestamp = timestamp             # <<<<<<<<<<<<<<
 * 
 *     cdef c_start_tracking_limit_order(self,
 */
  __pyx_v_self->_last_timestamp = __pyx_v_timestamp;

  /* "wings/market/radar_relay_market.pyx":883
 *         self._approval_tx_polling_task = asyncio.ensure_future(self._approval_tx_polling_loop())
 * 
 *     cdef c_tick(self, double timestamp):             # <<<<<<<<<<<<<<
 *         cdef:
 *             int64_t last_tick = <int64_t>(self._last_timestamp / self._poll_interval)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_tick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":896
 *         self._last_timestamp = timestamp
 * 
 *     cdef c_start_tracking_limit_order(self,             # <<<<<<<<<<<<<<
 *                                       str order_id,
 *                                       str exchange_order_id,
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start_tracking_limit_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id, PyObject *__pyx_v_exchange_order_id, PyObject *__pyx_v_symbol, int __pyx_v_is_buy, PyObject *__pyx_v_order_type, PyObject *__pyx_v_amount, PyObject *__pyx_v_price, CYTHON_UNUSED int __pyx_v_expires, PyObject *__pyx_v_zero_ex_order) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("c_start_tracking_limit_order", 0);

  /* "wings/market/radar_relay_market.pyx":907
 *                                       object zero_ex_order):
 *         self._in_flight_limit_orders[order_id] = InFlightOrder(
 *             client_order_id=order_id,             # <<<<<<<<<<<<<<
 *             exchange_order_id=exchange_order_id,
 *             tx_hash=None,
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_client_order_id, __pyx_v_order_id) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":908
 *         self._in_flight_limit_orders[order_id] = InFlightOrder(
 *             client_order_id=order_id,
 *             exchange_order_id=exchange_order_id,             # <<<<<<<<<<<<<<
 *             tx_hash=None,
 *             symbol=symbol,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_exchange_order_id, __pyx_v_exchange_order_id) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":909
 *             client_order_id=order_id,
 *             exchange_order_id=exchange_order_id,
 *             tx_hash=None,             # <<<<<<<<<<<<<<
 *             symbol=symbol,
 *             is_buy=is_buy,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_tx_hash, Py_None) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":910
 *             exchange_order_id=exchange_order_id,
 *             tx_hash=None,
 *             symbol=symbol,             # <<<<<<<<<<<<<<
 *             is_buy=is_buy,
 *             order_type=order_type,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_symbol, __pyx_v_symbol) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":911
 *             tx_hash=None,
 *             symbol=symbol,
 *             is_buy=is_buy,             # <<<<<<<<<<<<<<
 *             order_type=order_type,
 *             amount=amount,
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_is_buy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 911, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_is_buy, __pyx_t_2) < 0) __PYX_ERR(0, 907, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":912
 *             symbol=symbol,
 *             is_buy=is_buy,
 *             order_type=order_type,             # <<<<<<<<<<<<<<
 *             amount=amount,
 *             price=price,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_order_type, __pyx_v_order_type) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":913
 *             is_buy=is_buy,
 *             order_type=order_type,
 *             amount=amount,             # <<<<<<<<<<<<<<
 *             price=price,
 *             zero_ex_order=zero_ex_order
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_amount, __pyx_v_amount) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":914
 *             order_type=order_type,
 *             amount=amount,
 *             price=price,             # <<<<<<<<<<<<<<
 *             zero_ex_order=zero_ex_order
 *         )
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_price, __pyx_v_price) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":915
 *             amount=amount,
 *             price=price,
 *             zero_ex_order=zero_ex_order             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_zero_ex_order, __pyx_v_zero_ex_order) < 0) __PYX_ERR(0, 907, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":906
 *                                       int expires,
 *                                       object zero_ex_order):
 *         self._in_flight_limit_orders[order_id] = InFlightOrder(             # <<<<<<<<<<<<<<
 *             client_order_id=order_id,
 *             exchange_order_id=exchange_order_id,
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_InFlightOrder), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 906, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_v_self->_in_flight_limit_orders == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 906, __pyx_L1_error)
  }
  if (unlikely(PyDict_SetItem(__pyx_v_self->_in_flight_limit_orders, __pyx_v_order_id, __pyx_t_2) < 0)) __PYX_ERR(0, 906, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":896
 *         self._last_timestamp = timestamp
 * 
 *     cdef c_start_tracking_limit_order(self,             # <<<<<<<<<<<<<<
 *                                       str order_id,
 *                                       str exchange_order_id,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_start_tracking_limit_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":918
 *         )
 * 
 *     cdef c_start_tracking_market_order(self,             # <<<<<<<<<<<<<<
 *                                        str order_id,
 *                                        str tx_hash,
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start_tracking_market_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id, PyObject *__pyx_v_tx_hash, PyObject *__pyx_v_symbol, int __pyx_v_is_buy, PyObject *__pyx_v_order_type, PyObject *__pyx_v_amount, PyObject *__pyx_v_price) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("c_start_tracking_market_order", 0);

  /* "wings/market/radar_relay_market.pyx":927
 *                                        object price):
 *         self._in_flight_market_orders[tx_hash] = InFlightOrder(
 *             client_order_id=order_id,             # <<<<<<<<<<<<<<
 *             exchange_order_id=None,
 *             tx_hash=tx_hash,
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_client_order_id, __pyx_v_order_id) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":928
 *         self._in_flight_market_orders[tx_hash] = InFlightOrder(
 *             client_order_id=order_id,
 *             exchange_order_id=None,             # <<<<<<<<<<<<<<
 *             tx_hash=tx_hash,
 *             symbol=symbol,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_exchange_order_id, Py_None) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":929
 *             client_order_id=order_id,
 *             exchange_order_id=None,
 *             tx_hash=tx_hash,             # <<<<<<<<<<<<<<
 *             symbol=symbol,
 *             is_buy=is_buy,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_tx_hash, __pyx_v_tx_hash) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":930
 *             exchange_order_id=None,
 *             tx_hash=tx_hash,
 *             symbol=symbol,             # <<<<<<<<<<<<<<
 *             is_buy=is_buy,
 *             order_type=order_type,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_symbol, __pyx_v_symbol) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":931
 *             tx_hash=tx_hash,
 *             symbol=symbol,
 *             is_buy=is_buy,             # <<<<<<<<<<<<<<
 *             order_type=order_type,
 *             amount=amount,
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_is_buy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_is_buy, __pyx_t_2) < 0) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":932
 *             symbol=symbol,
 *             is_buy=is_buy,
 *             order_type=order_type,             # <<<<<<<<<<<<<<
 *             amount=amount,
 *             price=price
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_order_type, __pyx_v_order_type) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":933
 *             is_buy=is_buy,
 *             order_type=order_type,
 *             amount=amount,             # <<<<<<<<<<<<<<
 *             price=price
 *         )
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_amount, __pyx_v_amount) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":934
 *             order_type=order_type,
 *             amount=amount,
 *             price=price             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_price, __pyx_v_price) < 0) __PYX_ERR(0, 927, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":926
 *                                        object amount,
 *                                        object price):
 *         self._in_flight_market_orders[tx_hash] = InFlightOrder(             # <<<<<<<<<<<<<<
 *             client_order_id=order_id,
 *             exchange_order_id=None,
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_InFlightOrder), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_v_self->_in_flight_market_orders == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 926, __pyx_L1_error)
  }
  if (unlikely(PyDict_SetItem(__pyx_v_self->_in_flight_market_orders, __pyx_v_tx_hash, __pyx_t_2) < 0)) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":918
 *         )
 * 
 *     cdef c_start_tracking_market_order(self,             # <<<<<<<<<<<<<<
 *                                        str order_id,
 *                                        str tx_hash,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_start_tracking_market_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":937
 *         )
 * 
 *     cdef c_expire_order(self, str order_id):             # <<<<<<<<<<<<<<
 *         self._order_expiry_queue.append((self._current_timestamp + self.ORDER_EXPIRY_TIME, order_id))
 * 
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_expire_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("c_expire_order", 0);

  /* "wings/market/radar_relay_market.pyx":938
 * 
 *     cdef c_expire_order(self, str order_id):
 *         self._order_expiry_queue.append((self._current_timestamp + self.ORDER_EXPIRY_TIME, order_id))             # <<<<<<<<<<<<<<
 * 
 *     cdef c_check_and_remove_expired_orders(self):
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.__pyx_base._current_timestamp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_ORDER_EXPIRY_TIME); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_order_id);
  __Pyx_GIVEREF(__pyx_v_order_id);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_order_id);
  __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_Append(__pyx_v_self->_order_expiry_queue, __pyx_t_2); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":937
 *         )
 * 
 *     cdef c_expire_order(self, str order_id):             # <<<<<<<<<<<<<<
 *         self._order_expiry_queue.append((self._current_timestamp + self.ORDER_EXPIRY_TIME, order_id))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_expire_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":940
 *         self._order_expiry_queue.append((self._current_timestamp + self.ORDER_EXPIRY_TIME, order_id))
 * 
 *     cdef c_check_and_remove_expired_orders(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_check_and_remove_expired_orders(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  double __pyx_v_current_timestamp;
  PyObject *__pyx_v_order_id = 0;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  __Pyx_RefNannySetupContext("c_check_and_remove_expired_orders", 0);

  /* "wings/market/radar_relay_market.pyx":942
 *     cdef c_check_and_remove_expired_orders(self):
 *         cdef:
 *             double current_timestamp = self._current_timestamp             # <<<<<<<<<<<<<<
 *             str order_id
 * 
 */
  __pyx_t_1 = __pyx_v_self->__pyx_base.__pyx_base._current_timestamp;
  __pyx_v_current_timestamp = __pyx_t_1;

  /* "wings/market/radar_relay_market.pyx":945
 *             str order_id
 * 
 *         while len(self._order_expiry_queue) > 0 and self._order_expiry_queue[0][0] < current_timestamp:             # <<<<<<<<<<<<<<
 *             _, order_id = self._order_expiry_queue.popleft()
 *             self.c_stop_tracking_order(order_id)
 */
  while (1) {
    __pyx_t_3 = __pyx_v_self->_order_expiry_queue;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = ((__pyx_t_4 > 0) != 0);
    if (__pyx_t_5) {
    } else {
      __pyx_t_2 = __pyx_t_5;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_self->_order_expiry_queue, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_current_timestamp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyObject_RichCompare(__pyx_t_6, __pyx_t_3, Py_LT); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_2 = __pyx_t_5;
    __pyx_L5_bool_binop_done:;
    if (!__pyx_t_2) break;

    /* "wings/market/radar_relay_market.pyx":946
 * 
 *         while len(self._order_expiry_queue) > 0 and self._order_expiry_queue[0][0] < current_timestamp:
 *             _, order_id = self._order_expiry_queue.popleft()             # <<<<<<<<<<<<<<
 *             self.c_stop_tracking_order(order_id)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_order_expiry_queue, __pyx_n_s_popleft); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_7))) || (PyList_CheckExact(__pyx_t_7))) {
      PyObject* sequence = __pyx_t_7;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 946, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 946, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 946, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_8 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 946, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_3)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_6)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 2) < 0) __PYX_ERR(0, 946, __pyx_L1_error)
      __pyx_t_9 = NULL;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L8_unpacking_done;
      __pyx_L7_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 946, __pyx_L1_error)
      __pyx_L8_unpacking_done:;
    }
    if (!(likely(PyUnicode_CheckExact(__pyx_t_6))||((__pyx_t_6) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_6)->tp_name), 0))) __PYX_ERR(0, 946, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_order_id, ((PyObject*)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "wings/market/radar_relay_market.pyx":947
 *         while len(self._order_expiry_queue) > 0 and self._order_expiry_queue[0][0] < current_timestamp:
 *             _, order_id = self._order_expiry_queue.popleft()
 *             self.c_stop_tracking_order(order_id)             # <<<<<<<<<<<<<<
 * 
 *     cdef c_stop_tracking_order(self, str order_id):
 */
    __pyx_t_7 = ((struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->c_stop_tracking_order(__pyx_v_self, __pyx_v_order_id); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }

  /* "wings/market/radar_relay_market.pyx":940
 *         self._order_expiry_queue.append((self._current_timestamp + self.ORDER_EXPIRY_TIME, order_id))
 * 
 *     cdef c_check_and_remove_expired_orders(self):             # <<<<<<<<<<<<<<
 *         cdef:
 *             double current_timestamp = self._current_timestamp
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_check_and_remove_expired_orders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_order_id);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":949
 *             self.c_stop_tracking_order(order_id)
 * 
 *     cdef c_stop_tracking_order(self, str order_id):             # <<<<<<<<<<<<<<
 *         if order_id in self._in_flight_limit_orders:
 *             del self._in_flight_limit_orders[order_id]
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_stop_tracking_order(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_order_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("c_stop_tracking_order", 0);

  /* "wings/market/radar_relay_market.pyx":950
 * 
 *     cdef c_stop_tracking_order(self, str order_id):
 *         if order_id in self._in_flight_limit_orders:             # <<<<<<<<<<<<<<
 *             del self._in_flight_limit_orders[order_id]
 *         elif order_id in self._in_flight_market_orders:
 */
  if (unlikely(__pyx_v_self->_in_flight_limit_orders == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 950, __pyx_L1_error)
  }
  __pyx_t_1 = (__Pyx_PyDict_ContainsTF(__pyx_v_order_id, __pyx_v_self->_in_flight_limit_orders, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 950, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "wings/market/radar_relay_market.pyx":951
 *     cdef c_stop_tracking_order(self, str order_id):
 *         if order_id in self._in_flight_limit_orders:
 *             del self._in_flight_limit_orders[order_id]             # <<<<<<<<<<<<<<
 *         elif order_id in self._in_flight_market_orders:
 *             del self._in_flight_market_orders[order_id]
 */
    if (unlikely(__pyx_v_self->_in_flight_limit_orders == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 951, __pyx_L1_error)
    }
    if (unlikely(PyDict_DelItem(__pyx_v_self->_in_flight_limit_orders, __pyx_v_order_id) < 0)) __PYX_ERR(0, 951, __pyx_L1_error)

    /* "wings/market/radar_relay_market.pyx":950
 * 
 *     cdef c_stop_tracking_order(self, str order_id):
 *         if order_id in self._in_flight_limit_orders:             # <<<<<<<<<<<<<<
 *             del self._in_flight_limit_orders[order_id]
 *         elif order_id in self._in_flight_market_orders:
 */
    goto __pyx_L3;
  }

  /* "wings/market/radar_relay_market.pyx":952
 *         if order_id in self._in_flight_limit_orders:
 *             del self._in_flight_limit_orders[order_id]
 *         elif order_id in self._in_flight_market_orders:             # <<<<<<<<<<<<<<
 *             del self._in_flight_market_orders[order_id]
 * 
 */
  if (unlikely(__pyx_v_self->_in_flight_market_orders == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 952, __pyx_L1_error)
  }
  __pyx_t_2 = (__Pyx_PyDict_ContainsTF(__pyx_v_order_id, __pyx_v_self->_in_flight_market_orders, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 952, __pyx_L1_error)
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "wings/market/radar_relay_market.pyx":953
 *             del self._in_flight_limit_orders[order_id]
 *         elif order_id in self._in_flight_market_orders:
 *             del self._in_flight_market_orders[order_id]             # <<<<<<<<<<<<<<
 * 
 *     cdef object c_get_order_price_quantum(self, str symbol, double price):
 */
    if (unlikely(__pyx_v_self->_in_flight_market_orders == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 953, __pyx_L1_error)
    }
    if (unlikely(PyDict_DelItem(__pyx_v_self->_in_flight_market_orders, __pyx_v_order_id) < 0)) __PYX_ERR(0, 953, __pyx_L1_error)

    /* "wings/market/radar_relay_market.pyx":952
 *         if order_id in self._in_flight_limit_orders:
 *             del self._in_flight_limit_orders[order_id]
 *         elif order_id in self._in_flight_market_orders:             # <<<<<<<<<<<<<<
 *             del self._in_flight_market_orders[order_id]
 * 
 */
  }
  __pyx_L3:;

  /* "wings/market/radar_relay_market.pyx":949
 *             self.c_stop_tracking_order(order_id)
 * 
 *     cdef c_stop_tracking_order(self, str order_id):             # <<<<<<<<<<<<<<
 *         if order_id in self._in_flight_limit_orders:
 *             del self._in_flight_limit_orders[order_id]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_stop_tracking_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":955
 *             del self._in_flight_market_orders[order_id]
 * 
 *     cdef object c_get_order_price_quantum(self, str symbol, double price):             # <<<<<<<<<<<<<<
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_price_quantum(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_price) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_trading_rule = 0;
  PyObject *__pyx_v_decimals_quantum = NULL;
  PyObject *__pyx_v_precision_quantum = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("c_get_order_price_quantum", 0);

  /* "wings/market/radar_relay_market.pyx":957
 *     cdef object c_get_order_price_quantum(self, str symbol, double price):
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]             # <<<<<<<<<<<<<<
 *         decimals_quantum = Decimal(f"1e-{trading_rule.price_decimals}")
 *         if price > 0:
 */
  if (unlikely(__pyx_v_self->_trading_rules == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 957, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->_trading_rules, __pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 957, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5wings_6market_18radar_relay_market_TradingRule))))) __PYX_ERR(0, 957, __pyx_L1_error)
  __pyx_v_trading_rule = ((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":958
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *         decimals_quantum = Decimal(f"1e-{trading_rule.price_decimals}")             # <<<<<<<<<<<<<<
 *         if price > 0:
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(price)) - trading_rule.price_precision}")
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyUnicode_From_int(__pyx_v_trading_rule->price_decimals, 0, ' ', 'd'); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyUnicode_Concat(__pyx_kp_u_1e_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_decimals_quantum = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":959
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *         decimals_quantum = Decimal(f"1e-{trading_rule.price_decimals}")
 *         if price > 0:             # <<<<<<<<<<<<<<
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(price)) - trading_rule.price_precision}")
 *         else:
 */
  __pyx_t_5 = ((__pyx_v_price > 0.0) != 0);
  if (__pyx_t_5) {

    /* "wings/market/radar_relay_market.pyx":960
 *         decimals_quantum = Decimal(f"1e-{trading_rule.price_decimals}")
 *         if price > 0:
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(price)) - trading_rule.price_precision}")             # <<<<<<<<<<<<<<
 *         else:
 *             precision_quantum = s_decimal_0
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_math); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ceil); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_math); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_log10); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_price); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_trading_rule->price_precision); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyUnicode_Concat(__pyx_kp_u_1e, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_precision_quantum = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "wings/market/radar_relay_market.pyx":959
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *         decimals_quantum = Decimal(f"1e-{trading_rule.price_decimals}")
 *         if price > 0:             # <<<<<<<<<<<<<<
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(price)) - trading_rule.price_precision}")
 *         else:
 */
    goto __pyx_L3;
  }

  /* "wings/market/radar_relay_market.pyx":962
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(price)) - trading_rule.price_precision}")
 *         else:
 *             precision_quantum = s_decimal_0             # <<<<<<<<<<<<<<
 *         return max(decimals_quantum, precision_quantum)
 * 
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_precision_quantum = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "wings/market/radar_relay_market.pyx":963
 *         else:
 *             precision_quantum = s_decimal_0
 *         return max(decimals_quantum, precision_quantum)             # <<<<<<<<<<<<<<
 * 
 *     cdef object c_get_order_size_quantum(self, str symbol, double amount):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_precision_quantum);
  __pyx_t_1 = __pyx_v_precision_quantum;
  __Pyx_INCREF(__pyx_v_decimals_quantum);
  __pyx_t_2 = __pyx_v_decimals_quantum;
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 963, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 963, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_5) {
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_t_1;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = __pyx_t_2;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":955
 *             del self._in_flight_market_orders[order_id]
 * 
 *     cdef object c_get_order_price_quantum(self, str symbol, double price):             # <<<<<<<<<<<<<<
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_get_order_price_quantum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_trading_rule);
  __Pyx_XDECREF(__pyx_v_decimals_quantum);
  __Pyx_XDECREF(__pyx_v_precision_quantum);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":965
 *         return max(decimals_quantum, precision_quantum)
 * 
 *     cdef object c_get_order_size_quantum(self, str symbol, double amount):             # <<<<<<<<<<<<<<
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_size_quantum(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_trading_rule = 0;
  PyObject *__pyx_v_decimals_quantum = NULL;
  PyObject *__pyx_v_precision_quantum = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("c_get_order_size_quantum", 0);

  /* "wings/market/radar_relay_market.pyx":967
 *     cdef object c_get_order_size_quantum(self, str symbol, double amount):
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]             # <<<<<<<<<<<<<<
 *         decimals_quantum = Decimal(f"1e-{trading_rule.amount_decimals}")
 * 
 */
  if (unlikely(__pyx_v_self->_trading_rules == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 967, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->_trading_rules, __pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 967, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5wings_6market_18radar_relay_market_TradingRule))))) __PYX_ERR(0, 967, __pyx_L1_error)
  __pyx_v_trading_rule = ((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":968
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *         decimals_quantum = Decimal(f"1e-{trading_rule.amount_decimals}")             # <<<<<<<<<<<<<<
 * 
 *         if amount > 0:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyUnicode_From_int(__pyx_v_trading_rule->amount_decimals, 0, ' ', 'd'); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyUnicode_Concat(__pyx_kp_u_1e_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_decimals_quantum = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":970
 *         decimals_quantum = Decimal(f"1e-{trading_rule.amount_decimals}")
 * 
 *         if amount > 0:             # <<<<<<<<<<<<<<
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(amount)) - trading_rule.price_precision}")
 *         else:
 */
  __pyx_t_5 = ((__pyx_v_amount > 0.0) != 0);
  if (__pyx_t_5) {

    /* "wings/market/radar_relay_market.pyx":971
 * 
 *         if amount > 0:
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(amount)) - trading_rule.price_precision}")             # <<<<<<<<<<<<<<
 *         else:
 *             precision_quantum = s_decimal_0
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_math); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ceil); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_math); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_log10); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_amount); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_trading_rule->price_precision); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyUnicode_Concat(__pyx_kp_u_1e, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_precision_quantum = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "wings/market/radar_relay_market.pyx":970
 *         decimals_quantum = Decimal(f"1e-{trading_rule.amount_decimals}")
 * 
 *         if amount > 0:             # <<<<<<<<<<<<<<
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(amount)) - trading_rule.price_precision}")
 *         else:
 */
    goto __pyx_L3;
  }

  /* "wings/market/radar_relay_market.pyx":973
 *             precision_quantum = Decimal(f"1e{math.ceil(math.log10(amount)) - trading_rule.price_precision}")
 *         else:
 *             precision_quantum = s_decimal_0             # <<<<<<<<<<<<<<
 *         return max(decimals_quantum, precision_quantum)
 * 
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 973, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_precision_quantum = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "wings/market/radar_relay_market.pyx":974
 *         else:
 *             precision_quantum = s_decimal_0
 *         return max(decimals_quantum, precision_quantum)             # <<<<<<<<<<<<<<
 * 
 *     cdef object c_quantize_order_amount(self, str symbol, double amount):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_precision_quantum);
  __pyx_t_1 = __pyx_v_precision_quantum;
  __Pyx_INCREF(__pyx_v_decimals_quantum);
  __pyx_t_2 = __pyx_v_decimals_quantum;
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 974, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 974, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_5) {
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_t_1;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = __pyx_t_2;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":965
 *         return max(decimals_quantum, precision_quantum)
 * 
 *     cdef object c_get_order_size_quantum(self, str symbol, double amount):             # <<<<<<<<<<<<<<
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_get_order_size_quantum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_trading_rule);
  __Pyx_XDECREF(__pyx_v_decimals_quantum);
  __Pyx_XDECREF(__pyx_v_precision_quantum);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pyx":976
 *         return max(decimals_quantum, precision_quantum)
 * 
 *     cdef object c_quantize_order_amount(self, str symbol, double amount):             # <<<<<<<<<<<<<<
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_quantize_order_amount(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_symbol, double __pyx_v_amount) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v_trading_rule = 0;
  PyObject *__pyx_v_quantized_amount = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("c_quantize_order_amount", 0);

  /* "wings/market/radar_relay_market.pyx":978
 *     cdef object c_quantize_order_amount(self, str symbol, double amount):
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]             # <<<<<<<<<<<<<<
 *         global s_decimal_0
 *         quantized_amount = MarketBase.c_quantize_order_amount(self, symbol, min(amount, trading_rule.max_order_size))
 */
  if (unlikely(__pyx_v_self->_trading_rules == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 978, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->_trading_rules, __pyx_v_symbol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 978, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5wings_6market_18radar_relay_market_TradingRule))))) __PYX_ERR(0, 978, __pyx_L1_error)
  __pyx_v_trading_rule = ((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":980
 *             TradingRule trading_rule = self._trading_rules[symbol]
 *         global s_decimal_0
 *         quantized_amount = MarketBase.c_quantize_order_amount(self, symbol, min(amount, trading_rule.max_order_size))             # <<<<<<<<<<<<<<
 * 
 *         # Check against min_order_size. If not passing the check, return 0.
 */
  __pyx_t_2 = __pyx_v_trading_rule->max_order_size;
  __pyx_t_3 = __pyx_v_amount;
  if (((__pyx_t_2 < __pyx_t_3) != 0)) {
    __pyx_t_4 = __pyx_t_2;
  } else {
    __pyx_t_4 = __pyx_t_3;
  }
  __pyx_t_1 = __pyx_vtabptr_5wings_6market_11market_base_MarketBase->c_quantize_order_amount(((struct __pyx_obj_5wings_6market_11market_base_MarketBase *)__pyx_v_self), __pyx_v_symbol, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 980, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_quantized_amount = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":983
 * 
 *         # Check against min_order_size. If not passing the check, return 0.
 *         if quantized_amount < trading_rule.min_order_size:             # <<<<<<<<<<<<<<
 *             return s_decimal_0
 * 
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_trading_rule->min_order_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyObject_RichCompare(__pyx_v_quantized_amount, __pyx_t_1, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {

    /* "wings/market/radar_relay_market.pyx":984
 *         # Check against min_order_size. If not passing the check, return 0.
 *         if quantized_amount < trading_rule.min_order_size:
 *             return s_decimal_0             # <<<<<<<<<<<<<<
 * 
 *         return quantized_amount
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_s_decimal_0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 984, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "wings/market/radar_relay_market.pyx":983
 * 
 *         # Check against min_order_size. If not passing the check, return 0.
 *         if quantized_amount < trading_rule.min_order_size:             # <<<<<<<<<<<<<<
 *             return s_decimal_0
 * 
 */
  }

  /* "wings/market/radar_relay_market.pyx":986
 *             return s_decimal_0
 * 
 *         return quantized_amount             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_quantized_amount);
  __pyx_r = __pyx_v_quantized_amount;
  goto __pyx_L0;

  /* "wings/market/radar_relay_market.pyx":976
 *         return max(decimals_quantum, precision_quantum)
 * 
 *     cdef object c_quantize_order_amount(self, str symbol, double amount):             # <<<<<<<<<<<<<<
 *         cdef:
 *             TradingRule trading_rule = self._trading_rules[symbol]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.c_quantize_order_amount", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_trading_rule);
  __Pyx_XDECREF(__pyx_v_quantized_amount);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pxd":30
 *         dict _trading_rules
 *         object _pending_approval_tx_hashes
 *         public object _status_polling_task             # <<<<<<<<<<<<<<
 *         public object _user_stream_event_listener_task
 *         public object _approval_tx_polling_task
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_status_polling_task);
  __pyx_r = __pyx_v_self->_status_polling_task;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_status_polling_task);
  __Pyx_DECREF(__pyx_v_self->_status_polling_task);
  __pyx_v_self->_status_polling_task = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_status_polling_task);
  __Pyx_DECREF(__pyx_v_self->_status_polling_task);
  __pyx_v_self->_status_polling_task = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pxd":31
 *         object _pending_approval_tx_hashes
 *         public object _status_polling_task
 *         public object _user_stream_event_listener_task             # <<<<<<<<<<<<<<
 *         public object _approval_tx_polling_task
 *         public object _order_tracker_task
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_user_stream_event_listener_task);
  __pyx_r = __pyx_v_self->_user_stream_event_listener_task;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_user_stream_event_listener_task);
  __Pyx_DECREF(__pyx_v_self->_user_stream_event_listener_task);
  __pyx_v_self->_user_stream_event_listener_task = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_user_stream_event_listener_task);
  __Pyx_DECREF(__pyx_v_self->_user_stream_event_listener_task);
  __pyx_v_self->_user_stream_event_listener_task = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pxd":32
 *         public object _status_polling_task
 *         public object _user_stream_event_listener_task
 *         public object _approval_tx_polling_task             # <<<<<<<<<<<<<<
 *         public object _order_tracker_task
 *         object _coro_queue
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_approval_tx_polling_task);
  __pyx_r = __pyx_v_self->_approval_tx_polling_task;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_approval_tx_polling_task);
  __Pyx_DECREF(__pyx_v_self->_approval_tx_polling_task);
  __pyx_v_self->_approval_tx_polling_task = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_approval_tx_polling_task);
  __Pyx_DECREF(__pyx_v_self->_approval_tx_polling_task);
  __pyx_v_self->_approval_tx_polling_task = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pxd":33
 *         public object _user_stream_event_listener_task
 *         public object _approval_tx_polling_task
 *         public object _order_tracker_task             # <<<<<<<<<<<<<<
 *         object _coro_queue
 *         public object _coro_scheduler_task
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_order_tracker_task);
  __pyx_r = __pyx_v_self->_order_tracker_task;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_order_tracker_task);
  __Pyx_DECREF(__pyx_v_self->_order_tracker_task);
  __pyx_v_self->_order_tracker_task = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_order_tracker_task);
  __Pyx_DECREF(__pyx_v_self->_order_tracker_task);
  __pyx_v_self->_order_tracker_task = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "wings/market/radar_relay_market.pxd":35
 *         public object _order_tracker_task
 *         object _coro_queue
 *         public object _coro_scheduler_task             # <<<<<<<<<<<<<<
 *         int64_t _latest_salt
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task___get__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task___get__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_coro_scheduler_task);
  __pyx_r = __pyx_v_self->_coro_scheduler_task;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_2__set__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_2__set__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_coro_scheduler_task);
  __Pyx_DECREF(__pyx_v_self->_coro_scheduler_task);
  __pyx_v_self->_coro_scheduler_task = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_4__del__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_4__del__(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_coro_scheduler_task);
  __Pyx_DECREF(__pyx_v_self->_coro_scheduler_task);
  __pyx_v_self->_coro_scheduler_task = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_77__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_77__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_76__reduce_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_76__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_79__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_79__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_78__setstate_cython__(((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_16RadarRelayMarket_78__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("wings.market.radar_relay_market.RadarRelayMarket.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_TradingRule(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_1__pyx_unpickle_TradingRule(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5wings_6market_18radar_relay_market_1__pyx_unpickle_TradingRule = {"__pyx_unpickle_TradingRule", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_1__pyx_unpickle_TradingRule, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_1__pyx_unpickle_TradingRule(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_TradingRule (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_TradingRule", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_TradingRule", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_TradingRule") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_TradingRule", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.__pyx_unpickle_TradingRule", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_TradingRule", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x12d7928:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x12d7928) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x12d7928:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)
 *     __pyx_result = TradingRule.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x12d7928:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = TradingRule.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x12, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x12d7928:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)
 *     __pyx_result = TradingRule.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)
 *     __pyx_result = TradingRule.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = TradingRule.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule__set_state(((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x12d7928 = (amount_decimals, max_order_size, min_order_size, price_decimals, price_precision, symbol))" % __pyx_checksum)
 *     __pyx_result = TradingRule.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_TradingRule(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.__pyx_unpickle_TradingRule", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_TradingRule__set_state(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  double __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_TradingRule__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->amount_decimals = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->max_order_size = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->min_order_size = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->price_decimals = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->price_precision = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->symbol);
  __Pyx_DECREF(__pyx_v___pyx_result->symbol);
  __pyx_v___pyx_result->symbol = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 6) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("wings.market.radar_relay_market.__pyx_unpickle_TradingRule__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_InFlightOrder(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_3__pyx_unpickle_InFlightOrder(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5wings_6market_18radar_relay_market_3__pyx_unpickle_InFlightOrder = {"__pyx_unpickle_InFlightOrder", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_3__pyx_unpickle_InFlightOrder, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5wings_6market_18radar_relay_market_3__pyx_unpickle_InFlightOrder(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_InFlightOrder (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_InFlightOrder", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_InFlightOrder", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_InFlightOrder") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_InFlightOrder", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("wings.market.radar_relay_market.__pyx_unpickle_InFlightOrder", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5wings_6market_18radar_relay_market_2__pyx_unpickle_InFlightOrder(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5wings_6market_18radar_relay_market_2__pyx_unpickle_InFlightOrder(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_InFlightOrder", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x466480a:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x466480a) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x466480a:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)
 *     __pyx_result = InFlightOrder.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x466480a:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = InFlightOrder.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x46, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x466480a:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)
 *     __pyx_result = InFlightOrder.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_InFlightOrder), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)
 *     __pyx_result = InFlightOrder.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = InFlightOrder.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_InFlightOrder__set_state(((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x466480a = (amount, available_amount, client_order_id, exchange_order_id, executed_amount, gas_fee_amount, is_buy, last_state, order_type, price, quote_asset_amount, symbol, tx_hash, zero_ex_order))" % __pyx_checksum)
 *     __pyx_result = InFlightOrder.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_InFlightOrder(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("wings.market.radar_relay_market.__pyx_unpickle_InFlightOrder", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]
 *     if len(__pyx_state) > 14 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_5wings_6market_18radar_relay_market___pyx_unpickle_InFlightOrder__set_state(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_InFlightOrder__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 14 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[14])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->amount);
  __Pyx_DECREF(__pyx_v___pyx_result->amount);
  __pyx_v___pyx_result->amount = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->available_amount);
  __Pyx_DECREF(__pyx_v___pyx_result->available_amount);
  __pyx_v___pyx_result->available_amount = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->client_order_id);
  __Pyx_DECREF(__pyx_v___pyx_result->client_order_id);
  __pyx_v___pyx_result->client_order_id = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->exchange_order_id);
  __Pyx_DECREF(__pyx_v___pyx_result->exchange_order_id);
  __pyx_v___pyx_result->exchange_order_id = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->executed_amount);
  __Pyx_DECREF(__pyx_v___pyx_result->executed_amount);
  __pyx_v___pyx_result->executed_amount = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->gas_fee_amount);
  __Pyx_DECREF(__pyx_v___pyx_result->gas_fee_amount);
  __pyx_v___pyx_result->gas_fee_amount = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->is_buy = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->last_state);
  __Pyx_DECREF(__pyx_v___pyx_result->last_state);
  __pyx_v___pyx_result->last_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->order_type);
  __Pyx_DECREF(__pyx_v___pyx_result->order_type);
  __pyx_v___pyx_result->order_type = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->price);
  __Pyx_DECREF(__pyx_v___pyx_result->price);
  __pyx_v___pyx_result->price = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 10, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->quote_asset_amount);
  __Pyx_DECREF(__pyx_v___pyx_result->quote_asset_amount);
  __pyx_v___pyx_result->quote_asset_amount = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 11, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->symbol);
  __Pyx_DECREF(__pyx_v___pyx_result->symbol);
  __pyx_v___pyx_result->symbol = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 12, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->tx_hash);
  __Pyx_DECREF(__pyx_v___pyx_result->tx_hash);
  __pyx_v___pyx_result->tx_hash = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 13, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->zero_ex_order);
  __Pyx_DECREF(__pyx_v___pyx_result->zero_ex_order);
  __pyx_v___pyx_result->zero_ex_order = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]
 *     if len(__pyx_state) > 14 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[14])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 14) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]
 *     if len(__pyx_state) > 14 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[14])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 14, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]
 *     if len(__pyx_state) > 14 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[14])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_InFlightOrder__set_state(<InFlightOrder> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_InFlightOrder__set_state(InFlightOrder __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.amount = __pyx_state[0]; __pyx_result.available_amount = __pyx_state[1]; __pyx_result.client_order_id = __pyx_state[2]; __pyx_result.exchange_order_id = __pyx_state[3]; __pyx_result.executed_amount = __pyx_state[4]; __pyx_result.gas_fee_amount = __pyx_state[5]; __pyx_result.is_buy = __pyx_state[6]; __pyx_result.last_state = __pyx_state[7]; __pyx_result.order_type = __pyx_state[8]; __pyx_result.price = __pyx_state[9]; __pyx_result.quote_asset_amount = __pyx_state[10]; __pyx_result.symbol = __pyx_state[11]; __pyx_result.tx_hash = __pyx_state[12]; __pyx_result.zero_ex_order = __pyx_state[13]
 *     if len(__pyx_state) > 14 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("wings.market.radar_relay_market.__pyx_unpickle_InFlightOrder__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyArray_Descr *__pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  char *__pyx_t_9;
  if (__pyx_v_info == NULL) {
    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
    return -1;
  }
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":265
 * 
 *             cdef int i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *             cdef int i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":271
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_ARRAY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (unlikely(__pyx_t_1)) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 272, __pyx_L1_error)

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L7_bool_binop_done;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":275
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_ARRAY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L7_bool_binop_done:;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (unlikely(__pyx_t_1)) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 276, __pyx_L1_error)

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":279
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyObject_Malloc((((sizeof(Py_ssize_t)) * 2) * ((size_t)__pyx_v_ndim))));

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    __pyx_t_5 = __pyx_t_4;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":286
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":287
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L9;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":289
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L9:;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":291
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":292
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":296
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = <dtype>PyArray_DESCR(self)
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":297
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = <dtype>PyArray_DESCR(self)             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_7 = PyArray_DESCR(__pyx_v_self);
  __pyx_t_3 = ((PyObject *)__pyx_t_7);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":300
 *             cdef int offset
 * 
 *             info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not PyDataType_HASFIELDS(descr):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":302
 *             info.obj = self
 * 
 *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(PyDataType_HASFIELDS(__pyx_v_descr) != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":303
 * 
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":304
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L15_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L14_bool_binop_done;
    }
    __pyx_L15_next_or:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":305
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L14_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L14_bool_binop_done:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":304
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (unlikely(__pyx_t_1)) {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":306
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 306, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 306, __pyx_L1_error)

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":304
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":307
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;
      case NPY_UBYTE:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":308
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      __pyx_v_f = ((char *)"B");
      break;
      case NPY_SHORT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":309
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      __pyx_v_f = ((char *)"h");
      break;
      case NPY_USHORT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":310
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      __pyx_v_f = ((char *)"H");
      break;
      case NPY_INT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":311
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      __pyx_v_f = ((char *)"i");
      break;
      case NPY_UINT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":312
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      __pyx_v_f = ((char *)"I");
      break;
      case NPY_LONG:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":313
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      __pyx_v_f = ((char *)"l");
      break;
      case NPY_ULONG:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":314
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      __pyx_v_f = ((char *)"L");
      break;
      case NPY_LONGLONG:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":315
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      __pyx_v_f = ((char *)"q");
      break;
      case NPY_ULONGLONG:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":316
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      __pyx_v_f = ((char *)"Q");
      break;
      case NPY_FLOAT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":317
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      __pyx_v_f = ((char *)"f");
      break;
      case NPY_DOUBLE:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":318
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      __pyx_v_f = ((char *)"d");
      break;
      case NPY_LONGDOUBLE:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":319
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      __pyx_v_f = ((char *)"g");
      break;
      case NPY_CFLOAT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":320
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      __pyx_v_f = ((char *)"Zf");
      break;
      case NPY_CDOUBLE:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":321
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      __pyx_v_f = ((char *)"Zd");
      break;
      case NPY_CLONGDOUBLE:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":322
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      __pyx_v_f = ((char *)"Zg");
      break;
      case NPY_OBJECT:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":323
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":325
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 325, __pyx_L1_error)
      break;
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":326
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":327
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":302
 *             info.obj = self
 * 
 *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":329
 *                 return
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)PyObject_Malloc(0xFF));

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":330
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":331
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":332
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(2, 332, __pyx_L1_error)
    __pyx_v_f = __pyx_t_9;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":335
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":337
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":338
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":339
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)
 */
    PyObject_Free(__pyx_v_info->format);

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":338
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":340
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":341
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    PyObject_Free(__pyx_v_info->strides);

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":340
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":337
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":821
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":822
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":821
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":824
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":825
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":824
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":828
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":831
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":834
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":837
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":838
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":837
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":847
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":848
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":851
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(2, 851, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 851, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 851, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":852
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 852, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 852, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(2, 852, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":853
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(2, 853, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 853, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(2, 853, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":855
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 855, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (unlikely(__pyx_t_6)) {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":856
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 856, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 856, __pyx_L1_error)

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":855
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":858
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":859
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":858
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (unlikely(__pyx_t_6)) {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":860
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 860, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 860, __pyx_L1_error)

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":858
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":870
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 870, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 870, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 870, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":871
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":872
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":873
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":875
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":877
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":878
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 878, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":879
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (unlikely(__pyx_t_6)) {

        /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":880
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 880, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 880, __pyx_L1_error)

        /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":879
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":883
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 883, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 883, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 883, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":884
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 884, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 884, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 884, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":885
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 885, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 885, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 885, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":886
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 886, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 886, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 886, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":887
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 887, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 887, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 887, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":888
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 888, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 888, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 888, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":889
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 889, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 889, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 889, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":890
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 890, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 890, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 890, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":891
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 891, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 891, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 891, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":892
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 892, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 892, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 892, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":893
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 893, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 893, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 893, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":894
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 894, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 894, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 894, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":895
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 895, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 895, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 895, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":896
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 896, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":897
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 897, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 897, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 897, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":898
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 898, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 898, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 898, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":899
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 899, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 899, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 899, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (likely(__pyx_t_6)) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":901
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 901, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":902
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":877
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":906
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(2, 906, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":851
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":907
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1022
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1023
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1024
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1022
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1026
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1027
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1028
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1029
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1028
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1030
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1026
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1034
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1035
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1036
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1036, __pyx_L3_error)

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1035
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1037
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1037, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1038
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1038, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1038, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1035
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1034
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1040
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1041
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1042
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1042, __pyx_L3_error)

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1041
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1043
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1043, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1044
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1044, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1044, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1041
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1040
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1046
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1047
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1048
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1048, __pyx_L3_error)

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1047
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1049
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1049, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1050
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1050, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1050, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1047
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1046
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayMarket __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_RadarRelayMarket(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *p;
  PyObject *o = __pyx_ptype_5wings_6market_11market_base_MarketBase->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5wings_6pubsub_PubSub*)__pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayMarket;
  p->_wallet_spender_address = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_wallet = Py_None; Py_INCREF(Py_None);
  p->_provider = Py_None; Py_INCREF(Py_None);
  p->_weth_token = Py_None; Py_INCREF(Py_None);
  p->_order_book_tracker = Py_None; Py_INCREF(Py_None);
  p->_account_balances = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_ev_loop = Py_None; Py_INCREF(Py_None);
  p->_poll_notifier = Py_None; Py_INCREF(Py_None);
  p->_in_flight_limit_orders = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_in_flight_market_orders = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_order_expiry_queue = Py_None; Py_INCREF(Py_None);
  p->_tx_tracker = ((struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *)Py_None); Py_INCREF(Py_None);
  p->_w3 = Py_None; Py_INCREF(Py_None);
  p->_exchange = Py_None; Py_INCREF(Py_None);
  p->_withdraw_rules = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_trading_rules = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_pending_approval_tx_hashes = Py_None; Py_INCREF(Py_None);
  p->_status_polling_task = Py_None; Py_INCREF(Py_None);
  p->_user_stream_event_listener_task = Py_None; Py_INCREF(Py_None);
  p->_approval_tx_polling_task = Py_None; Py_INCREF(Py_None);
  p->_order_tracker_task = Py_None; Py_INCREF(Py_None);
  p->_coro_queue = Py_None; Py_INCREF(Py_None);
  p->_coro_scheduler_task = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market_RadarRelayMarket(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_wallet_spender_address);
  Py_CLEAR(p->_wallet);
  Py_CLEAR(p->_provider);
  Py_CLEAR(p->_weth_token);
  Py_CLEAR(p->_order_book_tracker);
  Py_CLEAR(p->_account_balances);
  Py_CLEAR(p->_ev_loop);
  Py_CLEAR(p->_poll_notifier);
  Py_CLEAR(p->_in_flight_limit_orders);
  Py_CLEAR(p->_in_flight_market_orders);
  Py_CLEAR(p->_order_expiry_queue);
  Py_CLEAR(p->_tx_tracker);
  Py_CLEAR(p->_w3);
  Py_CLEAR(p->_exchange);
  Py_CLEAR(p->_withdraw_rules);
  Py_CLEAR(p->_trading_rules);
  Py_CLEAR(p->_pending_approval_tx_hashes);
  Py_CLEAR(p->_status_polling_task);
  Py_CLEAR(p->_user_stream_event_listener_task);
  Py_CLEAR(p->_approval_tx_polling_task);
  Py_CLEAR(p->_order_tracker_task);
  Py_CLEAR(p->_coro_queue);
  Py_CLEAR(p->_coro_scheduler_task);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_5wings_6market_11market_base_MarketBase)) __pyx_ptype_5wings_6market_11market_base_MarketBase->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_5wings_6market_18radar_relay_market_RadarRelayMarket);
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market_RadarRelayMarket(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)o;
  e = ((likely(__pyx_ptype_5wings_6market_11market_base_MarketBase)) ? ((__pyx_ptype_5wings_6market_11market_base_MarketBase->tp_traverse) ? __pyx_ptype_5wings_6market_11market_base_MarketBase->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5wings_6market_18radar_relay_market_RadarRelayMarket)); if (e) return e;
  if (p->_wallet) {
    e = (*v)(p->_wallet, a); if (e) return e;
  }
  if (p->_provider) {
    e = (*v)(p->_provider, a); if (e) return e;
  }
  if (p->_weth_token) {
    e = (*v)(p->_weth_token, a); if (e) return e;
  }
  if (p->_order_book_tracker) {
    e = (*v)(p->_order_book_tracker, a); if (e) return e;
  }
  if (p->_account_balances) {
    e = (*v)(p->_account_balances, a); if (e) return e;
  }
  if (p->_ev_loop) {
    e = (*v)(p->_ev_loop, a); if (e) return e;
  }
  if (p->_poll_notifier) {
    e = (*v)(p->_poll_notifier, a); if (e) return e;
  }
  if (p->_in_flight_limit_orders) {
    e = (*v)(p->_in_flight_limit_orders, a); if (e) return e;
  }
  if (p->_in_flight_market_orders) {
    e = (*v)(p->_in_flight_market_orders, a); if (e) return e;
  }
  if (p->_order_expiry_queue) {
    e = (*v)(p->_order_expiry_queue, a); if (e) return e;
  }
  if (p->_tx_tracker) {
    e = (*v)(((PyObject *)p->_tx_tracker), a); if (e) return e;
  }
  if (p->_w3) {
    e = (*v)(p->_w3, a); if (e) return e;
  }
  if (p->_exchange) {
    e = (*v)(p->_exchange, a); if (e) return e;
  }
  if (p->_withdraw_rules) {
    e = (*v)(p->_withdraw_rules, a); if (e) return e;
  }
  if (p->_trading_rules) {
    e = (*v)(p->_trading_rules, a); if (e) return e;
  }
  if (p->_pending_approval_tx_hashes) {
    e = (*v)(p->_pending_approval_tx_hashes, a); if (e) return e;
  }
  if (p->_status_polling_task) {
    e = (*v)(p->_status_polling_task, a); if (e) return e;
  }
  if (p->_user_stream_event_listener_task) {
    e = (*v)(p->_user_stream_event_listener_task, a); if (e) return e;
  }
  if (p->_approval_tx_polling_task) {
    e = (*v)(p->_approval_tx_polling_task, a); if (e) return e;
  }
  if (p->_order_tracker_task) {
    e = (*v)(p->_order_tracker_task, a); if (e) return e;
  }
  if (p->_coro_queue) {
    e = (*v)(p->_coro_queue, a); if (e) return e;
  }
  if (p->_coro_scheduler_task) {
    e = (*v)(p->_coro_scheduler_task, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5wings_6market_18radar_relay_market_RadarRelayMarket(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)o;
  if (likely(__pyx_ptype_5wings_6market_11market_base_MarketBase)) { if (__pyx_ptype_5wings_6market_11market_base_MarketBase->tp_clear) __pyx_ptype_5wings_6market_11market_base_MarketBase->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5wings_6market_18radar_relay_market_RadarRelayMarket);
  tmp = ((PyObject*)p->_wallet);
  p->_wallet = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_provider);
  p->_provider = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_weth_token);
  p->_weth_token = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_order_book_tracker);
  p->_order_book_tracker = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_account_balances);
  p->_account_balances = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_ev_loop);
  p->_ev_loop = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_poll_notifier);
  p->_poll_notifier = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_in_flight_limit_orders);
  p->_in_flight_limit_orders = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_in_flight_market_orders);
  p->_in_flight_market_orders = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_order_expiry_queue);
  p->_order_expiry_queue = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_tx_tracker);
  p->_tx_tracker = ((struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_w3);
  p->_w3 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_exchange);
  p->_exchange = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_withdraw_rules);
  p->_withdraw_rules = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_trading_rules);
  p->_trading_rules = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_pending_approval_tx_hashes);
  p->_pending_approval_tx_hashes = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_status_polling_task);
  p->_status_polling_task = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_user_stream_event_listener_task);
  p->_user_stream_event_listener_task = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_approval_tx_polling_task);
  p->_approval_tx_polling_task = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_order_tracker_task);
  p->_order_tracker_task = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_coro_queue);
  p->_coro_queue = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_coro_scheduler_task);
  p->_coro_scheduler_task = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_ready(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_5ready_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_order_books(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_11order_books_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_wallet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_6wallet_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_trading_rules(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_13trading_rules_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_in_flight_limit_orders(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_22in_flight_limit_orders_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_in_flight_market_orders(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_23in_flight_market_orders_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_limit_orders(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_12limit_orders_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__status_polling_task(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__status_polling_task(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_status_polling_task_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__user_stream_event_listener_task(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__user_stream_event_listener_task(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_32_user_stream_event_listener_task_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__approval_tx_polling_task(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__approval_tx_polling_task(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25_approval_tx_polling_task_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__order_tracker_task(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__order_tracker_task(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_order_tracker_task_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__coro_scheduler_task(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__coro_scheduler_task(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_20_coro_scheduler_task_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_5wings_6market_18radar_relay_market_RadarRelayMarket[] = {
  {"logger", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_1logger, METH_NOARGS, 0},
  {"_status_polling_loop", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_5_status_polling_loop, METH_NOARGS, 0},
  {"_update_balances", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_8_update_balances, METH_NOARGS, 0},
  {"list_market", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_10list_market, METH_NOARGS, 0},
  {"_update_trading_rules", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_13_update_trading_rules, METH_NOARGS, 0},
  {"_update_limit_order_status", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_16_update_limit_order_status, METH_NOARGS, 0},
  {"_update_market_order_status", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_19_update_market_order_status, METH_NOARGS, 0},
  {"_approval_tx_polling_loop", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_22_approval_tx_polling_loop, METH_NOARGS, 0},
  {"coro_scheduler", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_25coro_scheduler, METH_VARARGS|METH_KEYWORDS, 0},
  {"schedule_async_call", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_28schedule_async_call, METH_O, 0},
  {"_api_request", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_31_api_request, METH_VARARGS|METH_KEYWORDS, 0},
  {"request_signed_market_orders", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_34request_signed_market_orders, METH_VARARGS|METH_KEYWORDS, 0},
  {"request_unsigned_limit_order", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_37request_unsigned_limit_order, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_order_hash_hex", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_40get_order_hash_hex, METH_O, 0},
  {"get_zero_ex_signature", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_42get_zero_ex_signature, METH_O, 0},
  {"submit_market_order", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_44submit_market_order, METH_VARARGS|METH_KEYWORDS, 0},
  {"submit_limit_order", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_47submit_limit_order, METH_VARARGS|METH_KEYWORDS, 0},
  {"cancel_all", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_50cancel_all, METH_O, 0},
  {"execute_trade", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_53execute_trade, METH_VARARGS|METH_KEYWORDS, 0},
  {"cancel_order", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_56cancel_order, METH_O, 0},
  {"get_all_balances", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_59get_all_balances, METH_NOARGS, 0},
  {"get_balance", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_61get_balance, METH_O, 0},
  {"get_price", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_63get_price, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_order", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_65get_order, METH_O, 0},
  {"get_tx_hash_receipt", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_68get_tx_hash_receipt, METH_O, 0},
  {"list_account_orders", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_70list_account_orders, METH_NOARGS, 0},
  {"wrap_eth", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_73wrap_eth, METH_O, 0},
  {"unwrap_eth", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_75unwrap_eth, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_77__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_79__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5wings_6market_18radar_relay_market_RadarRelayMarket[] = {
  {(char *)"ready", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_ready, 0, (char *)0, 0},
  {(char *)"order_books", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_order_books, 0, (char *)0, 0},
  {(char *)"wallet", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_wallet, 0, (char *)0, 0},
  {(char *)"trading_rules", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_trading_rules, 0, (char *)0, 0},
  {(char *)"in_flight_limit_orders", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_in_flight_limit_orders, 0, (char *)0, 0},
  {(char *)"in_flight_market_orders", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_in_flight_market_orders, 0, (char *)0, 0},
  {(char *)"limit_orders", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket_limit_orders, 0, (char *)0, 0},
  {(char *)"_status_polling_task", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__status_polling_task, __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__status_polling_task, (char *)0, 0},
  {(char *)"_user_stream_event_listener_task", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__user_stream_event_listener_task, __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__user_stream_event_listener_task, (char *)0, 0},
  {(char *)"_approval_tx_polling_task", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__approval_tx_polling_task, __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__approval_tx_polling_task, (char *)0, 0},
  {(char *)"_order_tracker_task", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__order_tracker_task, __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__order_tracker_task, (char *)0, 0},
  {(char *)"_coro_scheduler_task", __pyx_getprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__coro_scheduler_task, __pyx_setprop_5wings_6market_18radar_relay_market_16RadarRelayMarket__coro_scheduler_task, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.RadarRelayMarket", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market_RadarRelayMarket, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market_RadarRelayMarket, /*tp_traverse*/
  __pyx_tp_clear_5wings_6market_18radar_relay_market_RadarRelayMarket, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5wings_6market_18radar_relay_market_RadarRelayMarket, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5wings_6market_18radar_relay_market_RadarRelayMarket, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5wings_6market_18radar_relay_market_16RadarRelayMarket_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market_RadarRelayMarket, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *p;
  PyObject *o = __pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5wings_6pubsub_PubSub*)__pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker;
  p->_owner = ((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_owner);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_5wings_19transaction_tracker_TransactionTracker)) __pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker);
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)o;
  e = ((likely(__pyx_ptype_5wings_19transaction_tracker_TransactionTracker)) ? ((__pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_traverse) ? __pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker)); if (e) return e;
  if (p->_owner) {
    e = (*v)(((PyObject *)p->_owner), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker *)o;
  if (likely(__pyx_ptype_5wings_19transaction_tracker_TransactionTracker)) { if (__pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_clear) __pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker);
  tmp = ((PyObject*)p->_owner);
  p->_owner = ((struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.RadarRelayTransactionTracker", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker, /*tp_traverse*/
  __pyx_tp_clear_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_TradingRule(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)o);
  p->symbol = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market_TradingRule(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  Py_CLEAR(p->symbol);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_symbol(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_symbol(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_6symbol_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_min_order_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_min_order_size(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14min_order_size_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_max_order_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_max_order_size(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14max_order_size_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_price_precision(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_price_precision(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15price_precision_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_price_decimals(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_price_decimals(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_14price_decimals_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_amount_decimals(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_amount_decimals(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_15amount_decimals_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_5wings_6market_18radar_relay_market_TradingRule[] = {
  {"parse_exchange_info", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_1parse_exchange_info, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5wings_6market_18radar_relay_market_TradingRule[] = {
  {(char *)"symbol", __pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_symbol, __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_symbol, (char *)0, 0},
  {(char *)"min_order_size", __pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_min_order_size, __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_min_order_size, (char *)0, 0},
  {(char *)"max_order_size", __pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_max_order_size, __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_max_order_size, (char *)0, 0},
  {(char *)"price_precision", __pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_price_precision, __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_price_precision, (char *)0, 0},
  {(char *)"price_decimals", __pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_price_decimals, __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_price_decimals, (char *)0, 0},
  {(char *)"amount_decimals", __pyx_getprop_5wings_6market_18radar_relay_market_11TradingRule_amount_decimals, __pyx_setprop_5wings_6market_18radar_relay_market_11TradingRule_amount_decimals, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market_TradingRule = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.TradingRule", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market_TradingRule), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market_TradingRule, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5wings_6market_18radar_relay_market_TradingRule, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5wings_6market_18radar_relay_market_TradingRule, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5wings_6market_18radar_relay_market_11TradingRule_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market_TradingRule, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market_InFlightOrder(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)o);
  p->client_order_id = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->exchange_order_id = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->tx_hash = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->symbol = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->order_type = Py_None; Py_INCREF(Py_None);
  p->amount = Py_None; Py_INCREF(Py_None);
  p->price = Py_None; Py_INCREF(Py_None);
  p->executed_amount = Py_None; Py_INCREF(Py_None);
  p->available_amount = Py_None; Py_INCREF(Py_None);
  p->quote_asset_amount = Py_None; Py_INCREF(Py_None);
  p->gas_fee_amount = Py_None; Py_INCREF(Py_None);
  p->last_state = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->zero_ex_order = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market_InFlightOrder(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->client_order_id);
  Py_CLEAR(p->exchange_order_id);
  Py_CLEAR(p->tx_hash);
  Py_CLEAR(p->symbol);
  Py_CLEAR(p->order_type);
  Py_CLEAR(p->amount);
  Py_CLEAR(p->price);
  Py_CLEAR(p->executed_amount);
  Py_CLEAR(p->available_amount);
  Py_CLEAR(p->quote_asset_amount);
  Py_CLEAR(p->gas_fee_amount);
  Py_CLEAR(p->last_state);
  Py_CLEAR(p->zero_ex_order);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market_InFlightOrder(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)o;
  if (p->order_type) {
    e = (*v)(p->order_type, a); if (e) return e;
  }
  if (p->amount) {
    e = (*v)(p->amount, a); if (e) return e;
  }
  if (p->price) {
    e = (*v)(p->price, a); if (e) return e;
  }
  if (p->executed_amount) {
    e = (*v)(p->executed_amount, a); if (e) return e;
  }
  if (p->available_amount) {
    e = (*v)(p->available_amount, a); if (e) return e;
  }
  if (p->quote_asset_amount) {
    e = (*v)(p->quote_asset_amount, a); if (e) return e;
  }
  if (p->gas_fee_amount) {
    e = (*v)(p->gas_fee_amount, a); if (e) return e;
  }
  if (p->zero_ex_order) {
    e = (*v)(p->zero_ex_order, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5wings_6market_18radar_relay_market_InFlightOrder(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *p = (struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder *)o;
  tmp = ((PyObject*)p->order_type);
  p->order_type = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->amount);
  p->amount = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->price);
  p->price = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->executed_amount);
  p->executed_amount = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->available_amount);
  p->available_amount = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->quote_asset_amount);
  p->quote_asset_amount = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->gas_fee_amount);
  p->gas_fee_amount = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->zero_ex_order);
  p->zero_ex_order = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_done(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7is_done_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_cancelled(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_12is_cancelled_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_expired(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10is_expired_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_failure(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10is_failure_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_base_asset(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10base_asset_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_quote_asset(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_11quote_asset_1__get__(o);
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_client_order_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_client_order_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15client_order_id_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_exchange_order_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_exchange_order_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_17exchange_order_id_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_tx_hash(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_tx_hash(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7tx_hash_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_symbol(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_symbol(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6symbol_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_buy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_buy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6is_buy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_order_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_order_type(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10order_type_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_amount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_amount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_6amount_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_price(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_price(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5price_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_executed_amount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_executed_amount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_15executed_amount_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_available_amount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_available_amount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_16available_amount_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_quote_asset_amount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_quote_asset_amount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_18quote_asset_amount_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_gas_fee_amount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_gas_fee_amount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_14gas_fee_amount_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_last_state(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_last_state(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_10last_state_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_zero_ex_order(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_1__get__(o);
}

static int __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_zero_ex_order(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_3__set__(o, v);
  }
  else {
    return __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_13zero_ex_order_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_5wings_6market_18radar_relay_market_InFlightOrder[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5wings_6market_18radar_relay_market_InFlightOrder[] = {
  {(char *)"is_done", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_done, 0, (char *)0, 0},
  {(char *)"is_cancelled", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_cancelled, 0, (char *)0, 0},
  {(char *)"is_expired", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_expired, 0, (char *)0, 0},
  {(char *)"is_failure", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_failure, 0, (char *)0, 0},
  {(char *)"base_asset", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_base_asset, 0, (char *)0, 0},
  {(char *)"quote_asset", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_quote_asset, 0, (char *)0, 0},
  {(char *)"client_order_id", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_client_order_id, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_client_order_id, (char *)0, 0},
  {(char *)"exchange_order_id", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_exchange_order_id, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_exchange_order_id, (char *)0, 0},
  {(char *)"tx_hash", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_tx_hash, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_tx_hash, (char *)0, 0},
  {(char *)"symbol", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_symbol, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_symbol, (char *)0, 0},
  {(char *)"is_buy", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_buy, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_is_buy, (char *)0, 0},
  {(char *)"order_type", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_order_type, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_order_type, (char *)0, 0},
  {(char *)"amount", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_amount, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_amount, (char *)0, 0},
  {(char *)"price", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_price, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_price, (char *)0, 0},
  {(char *)"executed_amount", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_executed_amount, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_executed_amount, (char *)0, 0},
  {(char *)"available_amount", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_available_amount, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_available_amount, (char *)0, 0},
  {(char *)"quote_asset_amount", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_quote_asset_amount, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_quote_asset_amount, (char *)0, 0},
  {(char *)"gas_fee_amount", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_gas_fee_amount, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_gas_fee_amount, (char *)0, 0},
  {(char *)"last_state", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_last_state, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_last_state, (char *)0, 0},
  {(char *)"zero_ex_order", __pyx_getprop_5wings_6market_18radar_relay_market_13InFlightOrder_zero_ex_order, __pyx_setprop_5wings_6market_18radar_relay_market_13InFlightOrder_zero_ex_order, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market_InFlightOrder = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.InFlightOrder", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market_InFlightOrder), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market_InFlightOrder, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_3__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market_InFlightOrder, /*tp_traverse*/
  __pyx_tp_clear_5wings_6market_18radar_relay_market_InFlightOrder, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5wings_6market_18radar_relay_market_InFlightOrder, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5wings_6market_18radar_relay_market_InFlightOrder, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5wings_6market_18radar_relay_market_13InFlightOrder_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market_InFlightOrder, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_t_0);
  Py_CLEAR(p->__pyx_t_1);
  Py_CLEAR(p->__pyx_t_2);
  Py_CLEAR(p->__pyx_t_3);
  Py_CLEAR(p->__pyx_t_4);
  Py_CLEAR(p->__pyx_t_5);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  if (p->__pyx_t_1) {
    e = (*v)(p->__pyx_t_1, a); if (e) return e;
  }
  if (p->__pyx_t_2) {
    e = (*v)(p->__pyx_t_2, a); if (e) return e;
  }
  if (p->__pyx_t_3) {
    e = (*v)(p->__pyx_t_3, a); if (e) return e;
  }
  if (p->__pyx_t_4) {
    e = (*v)(p->__pyx_t_4, a); if (e) return e;
  }
  if (p->__pyx_t_5) {
    e = (*v)(p->__pyx_t_5, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct___status_polling_loop", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_url);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_1_list_market", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_markets);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_trading_rule);
  Py_CLEAR(p->__pyx_v_trading_rules_list);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules *)o;
  if (p->__pyx_v_markets) {
    e = (*v)(p->__pyx_v_markets, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_trading_rule) {
    e = (*v)(p->__pyx_v_trading_rule, a); if (e) return e;
  }
  if (p->__pyx_v_trading_rules_list) {
    e = (*v)(p->__pyx_v_trading_rules_list, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_2__update_trading_rules", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_7genexpr__pyx_v_o);
  Py_CLEAR(p->__pyx_v_order_executed_amount);
  Py_CLEAR(p->__pyx_v_order_remaining_base_token_amount);
  Py_CLEAR(p->__pyx_v_order_remaining_quote_token_amount);
  Py_CLEAR(p->__pyx_v_order_state);
  Py_CLEAR(p->__pyx_v_order_update);
  Py_CLEAR(p->__pyx_v_previous_is_cancelled);
  Py_CLEAR(p->__pyx_v_previous_is_done);
  Py_CLEAR(p->__pyx_v_previous_is_expired);
  Py_CLEAR(p->__pyx_v_previous_is_failure);
  Py_CLEAR(p->__pyx_v_results);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_tasks);
  Py_CLEAR(p->__pyx_v_total_executed_amount);
  Py_CLEAR(p->__pyx_v_tracked_limit_order);
  Py_CLEAR(p->__pyx_v_tracked_limit_orders);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status *)o;
  if (p->__pyx_7genexpr__pyx_v_o) {
    e = (*v)(p->__pyx_7genexpr__pyx_v_o, a); if (e) return e;
  }
  if (p->__pyx_v_order_executed_amount) {
    e = (*v)(p->__pyx_v_order_executed_amount, a); if (e) return e;
  }
  if (p->__pyx_v_order_remaining_base_token_amount) {
    e = (*v)(p->__pyx_v_order_remaining_base_token_amount, a); if (e) return e;
  }
  if (p->__pyx_v_order_remaining_quote_token_amount) {
    e = (*v)(p->__pyx_v_order_remaining_quote_token_amount, a); if (e) return e;
  }
  if (p->__pyx_v_order_state) {
    e = (*v)(p->__pyx_v_order_state, a); if (e) return e;
  }
  if (p->__pyx_v_order_update) {
    e = (*v)(p->__pyx_v_order_update, a); if (e) return e;
  }
  if (p->__pyx_v_previous_is_cancelled) {
    e = (*v)(p->__pyx_v_previous_is_cancelled, a); if (e) return e;
  }
  if (p->__pyx_v_previous_is_done) {
    e = (*v)(p->__pyx_v_previous_is_done, a); if (e) return e;
  }
  if (p->__pyx_v_previous_is_expired) {
    e = (*v)(p->__pyx_v_previous_is_expired, a); if (e) return e;
  }
  if (p->__pyx_v_previous_is_failure) {
    e = (*v)(p->__pyx_v_previous_is_failure, a); if (e) return e;
  }
  if (p->__pyx_v_results) {
    e = (*v)(p->__pyx_v_results, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_tasks) {
    e = (*v)(p->__pyx_v_tasks, a); if (e) return e;
  }
  if (p->__pyx_v_total_executed_amount) {
    e = (*v)(p->__pyx_v_total_executed_amount, a); if (e) return e;
  }
  if (p->__pyx_v_tracked_limit_order) {
    e = (*v)(p->__pyx_v_tracked_limit_order, a); if (e) return e;
  }
  if (p->__pyx_v_tracked_limit_orders) {
    e = (*v)(p->__pyx_v_tracked_limit_orders, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_3__update_limit_order_status", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_receipt);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_tracked_market_order);
  Py_CLEAR(p->__pyx_v_tracked_market_orders);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status *)o;
  if (p->__pyx_v_receipt) {
    e = (*v)(p->__pyx_v_receipt, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_tracked_market_order) {
    e = (*v)(p->__pyx_v_tracked_market_order, a); if (e) return e;
  }
  if (p->__pyx_v_tracked_market_orders) {
    e = (*v)(p->__pyx_v_tracked_market_orders, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_4__update_market_order_status", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_receipt);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_tx_hash);
  Py_CLEAR(p->__pyx_t_0);
  Py_CLEAR(p->__pyx_t_1);
  Py_CLEAR(p->__pyx_t_2);
  Py_CLEAR(p->__pyx_t_6);
  Py_CLEAR(p->__pyx_t_7);
  Py_CLEAR(p->__pyx_t_8);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop *)o;
  if (p->__pyx_v_receipt) {
    e = (*v)(p->__pyx_v_receipt, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_tx_hash) {
    e = (*v)(p->__pyx_v_tx_hash, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  if (p->__pyx_t_1) {
    e = (*v)(p->__pyx_t_1, a); if (e) return e;
  }
  if (p->__pyx_t_2) {
    e = (*v)(p->__pyx_t_2, a); if (e) return e;
  }
  if (p->__pyx_t_6) {
    e = (*v)(p->__pyx_t_6, a); if (e) return e;
  }
  if (p->__pyx_t_7) {
    e = (*v)(p->__pyx_t_7, a); if (e) return e;
  }
  if (p->__pyx_t_8) {
    e = (*v)(p->__pyx_t_8, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_5__approval_tx_polling_loop", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_coro);
  Py_CLEAR(p->__pyx_v_coro_queue);
  Py_CLEAR(p->__pyx_v_e);
  Py_CLEAR(p->__pyx_v_fut);
  Py_CLEAR(p->__pyx_t_0);
  Py_CLEAR(p->__pyx_t_1);
  Py_CLEAR(p->__pyx_t_2);
  Py_CLEAR(p->__pyx_t_3);
  Py_CLEAR(p->__pyx_t_4);
  Py_CLEAR(p->__pyx_t_7);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler *)o;
  if (p->__pyx_v_coro) {
    e = (*v)(p->__pyx_v_coro, a); if (e) return e;
  }
  if (p->__pyx_v_coro_queue) {
    e = (*v)(p->__pyx_v_coro_queue, a); if (e) return e;
  }
  if (p->__pyx_v_e) {
    e = (*v)(p->__pyx_v_e, a); if (e) return e;
  }
  if (p->__pyx_v_fut) {
    e = (*v)(p->__pyx_v_fut, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  if (p->__pyx_t_1) {
    e = (*v)(p->__pyx_t_1, a); if (e) return e;
  }
  if (p->__pyx_t_2) {
    e = (*v)(p->__pyx_t_2, a); if (e) return e;
  }
  if (p->__pyx_t_3) {
    e = (*v)(p->__pyx_t_3, a); if (e) return e;
  }
  if (p->__pyx_t_4) {
    e = (*v)(p->__pyx_t_4, a); if (e) return e;
  }
  if (p->__pyx_t_7) {
    e = (*v)(p->__pyx_t_7, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_6_coro_scheduler", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_coro);
  Py_CLEAR(p->__pyx_v_fut);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call *)o;
  if (p->__pyx_v_coro) {
    e = (*v)(p->__pyx_v_coro, a); if (e) return e;
  }
  if (p->__pyx_v_fut) {
    e = (*v)(p->__pyx_v_fut, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_7_schedule_async_call", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_client);
  Py_CLEAR(p->__pyx_v_data);
  Py_CLEAR(p->__pyx_v_headers);
  Py_CLEAR(p->__pyx_v_http_method);
  Py_CLEAR(p->__pyx_v_response);
  Py_CLEAR(p->__pyx_v_response_json);
  Py_CLEAR(p->__pyx_v_response_text);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_url);
  Py_CLEAR(p->__pyx_t_0);
  Py_CLEAR(p->__pyx_t_1);
  Py_CLEAR(p->__pyx_t_2);
  Py_CLEAR(p->__pyx_t_3);
  Py_CLEAR(p->__pyx_t_4);
  Py_CLEAR(p->__pyx_t_5);
  Py_CLEAR(p->__pyx_t_6);
  Py_CLEAR(p->__pyx_t_7);
  Py_CLEAR(p->__pyx_t_8);
  Py_CLEAR(p->__pyx_t_9);
  Py_CLEAR(p->__pyx_t_10);
  Py_CLEAR(p->__pyx_t_11);
  Py_CLEAR(p->__pyx_t_12);
  Py_CLEAR(p->__pyx_t_13);
  Py_CLEAR(p->__pyx_t_14);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request *)o;
  if (p->__pyx_v_client) {
    e = (*v)(p->__pyx_v_client, a); if (e) return e;
  }
  if (p->__pyx_v_data) {
    e = (*v)(p->__pyx_v_data, a); if (e) return e;
  }
  if (p->__pyx_v_headers) {
    e = (*v)(p->__pyx_v_headers, a); if (e) return e;
  }
  if (p->__pyx_v_response) {
    e = (*v)(p->__pyx_v_response, a); if (e) return e;
  }
  if (p->__pyx_v_response_json) {
    e = (*v)(p->__pyx_v_response_json, a); if (e) return e;
  }
  if (p->__pyx_v_response_text) {
    e = (*v)(p->__pyx_v_response_text, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  if (p->__pyx_t_1) {
    e = (*v)(p->__pyx_t_1, a); if (e) return e;
  }
  if (p->__pyx_t_2) {
    e = (*v)(p->__pyx_t_2, a); if (e) return e;
  }
  if (p->__pyx_t_3) {
    e = (*v)(p->__pyx_t_3, a); if (e) return e;
  }
  if (p->__pyx_t_4) {
    e = (*v)(p->__pyx_t_4, a); if (e) return e;
  }
  if (p->__pyx_t_5) {
    e = (*v)(p->__pyx_t_5, a); if (e) return e;
  }
  if (p->__pyx_t_6) {
    e = (*v)(p->__pyx_t_6, a); if (e) return e;
  }
  if (p->__pyx_t_7) {
    e = (*v)(p->__pyx_t_7, a); if (e) return e;
  }
  if (p->__pyx_t_8) {
    e = (*v)(p->__pyx_t_8, a); if (e) return e;
  }
  if (p->__pyx_t_9) {
    e = (*v)(p->__pyx_t_9, a); if (e) return e;
  }
  if (p->__pyx_t_10) {
    e = (*v)(p->__pyx_t_10, a); if (e) return e;
  }
  if (p->__pyx_t_11) {
    e = (*v)(p->__pyx_t_11, a); if (e) return e;
  }
  if (p->__pyx_t_12) {
    e = (*v)(p->__pyx_t_12, a); if (e) return e;
  }
  if (p->__pyx_t_13) {
    e = (*v)(p->__pyx_t_13, a); if (e) return e;
  }
  if (p->__pyx_t_14) {
    e = (*v)(p->__pyx_t_14, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_8__api_request", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_amount);
  Py_CLEAR(p->__pyx_v_data);
  Py_CLEAR(p->__pyx_v_order_type);
  Py_CLEAR(p->__pyx_v_response_data);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_side);
  Py_CLEAR(p->__pyx_v_symbol);
  Py_CLEAR(p->__pyx_v_url);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders *)o;
  if (p->__pyx_v_data) {
    e = (*v)(p->__pyx_v_data, a); if (e) return e;
  }
  if (p->__pyx_v_response_data) {
    e = (*v)(p->__pyx_v_response_data, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_side) {
    e = (*v)(p->__pyx_v_side, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_9_request_signed_market_orders", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_amount);
  Py_CLEAR(p->__pyx_v_data);
  Py_CLEAR(p->__pyx_v_expires);
  Py_CLEAR(p->__pyx_v_order_type);
  Py_CLEAR(p->__pyx_v_price);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_side);
  Py_CLEAR(p->__pyx_v_symbol);
  Py_CLEAR(p->__pyx_v_url);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order *)o;
  if (p->__pyx_v_data) {
    e = (*v)(p->__pyx_v_data, a); if (e) return e;
  }
  if (p->__pyx_v_expires) {
    e = (*v)(p->__pyx_v_expires, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_side) {
    e = (*v)(p->__pyx_v_side, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_10_request_unsigned_limit_order", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_amount);
  Py_CLEAR(p->__pyx_v_amt_with_decimals);
  Py_CLEAR(p->__pyx_v_base_asset_decimals);
  Py_CLEAR(p->__pyx_v_order);
  Py_CLEAR(p->__pyx_v_orders);
  Py_CLEAR(p->__pyx_v_response);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_side);
  Py_CLEAR(p->__pyx_v_signatures);
  Py_CLEAR(p->__pyx_v_signed_market_orders);
  Py_CLEAR(p->__pyx_v_symbol);
  Py_CLEAR(p->__pyx_v_tx_hash);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order *)o;
  if (p->__pyx_v_amount) {
    e = (*v)(p->__pyx_v_amount, a); if (e) return e;
  }
  if (p->__pyx_v_amt_with_decimals) {
    e = (*v)(p->__pyx_v_amt_with_decimals, a); if (e) return e;
  }
  if (p->__pyx_v_base_asset_decimals) {
    e = (*v)(p->__pyx_v_base_asset_decimals, a); if (e) return e;
  }
  if (p->__pyx_v_order) {
    e = (*v)(p->__pyx_v_order, a); if (e) return e;
  }
  if (p->__pyx_v_orders) {
    e = (*v)(p->__pyx_v_orders, a); if (e) return e;
  }
  if (p->__pyx_v_response) {
    e = (*v)(p->__pyx_v_response, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_side) {
    e = (*v)(p->__pyx_v_side, a); if (e) return e;
  }
  if (p->__pyx_v_signatures) {
    e = (*v)(p->__pyx_v_signatures, a); if (e) return e;
  }
  if (p->__pyx_v_signed_market_orders) {
    e = (*v)(p->__pyx_v_signed_market_orders, a); if (e) return e;
  }
  if (p->__pyx_v_tx_hash) {
    e = (*v)(p->__pyx_v_tx_hash, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_11_submit_market_order", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_amount);
  Py_CLEAR(p->__pyx_v_expires);
  Py_CLEAR(p->__pyx_v_order_hash);
  Py_CLEAR(p->__pyx_v_order_hash_hex);
  Py_CLEAR(p->__pyx_v_price);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_side);
  Py_CLEAR(p->__pyx_v_signature);
  Py_CLEAR(p->__pyx_v_signed_limit_order);
  Py_CLEAR(p->__pyx_v_symbol);
  Py_CLEAR(p->__pyx_v_unsigned_limit_order);
  Py_CLEAR(p->__pyx_v_url);
  Py_CLEAR(p->__pyx_v_zero_ex_order);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order *)o;
  if (p->__pyx_v_amount) {
    e = (*v)(p->__pyx_v_amount, a); if (e) return e;
  }
  if (p->__pyx_v_expires) {
    e = (*v)(p->__pyx_v_expires, a); if (e) return e;
  }
  if (p->__pyx_v_order_hash) {
    e = (*v)(p->__pyx_v_order_hash, a); if (e) return e;
  }
  if (p->__pyx_v_order_hash_hex) {
    e = (*v)(p->__pyx_v_order_hash_hex, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_side) {
    e = (*v)(p->__pyx_v_side, a); if (e) return e;
  }
  if (p->__pyx_v_signature) {
    e = (*v)(p->__pyx_v_signature, a); if (e) return e;
  }
  if (p->__pyx_v_signed_limit_order) {
    e = (*v)(p->__pyx_v_signed_limit_order, a); if (e) return e;
  }
  if (p->__pyx_v_unsigned_limit_order) {
    e = (*v)(p->__pyx_v_unsigned_limit_order, a); if (e) return e;
  }
  if (p->__pyx_v_zero_ex_order) {
    e = (*v)(p->__pyx_v_zero_ex_order, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_12_submit_limit_order", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_incomplete_order_ids);
  Py_CLEAR(p->__pyx_8genexpr1__pyx_v_o);
  Py_CLEAR(p->__pyx_8genexpr2__pyx_v_oid);
  Py_CLEAR(p->__pyx_8genexpr3__pyx_v_oid);
  Py_CLEAR(p->__pyx_8genexpr4__pyx_v_oid);
  Py_CLEAR(p->__pyx_v_receipt);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_tx_hash);
  Py_CLEAR(p->__pyx_t_0);
  Py_CLEAR(p->__pyx_t_1);
  Py_CLEAR(p->__pyx_t_2);
  Py_CLEAR(p->__pyx_t_3);
  Py_CLEAR(p->__pyx_t_4);
  Py_CLEAR(p->__pyx_t_5);
  Py_CLEAR(p->__pyx_t_6);
  Py_CLEAR(p->__pyx_t_7);
  Py_CLEAR(p->__pyx_t_8);
  Py_CLEAR(p->__pyx_t_9);
  Py_CLEAR(p->__pyx_t_10);
  Py_CLEAR(p->__pyx_t_11);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all *)o;
  if (p->__pyx_v_incomplete_order_ids) {
    e = (*v)(p->__pyx_v_incomplete_order_ids, a); if (e) return e;
  }
  if (p->__pyx_8genexpr1__pyx_v_o) {
    e = (*v)(p->__pyx_8genexpr1__pyx_v_o, a); if (e) return e;
  }
  if (p->__pyx_8genexpr2__pyx_v_oid) {
    e = (*v)(p->__pyx_8genexpr2__pyx_v_oid, a); if (e) return e;
  }
  if (p->__pyx_8genexpr3__pyx_v_oid) {
    e = (*v)(p->__pyx_8genexpr3__pyx_v_oid, a); if (e) return e;
  }
  if (p->__pyx_8genexpr4__pyx_v_oid) {
    e = (*v)(p->__pyx_8genexpr4__pyx_v_oid, a); if (e) return e;
  }
  if (p->__pyx_v_receipt) {
    e = (*v)(p->__pyx_v_receipt, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_tx_hash) {
    e = (*v)(p->__pyx_v_tx_hash, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  if (p->__pyx_t_1) {
    e = (*v)(p->__pyx_t_1, a); if (e) return e;
  }
  if (p->__pyx_t_2) {
    e = (*v)(p->__pyx_t_2, a); if (e) return e;
  }
  if (p->__pyx_t_3) {
    e = (*v)(p->__pyx_t_3, a); if (e) return e;
  }
  if (p->__pyx_t_4) {
    e = (*v)(p->__pyx_t_4, a); if (e) return e;
  }
  if (p->__pyx_t_5) {
    e = (*v)(p->__pyx_t_5, a); if (e) return e;
  }
  if (p->__pyx_t_6) {
    e = (*v)(p->__pyx_t_6, a); if (e) return e;
  }
  if (p->__pyx_t_7) {
    e = (*v)(p->__pyx_t_7, a); if (e) return e;
  }
  if (p->__pyx_t_8) {
    e = (*v)(p->__pyx_t_8, a); if (e) return e;
  }
  if (p->__pyx_t_9) {
    e = (*v)(p->__pyx_t_9, a); if (e) return e;
  }
  if (p->__pyx_t_10) {
    e = (*v)(p->__pyx_t_10, a); if (e) return e;
  }
  if (p->__pyx_t_11) {
    e = (*v)(p->__pyx_t_11, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_13_cancel_all", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_avg_price);
  Py_CLEAR(p->__pyx_v_exchange_order_id);
  Py_CLEAR(p->__pyx_v_expires);
  Py_CLEAR(p->__pyx_v_order_id);
  Py_CLEAR(p->__pyx_v_order_side);
  Py_CLEAR(p->__pyx_v_order_type);
  Py_CLEAR(p->__pyx_v_q_amt);
  Py_CLEAR(p->__pyx_v_q_price);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_symbol);
  Py_CLEAR(p->__pyx_v_trading_rule);
  Py_CLEAR(p->__pyx_v_tx_hash);
  Py_CLEAR(p->__pyx_v_zero_ex_order);
  Py_CLEAR(p->__pyx_t_0);
  Py_CLEAR(p->__pyx_t_1);
  Py_CLEAR(p->__pyx_t_2);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade *)o;
  if (p->__pyx_v_avg_price) {
    e = (*v)(p->__pyx_v_avg_price, a); if (e) return e;
  }
  if (p->__pyx_v_exchange_order_id) {
    e = (*v)(p->__pyx_v_exchange_order_id, a); if (e) return e;
  }
  if (p->__pyx_v_expires) {
    e = (*v)(p->__pyx_v_expires, a); if (e) return e;
  }
  if (p->__pyx_v_order_side) {
    e = (*v)(p->__pyx_v_order_side, a); if (e) return e;
  }
  if (p->__pyx_v_order_type) {
    e = (*v)(p->__pyx_v_order_type, a); if (e) return e;
  }
  if (p->__pyx_v_q_amt) {
    e = (*v)(p->__pyx_v_q_amt, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_trading_rule) {
    e = (*v)(((PyObject *)p->__pyx_v_trading_rule), a); if (e) return e;
  }
  if (p->__pyx_v_tx_hash) {
    e = (*v)(p->__pyx_v_tx_hash, a); if (e) return e;
  }
  if (p->__pyx_v_zero_ex_order) {
    e = (*v)(p->__pyx_v_zero_ex_order, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  if (p->__pyx_t_1) {
    e = (*v)(p->__pyx_t_1, a); if (e) return e;
  }
  if (p->__pyx_t_2) {
    e = (*v)(p->__pyx_t_2, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_14_execute_trade", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_client_order_id);
  Py_CLEAR(p->__pyx_v_order);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order *)o;
  if (p->__pyx_v_order) {
    e = (*v)(p->__pyx_v_order, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_15_cancel_order", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_order_hash);
  Py_CLEAR(p->__pyx_v_response_data);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_url);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order *)o;
  if (p->__pyx_v_response_data) {
    e = (*v)(p->__pyx_v_response_data, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_16_get_order", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders[8];
static int __pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders = 0;

static PyObject *__pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders)))) {
    o = (PyObject*)__pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders[--__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders];
    memset(o, 0, sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders(PyObject *o) {
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_response_data);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_url);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders)))) {
    __pyx_freelist_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders[__pyx_freecount_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders++] = ((struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *p = (struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders *)o;
  if (p->__pyx_v_response_data) {
    e = (*v)(p->__pyx_v_response_data, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders = {
  PyVarObject_HEAD_INIT(0, 0)
  "wings.market.radar_relay_market.__pyx_scope_struct_17_list_account_orders", /*tp_name*/
  sizeof(struct __pyx_obj_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_radar_relay_market(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_radar_relay_market},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "radar_relay_market",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_0x2240Dab907db71e64d3E0dbA4800c8, __pyx_k_0x2240Dab907db71e64d3E0dbA4800c8, sizeof(__pyx_k_0x2240Dab907db71e64d3E0dbA4800c8), 0, 1, 0, 0},
  {&__pyx_kp_u_0x4F833a24e1f95D70F028921e27040C, __pyx_k_0x4F833a24e1f95D70F028921e27040C, sizeof(__pyx_k_0x4F833a24e1f95D70F028921e27040C), 0, 1, 0, 0},
  {&__pyx_kp_u_1e, __pyx_k_1e, sizeof(__pyx_k_1e), 0, 1, 0, 0},
  {&__pyx_kp_u_1e_2, __pyx_k_1e_2, sizeof(__pyx_k_1e_2), 0, 1, 0, 0},
  {&__pyx_n_s_API_CALL_TIMEOUT, __pyx_k_API_CALL_TIMEOUT, sizeof(__pyx_k_API_CALL_TIMEOUT), 0, 0, 1, 1},
  {&__pyx_n_s_BUY, __pyx_k_BUY, sizeof(__pyx_k_BUY), 0, 0, 1, 1},
  {&__pyx_n_u_BUY, __pyx_k_BUY, sizeof(__pyx_k_BUY), 0, 1, 0, 1},
  {&__pyx_n_s_BuyOrderCompleted, __pyx_k_BuyOrderCompleted, sizeof(__pyx_k_BuyOrderCompleted), 0, 0, 1, 1},
  {&__pyx_n_s_BuyOrderCompletedEvent, __pyx_k_BuyOrderCompletedEvent, sizeof(__pyx_k_BuyOrderCompletedEvent), 0, 0, 1, 1},
  {&__pyx_n_s_BuyOrderCreated, __pyx_k_BuyOrderCreated, sizeof(__pyx_k_BuyOrderCreated), 0, 0, 1, 1},
  {&__pyx_n_s_BuyOrderCreatedEvent, __pyx_k_BuyOrderCreatedEvent, sizeof(__pyx_k_BuyOrderCreatedEvent), 0, 0, 1, 1},
  {&__pyx_kp_u_Buy_order_amount, __pyx_k_Buy_order_amount, sizeof(__pyx_k_Buy_order_amount), 0, 1, 0, 0},
  {&__pyx_n_u_CANCELED, __pyx_k_CANCELED, sizeof(__pyx_k_CANCELED), 0, 1, 0, 1},
  {&__pyx_n_u_CANCELLED, __pyx_k_CANCELLED, sizeof(__pyx_k_CANCELLED), 0, 1, 0, 1},
  {&__pyx_n_s_CancellationResult, __pyx_k_CancellationResult, sizeof(__pyx_k_CancellationResult), 0, 0, 1, 1},
  {&__pyx_n_s_CancelledError, __pyx_k_CancelledError, sizeof(__pyx_k_CancelledError), 0, 0, 1, 1},
  {&__pyx_kp_u_Check_transaction_hash, __pyx_k_Check_transaction_hash, sizeof(__pyx_k_Check_transaction_hash), 0, 1, 0, 0},
  {&__pyx_n_s_ClientSession, __pyx_k_ClientSession, sizeof(__pyx_k_ClientSession), 0, 0, 1, 1},
  {&__pyx_n_s_Decimal, __pyx_k_Decimal, sizeof(__pyx_k_Decimal), 0, 0, 1, 1},
  {&__pyx_n_s_Dict, __pyx_k_Dict, sizeof(__pyx_k_Dict), 0, 0, 1, 1},
  {&__pyx_n_s_EXCHANGE_API, __pyx_k_EXCHANGE_API, sizeof(__pyx_k_EXCHANGE_API), 0, 0, 1, 1},
  {&__pyx_n_u_EXPIRED, __pyx_k_EXPIRED, sizeof(__pyx_k_EXPIRED), 0, 1, 0, 1},
  {&__pyx_kp_u_Error_fetching_data_from, __pyx_k_Error_fetching_data_from, sizeof(__pyx_k_Error_fetching_data_from), 0, 1, 0, 0},
  {&__pyx_kp_u_Error_fetching_status_update_for, __pyx_k_Error_fetching_status_update_for, sizeof(__pyx_k_Error_fetching_status_update_for), 0, 1, 0, 0},
  {&__pyx_kp_u_Error_parsing_the_symbol, __pyx_k_Error_parsing_the_symbol, sizeof(__pyx_k_Error_parsing_the_symbol), 0, 1, 0, 0},
  {&__pyx_kp_u_Error_submitting_trade_order_to, __pyx_k_Error_submitting_trade_order_to, sizeof(__pyx_k_Error_submitting_trade_order_to), 0, 1, 0, 0},
  {&__pyx_n_s_Event, __pyx_k_Event, sizeof(__pyx_k_Event), 0, 0, 1, 1},
  {&__pyx_kp_u_Failed_to_cancel_order, __pyx_k_Failed_to_cancel_order, sizeof(__pyx_k_Failed_to_cancel_order), 0, 1, 0, 0},
  {&__pyx_n_u_False, __pyx_k_False, sizeof(__pyx_k_False), 0, 1, 0, 1},
  {&__pyx_kp_u_Filled, __pyx_k_Filled, sizeof(__pyx_k_Filled), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_HTTPProvider, __pyx_k_HTTPProvider, sizeof(__pyx_k_HTTPProvider), 0, 0, 1, 1},
  {&__pyx_kp_u_HTTP_status_is, __pyx_k_HTTP_status_is, sizeof(__pyx_k_HTTP_status_is), 0, 1, 0, 0},
  {&__pyx_n_s_IOError, __pyx_k_IOError, sizeof(__pyx_k_IOError), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_n_s_InFlightOrder, __pyx_k_InFlightOrder, sizeof(__pyx_k_InFlightOrder), 0, 0, 1, 1},
  {&__pyx_kp_u_InFlightOrder_client_order_id, __pyx_k_InFlightOrder_client_order_id, sizeof(__pyx_k_InFlightOrder_client_order_id), 0, 1, 0, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x12, __pyx_k_Incompatible_checksums_s_vs_0x12, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x12), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x46, __pyx_k_Incompatible_checksums_s_vs_0x46, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x46), 0, 0, 1, 0},
  {&__pyx_kp_u_Invalid_side_Aborting, __pyx_k_Invalid_side_Aborting, sizeof(__pyx_k_Invalid_side_Aborting), 0, 1, 0, 0},
  {&__pyx_n_s_LIMIT, __pyx_k_LIMIT, sizeof(__pyx_k_LIMIT), 0, 0, 1, 1},
  {&__pyx_n_s_LimitOrder, __pyx_k_LimitOrder, sizeof(__pyx_k_LimitOrder), 0, 0, 1, 1},
  {&__pyx_kp_u_Limit_orders_require_a_price_Abo, __pyx_k_Limit_orders_require_a_price_Abo, sizeof(__pyx_k_Limit_orders_require_a_price_Abo), 0, 1, 0, 0},
  {&__pyx_kp_u_Limit_orders_require_an_expirati, __pyx_k_Limit_orders_require_an_expirati, sizeof(__pyx_k_Limit_orders_require_an_expirati), 0, 1, 0, 0},
  {&__pyx_n_s_List, __pyx_k_List, sizeof(__pyx_k_List), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET, __pyx_k_MARKET, sizeof(__pyx_k_MARKET), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_BUY_ORDER_COMPLETED_EVENT, __pyx_k_MARKET_BUY_ORDER_COMPLETED_EVENT, sizeof(__pyx_k_MARKET_BUY_ORDER_COMPLETED_EVENT), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_BUY_ORDER_CREATED_EVENT_T, __pyx_k_MARKET_BUY_ORDER_CREATED_EVENT_T, sizeof(__pyx_k_MARKET_BUY_ORDER_CREATED_EVENT_T), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_ORDER_CANCELLED_EVENT_TAG, __pyx_k_MARKET_ORDER_CANCELLED_EVENT_TAG, sizeof(__pyx_k_MARKET_ORDER_CANCELLED_EVENT_TAG), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_ORDER_EXPIRED_EVENT_TAG, __pyx_k_MARKET_ORDER_EXPIRED_EVENT_TAG, sizeof(__pyx_k_MARKET_ORDER_EXPIRED_EVENT_TAG), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_ORDER_FILLED_EVENT_TAG, __pyx_k_MARKET_ORDER_FILLED_EVENT_TAG, sizeof(__pyx_k_MARKET_ORDER_FILLED_EVENT_TAG), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_RECEIVED_ASSET_EVENT_TAG, __pyx_k_MARKET_RECEIVED_ASSET_EVENT_TAG, sizeof(__pyx_k_MARKET_RECEIVED_ASSET_EVENT_TAG), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_SELL_ORDER_COMPLETED_EVEN, __pyx_k_MARKET_SELL_ORDER_COMPLETED_EVEN, sizeof(__pyx_k_MARKET_SELL_ORDER_COMPLETED_EVEN), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_SELL_ORDER_CREATED_EVENT, __pyx_k_MARKET_SELL_ORDER_CREATED_EVENT, sizeof(__pyx_k_MARKET_SELL_ORDER_CREATED_EVENT), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT, __pyx_k_MARKET_TRANSACTION_FAILURE_EVENT, sizeof(__pyx_k_MARKET_TRANSACTION_FAILURE_EVENT), 0, 0, 1, 1},
  {&__pyx_n_s_MARKET_WITHDRAW_ASSET_EVENT_TAG, __pyx_k_MARKET_WITHDRAW_ASSET_EVENT_TAG, sizeof(__pyx_k_MARKET_WITHDRAW_ASSET_EVENT_TAG), 0, 0, 1, 1},
  {&__pyx_n_s_MarketEvent, __pyx_k_MarketEvent, sizeof(__pyx_k_MarketEvent), 0, 0, 1, 1},
  {&__pyx_n_s_MarketTransactionFailureEvent, __pyx_k_MarketTransactionFailureEvent, sizeof(__pyx_k_MarketTransactionFailureEvent), 0, 0, 1, 1},
  {&__pyx_n_s_NaN, __pyx_k_NaN, sizeof(__pyx_k_NaN), 0, 0, 1, 1},
  {&__pyx_kp_u_No_order_book_exists_for, __pyx_k_No_order_book_exists_for, sizeof(__pyx_k_No_order_book_exists_for), 0, 1, 0, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_kp_u_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 1, 0, 0},
  {&__pyx_n_u_OPEN, __pyx_k_OPEN, sizeof(__pyx_k_OPEN), 0, 1, 0, 1},
  {&__pyx_n_s_ORDER_EXPIRY_TIME, __pyx_k_ORDER_EXPIRY_TIME, sizeof(__pyx_k_ORDER_EXPIRY_TIME), 0, 0, 1, 1},
  {&__pyx_n_s_Optional, __pyx_k_Optional, sizeof(__pyx_k_Optional), 0, 0, 1, 1},
  {&__pyx_n_s_Order, __pyx_k_Order, sizeof(__pyx_k_Order), 0, 0, 1, 1},
  {&__pyx_n_s_OrderBookTrackerDataSourceType, __pyx_k_OrderBookTrackerDataSourceType, sizeof(__pyx_k_OrderBookTrackerDataSourceType), 0, 0, 1, 1},
  {&__pyx_n_s_OrderCancelled, __pyx_k_OrderCancelled, sizeof(__pyx_k_OrderCancelled), 0, 0, 1, 1},
  {&__pyx_n_s_OrderCancelledEvent, __pyx_k_OrderCancelledEvent, sizeof(__pyx_k_OrderCancelledEvent), 0, 0, 1, 1},
  {&__pyx_n_s_OrderExpired, __pyx_k_OrderExpired, sizeof(__pyx_k_OrderExpired), 0, 0, 1, 1},
  {&__pyx_n_s_OrderExpiredEvent, __pyx_k_OrderExpiredEvent, sizeof(__pyx_k_OrderExpiredEvent), 0, 0, 1, 1},
  {&__pyx_n_s_OrderFilled, __pyx_k_OrderFilled, sizeof(__pyx_k_OrderFilled), 0, 0, 1, 1},
  {&__pyx_n_s_OrderFilledEvent, __pyx_k_OrderFilledEvent, sizeof(__pyx_k_OrderFilledEvent), 0, 0, 1, 1},
  {&__pyx_n_s_OrderType, __pyx_k_OrderType, sizeof(__pyx_k_OrderType), 0, 0, 1, 1},
  {&__pyx_kp_u_Order_not_found_in_tracked_orde, __pyx_k_Order_not_found_in_tracked_orde, sizeof(__pyx_k_Order_not_found_in_tracked_orde), 0, 1, 0, 0},
  {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_Queue, __pyx_k_Queue, sizeof(__pyx_k_Queue), 0, 0, 1, 1},
  {&__pyx_n_s_RADAR_RELAY_REST_ENDPOINT, __pyx_k_RADAR_RELAY_REST_ENDPOINT, sizeof(__pyx_k_RADAR_RELAY_REST_ENDPOINT), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket, __pyx_k_RadarRelayMarket, sizeof(__pyx_k_RadarRelayMarket), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket__api_request, __pyx_k_RadarRelayMarket__api_request, sizeof(__pyx_k_RadarRelayMarket__api_request), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket__approval_tx_po, __pyx_k_RadarRelayMarket__approval_tx_po, sizeof(__pyx_k_RadarRelayMarket__approval_tx_po), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket__status_polling, __pyx_k_RadarRelayMarket__status_polling, sizeof(__pyx_k_RadarRelayMarket__status_polling), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket__update_limit_o, __pyx_k_RadarRelayMarket__update_limit_o, sizeof(__pyx_k_RadarRelayMarket__update_limit_o), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket__update_market, __pyx_k_RadarRelayMarket__update_market, sizeof(__pyx_k_RadarRelayMarket__update_market), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket__update_trading, __pyx_k_RadarRelayMarket__update_trading, sizeof(__pyx_k_RadarRelayMarket__update_trading), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_cancel_all, __pyx_k_RadarRelayMarket_cancel_all, sizeof(__pyx_k_RadarRelayMarket_cancel_all), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_cancel_order, __pyx_k_RadarRelayMarket_cancel_order, sizeof(__pyx_k_RadarRelayMarket_cancel_order), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_coro_scheduler, __pyx_k_RadarRelayMarket_coro_scheduler, sizeof(__pyx_k_RadarRelayMarket_coro_scheduler), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_execute_trade, __pyx_k_RadarRelayMarket_execute_trade, sizeof(__pyx_k_RadarRelayMarket_execute_trade), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_get_order, __pyx_k_RadarRelayMarket_get_order, sizeof(__pyx_k_RadarRelayMarket_get_order), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_list_account_or, __pyx_k_RadarRelayMarket_list_account_or, sizeof(__pyx_k_RadarRelayMarket_list_account_or), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_list_market, __pyx_k_RadarRelayMarket_list_market, sizeof(__pyx_k_RadarRelayMarket_list_market), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_request_signed, __pyx_k_RadarRelayMarket_request_signed, sizeof(__pyx_k_RadarRelayMarket_request_signed), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_request_unsigne, __pyx_k_RadarRelayMarket_request_unsigne, sizeof(__pyx_k_RadarRelayMarket_request_unsigne), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_schedule_async, __pyx_k_RadarRelayMarket_schedule_async, sizeof(__pyx_k_RadarRelayMarket_schedule_async), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_submit_limit_or, __pyx_k_RadarRelayMarket_submit_limit_or, sizeof(__pyx_k_RadarRelayMarket_submit_limit_or), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayMarket_submit_market_o, __pyx_k_RadarRelayMarket_submit_market_o, sizeof(__pyx_k_RadarRelayMarket_submit_market_o), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayOrderBookTracker, __pyx_k_RadarRelayOrderBookTracker, sizeof(__pyx_k_RadarRelayOrderBookTracker), 0, 0, 1, 1},
  {&__pyx_n_s_RadarRelayTransactionTracker, __pyx_k_RadarRelayTransactionTracker, sizeof(__pyx_k_RadarRelayTransactionTracker), 0, 0, 1, 1},
  {&__pyx_n_s_ReceivedAsset, __pyx_k_ReceivedAsset, sizeof(__pyx_k_ReceivedAsset), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_SELL, __pyx_k_SELL, sizeof(__pyx_k_SELL), 0, 0, 1, 1},
  {&__pyx_n_u_SELL, __pyx_k_SELL, sizeof(__pyx_k_SELL), 0, 1, 0, 1},
  {&__pyx_n_s_SellOrderCompleted, __pyx_k_SellOrderCompleted, sizeof(__pyx_k_SellOrderCompleted), 0, 0, 1, 1},
  {&__pyx_n_s_SellOrderCompletedEvent, __pyx_k_SellOrderCompletedEvent, sizeof(__pyx_k_SellOrderCompletedEvent), 0, 0, 1, 1},
  {&__pyx_n_s_SellOrderCreated, __pyx_k_SellOrderCreated, sizeof(__pyx_k_SellOrderCreated), 0, 0, 1, 1},
  {&__pyx_n_s_SellOrderCreatedEvent, __pyx_k_SellOrderCreatedEvent, sizeof(__pyx_k_SellOrderCreatedEvent), 0, 0, 1, 1},
  {&__pyx_kp_u_Server_Error_Bad_Gateway, __pyx_k_Server_Error_Bad_Gateway, sizeof(__pyx_k_Server_Error_Bad_Gateway), 0, 1, 0, 0},
  {&__pyx_kp_u_Skipping, __pyx_k_Skipping, sizeof(__pyx_k_Skipping), 0, 1, 0, 0},
  {&__pyx_kp_u_The_limit_buy_order, __pyx_k_The_limit_buy_order, sizeof(__pyx_k_The_limit_buy_order), 0, 1, 0, 0},
  {&__pyx_kp_u_The_limit_order, __pyx_k_The_limit_order, sizeof(__pyx_k_The_limit_order), 0, 1, 0, 0},
  {&__pyx_kp_u_The_limit_sell_order, __pyx_k_The_limit_sell_order, sizeof(__pyx_k_The_limit_sell_order), 0, 1, 0, 0},
  {&__pyx_kp_u_The_market_buy_order, __pyx_k_The_market_buy_order, sizeof(__pyx_k_The_market_buy_order), 0, 1, 0, 0},
  {&__pyx_kp_u_The_market_order, __pyx_k_The_market_order, sizeof(__pyx_k_The_market_order), 0, 1, 0, 0},
  {&__pyx_kp_u_The_market_sell_order, __pyx_k_The_market_sell_order, sizeof(__pyx_k_The_market_sell_order), 0, 1, 0, 0},
  {&__pyx_n_s_TradeType, __pyx_k_TradeType, sizeof(__pyx_k_TradeType), 0, 0, 1, 1},
  {&__pyx_n_s_TradingRule, __pyx_k_TradingRule, sizeof(__pyx_k_TradingRule), 0, 0, 1, 1},
  {&__pyx_kp_u_TradingRule_symbol, __pyx_k_TradingRule_symbol, sizeof(__pyx_k_TradingRule_symbol), 0, 1, 0, 0},
  {&__pyx_n_s_TransactionFailure, __pyx_k_TransactionFailure, sizeof(__pyx_k_TransactionFailure), 0, 0, 1, 1},
  {&__pyx_n_u_True, __pyx_k_True, sizeof(__pyx_k_True), 0, 1, 0, 1},
  {&__pyx_n_s_Tuple, __pyx_k_Tuple, sizeof(__pyx_k_Tuple), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_u_UNFUNDED, __pyx_k_UNFUNDED, sizeof(__pyx_k_UNFUNDED), 0, 1, 0, 1},
  {&__pyx_n_s_UPDATE_MARKET_ORDERS_INTERVAL, __pyx_k_UPDATE_MARKET_ORDERS_INTERVAL, sizeof(__pyx_k_UPDATE_MARKET_ORDERS_INTERVAL), 0, 0, 1, 1},
  {&__pyx_n_s_UPDATE_OPEN_LIMIT_ORDERS_INTERVA, __pyx_k_UPDATE_OPEN_LIMIT_ORDERS_INTERVA, sizeof(__pyx_k_UPDATE_OPEN_LIMIT_ORDERS_INTERVA), 0, 0, 1, 1},
  {&__pyx_n_s_UPDATE_RULES_INTERVAL, __pyx_k_UPDATE_RULES_INTERVAL, sizeof(__pyx_k_UPDATE_RULES_INTERVAL), 0, 0, 1, 1},
  {&__pyx_kp_u_Unexpected_error_cancelling_orde, __pyx_k_Unexpected_error_cancelling_orde, sizeof(__pyx_k_Unexpected_error_cancelling_orde), 0, 1, 0, 0},
  {&__pyx_kp_u_Unexpected_error_while_fetching, __pyx_k_Unexpected_error_while_fetching, sizeof(__pyx_k_Unexpected_error_while_fetching), 0, 1, 0, 0},
  {&__pyx_kp_u_Unexpected_error_while_fetching_2, __pyx_k_Unexpected_error_while_fetching_2, sizeof(__pyx_k_Unexpected_error_while_fetching_2), 0, 1, 0, 0},
  {&__pyx_kp_u_Unrecognized_transaction_status, __pyx_k_Unrecognized_transaction_status, sizeof(__pyx_k_Unrecognized_transaction_status), 0, 1, 0, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_Web3, __pyx_k_Web3, sizeof(__pyx_k_Web3), 0, 0, 1, 1},
  {&__pyx_n_s_Web3Wallet, __pyx_k_Web3Wallet, sizeof(__pyx_k_Web3Wallet), 0, 0, 1, 1},
  {&__pyx_n_s_WithdrawAsset, __pyx_k_WithdrawAsset, sizeof(__pyx_k_WithdrawAsset), 0, 0, 1, 1},
  {&__pyx_n_s_ZERO_EX_MAINNET_ERC20_PROXY, __pyx_k_ZERO_EX_MAINNET_ERC20_PROXY, sizeof(__pyx_k_ZERO_EX_MAINNET_ERC20_PROXY), 0, 0, 1, 1},
  {&__pyx_n_s_ZERO_EX_MAINNET_EXCHANGE_ADDRESS, __pyx_k_ZERO_EX_MAINNET_EXCHANGE_ADDRESS, sizeof(__pyx_k_ZERO_EX_MAINNET_EXCHANGE_ADDRESS), 0, 0, 1, 1},
  {&__pyx_n_s_ZeroExExchange, __pyx_k_ZeroExExchange, sizeof(__pyx_k_ZeroExExchange), 0, 0, 1, 1},
  {&__pyx_kp_u__12, __pyx_k__12, sizeof(__pyx_k__12), 0, 1, 0, 0},
  {&__pyx_kp_u__15, __pyx_k__15, sizeof(__pyx_k__15), 0, 1, 0, 0},
  {&__pyx_kp_u__19, __pyx_k__19, sizeof(__pyx_k__19), 0, 1, 0, 0},
  {&__pyx_kp_u__27, __pyx_k__27, sizeof(__pyx_k__27), 0, 1, 0, 0},
  {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},
  {&__pyx_kp_u__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 1, 0, 0},
  {&__pyx_kp_u__8, __pyx_k__8, sizeof(__pyx_k__8), 0, 1, 0, 0},
  {&__pyx_kp_u__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 1, 0, 0},
  {&__pyx_kp_u_accounts, __pyx_k_accounts, sizeof(__pyx_k_accounts), 0, 1, 0, 0},
  {&__pyx_n_s_address, __pyx_k_address, sizeof(__pyx_k_address), 0, 0, 1, 1},
  {&__pyx_n_s_aenter, __pyx_k_aenter, sizeof(__pyx_k_aenter), 0, 0, 1, 1},
  {&__pyx_n_s_aexit, __pyx_k_aexit, sizeof(__pyx_k_aexit), 0, 0, 1, 1},
  {&__pyx_n_s_aiohttp, __pyx_k_aiohttp, sizeof(__pyx_k_aiohttp), 0, 0, 1, 1},
  {&__pyx_n_s_amount, __pyx_k_amount, sizeof(__pyx_k_amount), 0, 0, 1, 1},
  {&__pyx_kp_u_amount_2, __pyx_k_amount_2, sizeof(__pyx_k_amount_2), 0, 1, 0, 0},
  {&__pyx_n_s_amount_decimals, __pyx_k_amount_decimals, sizeof(__pyx_k_amount_decimals), 0, 0, 1, 1},
  {&__pyx_kp_u_amount_decimals_2, __pyx_k_amount_decimals_2, sizeof(__pyx_k_amount_decimals_2), 0, 1, 0, 0},
  {&__pyx_n_s_any, __pyx_k_any, sizeof(__pyx_k_any), 0, 0, 1, 1},
  {&__pyx_n_s_api_request, __pyx_k_api_request, sizeof(__pyx_k_api_request), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_approval_tx_polling_loop, __pyx_k_approval_tx_polling_loop, sizeof(__pyx_k_approval_tx_polling_loop), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_async_timeout, __pyx_k_async_timeout, sizeof(__pyx_k_async_timeout), 0, 0, 1, 1},
  {&__pyx_n_s_asyncio, __pyx_k_asyncio, sizeof(__pyx_k_asyncio), 0, 0, 1, 1},
  {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
  {&__pyx_n_s_asyncio_tasks, __pyx_k_asyncio_tasks, sizeof(__pyx_k_asyncio_tasks), 0, 0, 1, 1},
  {&__pyx_kp_u_available_amount, __pyx_k_available_amount, sizeof(__pyx_k_available_amount), 0, 1, 0, 0},
  {&__pyx_n_s_available_amount_2, __pyx_k_available_amount_2, sizeof(__pyx_k_available_amount_2), 0, 0, 1, 1},
  {&__pyx_n_u_averagePrice, __pyx_k_averagePrice, sizeof(__pyx_k_averagePrice), 0, 1, 0, 1},
  {&__pyx_n_s_await, __pyx_k_await, sizeof(__pyx_k_await), 0, 0, 1, 1},
  {&__pyx_n_u_baseTokenDecimals, __pyx_k_baseTokenDecimals, sizeof(__pyx_k_baseTokenDecimals), 0, 1, 0, 1},
  {&__pyx_n_s_base_asset, __pyx_k_base_asset, sizeof(__pyx_k_base_asset), 0, 0, 1, 1},
  {&__pyx_kp_u_buy, __pyx_k_buy, sizeof(__pyx_k_buy), 0, 1, 0, 0},
  {&__pyx_n_s_c_did_timeout_tx, __pyx_k_c_did_timeout_tx, sizeof(__pyx_k_c_did_timeout_tx), 0, 0, 1, 1},
  {&__pyx_n_s_cancel_all, __pyx_k_cancel_all, sizeof(__pyx_k_cancel_all), 0, 0, 1, 1},
  {&__pyx_n_s_cancel_order, __pyx_k_cancel_order, sizeof(__pyx_k_cancel_order), 0, 0, 1, 1},
  {&__pyx_n_s_cancel_orders_up_to, __pyx_k_cancel_orders_up_to, sizeof(__pyx_k_cancel_orders_up_to), 0, 0, 1, 1},
  {&__pyx_n_s_ceil, __pyx_k_ceil, sizeof(__pyx_k_ceil), 0, 0, 1, 1},
  {&__pyx_n_s_check_and_fix_approval_amounts, __pyx_k_check_and_fix_approval_amounts, sizeof(__pyx_k_check_and_fix_approval_amounts), 0, 0, 1, 1},
  {&__pyx_n_s_client_order_id, __pyx_k_client_order_id, sizeof(__pyx_k_client_order_id), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_collections, __pyx_k_collections, sizeof(__pyx_k_collections), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_s_coro, __pyx_k_coro, sizeof(__pyx_k_coro), 0, 0, 1, 1},
  {&__pyx_n_s_coro_queue, __pyx_k_coro_queue, sizeof(__pyx_k_coro_queue), 0, 0, 1, 1},
  {&__pyx_n_s_coro_scheduler, __pyx_k_coro_scheduler, sizeof(__pyx_k_coro_scheduler), 0, 0, 1, 1},
  {&__pyx_n_s_create_future, __pyx_k_create_future, sizeof(__pyx_k_create_future), 0, 0, 1, 1},
  {&__pyx_n_s_current_backend, __pyx_k_current_backend, sizeof(__pyx_k_current_backend), 0, 0, 1, 1},
  {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
  {&__pyx_n_s_data_source_type, __pyx_k_data_source_type, sizeof(__pyx_k_data_source_type), 0, 0, 1, 1},
  {&__pyx_n_s_decimal, __pyx_k_decimal, sizeof(__pyx_k_decimal), 0, 0, 1, 1},
  {&__pyx_n_s_deepcopy, __pyx_k_deepcopy, sizeof(__pyx_k_deepcopy), 0, 0, 1, 1},
  {&__pyx_n_s_deque, __pyx_k_deque, sizeof(__pyx_k_deque), 0, 0, 1, 1},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_ensure_future, __pyx_k_ensure_future, sizeof(__pyx_k_ensure_future), 0, 0, 1, 1},
  {&__pyx_n_s_error, __pyx_k_error, sizeof(__pyx_k_error), 0, 0, 1, 1},
  {&__pyx_n_s_eth, __pyx_k_eth, sizeof(__pyx_k_eth), 0, 0, 1, 1},
  {&__pyx_n_s_exc_info, __pyx_k_exc_info, sizeof(__pyx_k_exc_info), 0, 0, 1, 1},
  {&__pyx_n_s_exchange_address, __pyx_k_exchange_address, sizeof(__pyx_k_exchange_address), 0, 0, 1, 1},
  {&__pyx_n_s_exchange_order_id, __pyx_k_exchange_order_id, sizeof(__pyx_k_exchange_order_id), 0, 0, 1, 1},
  {&__pyx_kp_u_exchange_order_id_2, __pyx_k_exchange_order_id_2, sizeof(__pyx_k_exchange_order_id_2), 0, 1, 0, 0},
  {&__pyx_n_s_execute_trade, __pyx_k_execute_trade, sizeof(__pyx_k_execute_trade), 0, 0, 1, 1},
  {&__pyx_kp_u_executed_amount, __pyx_k_executed_amount, sizeof(__pyx_k_executed_amount), 0, 1, 0, 0},
  {&__pyx_n_s_executed_amount_2, __pyx_k_executed_amount_2, sizeof(__pyx_k_executed_amount_2), 0, 0, 1, 1},
  {&__pyx_n_u_expiration, __pyx_k_expiration, sizeof(__pyx_k_expiration), 0, 1, 0, 1},
  {&__pyx_kp_u_expiration_time, __pyx_k_expiration_time, sizeof(__pyx_k_expiration_time), 0, 1, 0, 0},
  {&__pyx_n_u_expiration_ts, __pyx_k_expiration_ts, sizeof(__pyx_k_expiration_ts), 0, 1, 0, 1},
  {&__pyx_n_s_expires, __pyx_k_expires, sizeof(__pyx_k_expires), 0, 0, 1, 1},
  {&__pyx_n_s_fix_signature, __pyx_k_fix_signature, sizeof(__pyx_k_fix_signature), 0, 0, 1, 1},
  {&__pyx_kp_u_for_more_details, __pyx_k_for_more_details, sizeof(__pyx_k_for_more_details), 0, 1, 0, 0},
  {&__pyx_n_s_fut, __pyx_k_fut, sizeof(__pyx_k_fut), 0, 0, 1, 1},
  {&__pyx_kp_u_gas_fee_amount, __pyx_k_gas_fee_amount, sizeof(__pyx_k_gas_fee_amount), 0, 1, 0, 0},
  {&__pyx_n_s_gas_fee_amount_2, __pyx_k_gas_fee_amount_2, sizeof(__pyx_k_gas_fee_amount_2), 0, 0, 1, 1},
  {&__pyx_n_s_gather, __pyx_k_gather, sizeof(__pyx_k_gather), 0, 0, 1, 1},
  {&__pyx_n_s_generate_order_hash_hex, __pyx_k_generate_order_hash_hex, sizeof(__pyx_k_generate_order_hash_hex), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_u_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 1, 0, 1},
  {&__pyx_n_s_getLogger, __pyx_k_getLogger, sizeof(__pyx_k_getLogger), 0, 0, 1, 1},
  {&__pyx_n_s_getTransactionReceipt, __pyx_k_getTransactionReceipt, sizeof(__pyx_k_getTransactionReceipt), 0, 0, 1, 1},
  {&__pyx_n_s_get_all_balances, __pyx_k_get_all_balances, sizeof(__pyx_k_get_all_balances), 0, 0, 1, 1},
  {&__pyx_n_s_get_event_loop, __pyx_k_get_event_loop, sizeof(__pyx_k_get_event_loop), 0, 0, 1, 1},
  {&__pyx_n_s_get_order, __pyx_k_get_order, sizeof(__pyx_k_get_order), 0, 0, 1, 1},
  {&__pyx_n_s_get_order_hash_hex, __pyx_k_get_order_hash_hex, sizeof(__pyx_k_get_order_hash_hex), 0, 0, 1, 1},
  {&__pyx_n_s_get_tx_hash_receipt, __pyx_k_get_tx_hash_receipt, sizeof(__pyx_k_get_tx_hash_receipt), 0, 0, 1, 1},
  {&__pyx_n_s_get_zero_ex_signature, __pyx_k_get_zero_ex_signature, sizeof(__pyx_k_get_zero_ex_signature), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_kp_u_has_cancelled_according_to_orde, __pyx_k_has_cancelled_according_to_orde, sizeof(__pyx_k_has_cancelled_according_to_orde), 0, 1, 0, 0},
  {&__pyx_kp_u_has_completed_according_to_order, __pyx_k_has_completed_according_to_order, sizeof(__pyx_k_has_completed_according_to_order), 0, 1, 0, 0},
  {&__pyx_kp_u_has_completed_according_to_tran, __pyx_k_has_completed_according_to_tran, sizeof(__pyx_k_has_completed_according_to_tran), 0, 1, 0, 0},
  {&__pyx_kp_u_has_expired_according_to_order, __pyx_k_has_expired_according_to_order, sizeof(__pyx_k_has_expired_according_to_order), 0, 1, 0, 0},
  {&__pyx_kp_u_has_failed_according_to_transact, __pyx_k_has_failed_according_to_transact, sizeof(__pyx_k_has_failed_according_to_transact), 0, 1, 0, 0},
  {&__pyx_kp_u_has_failedaccording_to_order_st, __pyx_k_has_failedaccording_to_order_st, sizeof(__pyx_k_has_failedaccording_to_order_st), 0, 1, 0, 0},
  {&__pyx_n_s_headers, __pyx_k_headers, sizeof(__pyx_k_headers), 0, 0, 1, 1},
  {&__pyx_n_s_hexstr, __pyx_k_hexstr, sizeof(__pyx_k_hexstr), 0, 0, 1, 1},
  {&__pyx_n_s_http_method, __pyx_k_http_method, sizeof(__pyx_k_http_method), 0, 0, 1, 1},
  {&__pyx_kp_u_https_api_radarrelay_com_v2, __pyx_k_https_api_radarrelay_com_v2, sizeof(__pyx_k_https_api_radarrelay_com_v2), 0, 1, 0, 0},
  {&__pyx_n_u_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 1, 0, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_info, __pyx_k_info, sizeof(__pyx_k_info), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_inspect, __pyx_k_inspect, sizeof(__pyx_k_inspect), 0, 0, 1, 1},
  {&__pyx_n_s_interval, __pyx_k_interval, sizeof(__pyx_k_interval), 0, 0, 1, 1},
  {&__pyx_n_s_is_buy, __pyx_k_is_buy, sizeof(__pyx_k_is_buy), 0, 0, 1, 1},
  {&__pyx_kp_u_is_buy_2, __pyx_k_is_buy_2, sizeof(__pyx_k_is_buy_2), 0, 1, 0, 0},
  {&__pyx_n_s_is_cancelled, __pyx_k_is_cancelled, sizeof(__pyx_k_is_cancelled), 0, 0, 1, 1},
  {&__pyx_n_s_is_done, __pyx_k_is_done, sizeof(__pyx_k_is_done), 0, 0, 1, 1},
  {&__pyx_n_s_is_expired, __pyx_k_is_expired, sizeof(__pyx_k_is_expired), 0, 0, 1, 1},
  {&__pyx_n_s_is_failure, __pyx_k_is_failure, sizeof(__pyx_k_is_failure), 0, 0, 1, 1},
  {&__pyx_kp_u_is_greater_than_the_maximum_ord, __pyx_k_is_greater_than_the_maximum_ord, sizeof(__pyx_k_is_greater_than_the_maximum_ord), 0, 1, 0, 0},
  {&__pyx_kp_u_is_lower_than_the_minimum_order, __pyx_k_is_lower_than_the_minimum_order, sizeof(__pyx_k_is_lower_than_the_minimum_order), 0, 1, 0, 0},
  {&__pyx_n_s_is_set, __pyx_k_is_set, sizeof(__pyx_k_is_set), 0, 0, 1, 1},
  {&__pyx_n_s_jsdict_order_to_struct, __pyx_k_jsdict_order_to_struct, sizeof(__pyx_k_jsdict_order_to_struct), 0, 0, 1, 1},
  {&__pyx_n_s_json, __pyx_k_json, sizeof(__pyx_k_json), 0, 0, 1, 1},
  {&__pyx_kp_u_last_state, __pyx_k_last_state, sizeof(__pyx_k_last_state), 0, 1, 0, 0},
  {&__pyx_n_s_last_state_2, __pyx_k_last_state_2, sizeof(__pyx_k_last_state_2), 0, 0, 1, 1},
  {&__pyx_n_s_list_account_orders, __pyx_k_list_account_orders, sizeof(__pyx_k_list_account_orders), 0, 0, 1, 1},
  {&__pyx_n_s_list_market, __pyx_k_list_market, sizeof(__pyx_k_list_market), 0, 0, 1, 1},
  {&__pyx_n_s_log10, __pyx_k_log10, sizeof(__pyx_k_log10), 0, 0, 1, 1},
  {&__pyx_n_s_logger, __pyx_k_logger, sizeof(__pyx_k_logger), 0, 0, 1, 1},
  {&__pyx_n_s_logging, __pyx_k_logging, sizeof(__pyx_k_logging), 0, 0, 1, 1},
  {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_u_makerAddress, __pyx_k_makerAddress, sizeof(__pyx_k_makerAddress), 0, 1, 0, 1},
  {&__pyx_n_s_market_buy_orders, __pyx_k_market_buy_orders, sizeof(__pyx_k_market_buy_orders), 0, 0, 1, 1},
  {&__pyx_n_s_market_sell_orders, __pyx_k_market_sell_orders, sizeof(__pyx_k_market_sell_orders), 0, 0, 1, 1},
  {&__pyx_kp_u_markets, __pyx_k_markets, sizeof(__pyx_k_markets), 0, 1, 0, 0},
  {&__pyx_kp_u_markets_include_base, __pyx_k_markets_include_base, sizeof(__pyx_k_markets_include_base), 0, 1, 0, 0},
  {&__pyx_n_s_math, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
  {&__pyx_n_u_maxOrderSize, __pyx_k_maxOrderSize, sizeof(__pyx_k_maxOrderSize), 0, 1, 0, 1},
  {&__pyx_n_s_max_order_size, __pyx_k_max_order_size, sizeof(__pyx_k_max_order_size), 0, 0, 1, 1},
  {&__pyx_kp_u_max_order_size_2, __pyx_k_max_order_size_2, sizeof(__pyx_k_max_order_size_2), 0, 1, 0, 0},
  {&__pyx_n_u_minOrderSize, __pyx_k_minOrderSize, sizeof(__pyx_k_minOrderSize), 0, 1, 0, 1},
  {&__pyx_n_s_min_order_size, __pyx_k_min_order_size, sizeof(__pyx_k_min_order_size), 0, 0, 1, 1},
  {&__pyx_kp_u_min_order_size_2, __pyx_k_min_order_size_2, sizeof(__pyx_k_min_order_size_2), 0, 1, 0, 0},
  {&__pyx_kp_u_must_be_greater_than_current_ti, __pyx_k_must_be_greater_than_current_ti, sizeof(__pyx_k_must_be_greater_than_current_ti), 0, 1, 0, 0},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_kp_u_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 1, 0, 0},
  {&__pyx_kp_u_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 1, 0, 0},
  {&__pyx_kp_u_of_the_limit_order, __pyx_k_of_the_limit_order, sizeof(__pyx_k_of_the_limit_order), 0, 1, 0, 0},
  {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
  {&__pyx_n_s_order_book_tracker_data_source_t, __pyx_k_order_book_tracker_data_source_t, sizeof(__pyx_k_order_book_tracker_data_source_t), 0, 0, 1, 1},
  {&__pyx_n_s_order_books, __pyx_k_order_books, sizeof(__pyx_k_order_books), 0, 0, 1, 1},
  {&__pyx_n_s_order_id, __pyx_k_order_id, sizeof(__pyx_k_order_id), 0, 0, 1, 1},
  {&__pyx_kp_u_order_limit, __pyx_k_order_limit, sizeof(__pyx_k_order_limit), 0, 1, 0, 0},
  {&__pyx_kp_u_order_market, __pyx_k_order_market, sizeof(__pyx_k_order_market), 0, 1, 0, 0},
  {&__pyx_n_s_order_side, __pyx_k_order_side, sizeof(__pyx_k_order_side), 0, 0, 1, 1},
  {&__pyx_n_s_order_type, __pyx_k_order_type, sizeof(__pyx_k_order_type), 0, 0, 1, 1},
  {&__pyx_kp_u_order_type_2, __pyx_k_order_type_2, sizeof(__pyx_k_order_type_2), 0, 1, 0, 0},
  {&__pyx_n_u_orders, __pyx_k_orders, sizeof(__pyx_k_orders), 0, 1, 0, 1},
  {&__pyx_kp_u_orders_2, __pyx_k_orders_2, sizeof(__pyx_k_orders_2), 0, 1, 0, 0},
  {&__pyx_kp_u_orders_3, __pyx_k_orders_3, sizeof(__pyx_k_orders_3), 0, 1, 0, 0},
  {&__pyx_kp_u_out_of, __pyx_k_out_of, sizeof(__pyx_k_out_of), 0, 1, 0, 0},
  {&__pyx_n_s_owner, __pyx_k_owner, sizeof(__pyx_k_owner), 0, 0, 1, 1},
  {&__pyx_n_s_parse_exchange_info, __pyx_k_parse_exchange_info, sizeof(__pyx_k_parse_exchange_info), 0, 0, 1, 1},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_poll_interval, __pyx_k_poll_interval, sizeof(__pyx_k_poll_interval), 0, 0, 1, 1},
  {&__pyx_n_s_popleft, __pyx_k_popleft, sizeof(__pyx_k_popleft), 0, 0, 1, 1},
  {&__pyx_n_u_post, __pyx_k_post, sizeof(__pyx_k_post), 0, 1, 0, 1},
  {&__pyx_n_s_price, __pyx_k_price, sizeof(__pyx_k_price), 0, 0, 1, 1},
  {&__pyx_n_u_price, __pyx_k_price, sizeof(__pyx_k_price), 0, 1, 0, 1},
  {&__pyx_kp_u_price_2, __pyx_k_price_2, sizeof(__pyx_k_price_2), 0, 1, 0, 0},
  {&__pyx_n_s_price_decimals, __pyx_k_price_decimals, sizeof(__pyx_k_price_decimals), 0, 0, 1, 1},
  {&__pyx_kp_u_price_decimals_2, __pyx_k_price_decimals_2, sizeof(__pyx_k_price_decimals_2), 0, 1, 0, 0},
  {&__pyx_n_s_price_precision, __pyx_k_price_precision, sizeof(__pyx_k_price_precision), 0, 0, 1, 1},
  {&__pyx_kp_u_price_precision_2, __pyx_k_price_precision_2, sizeof(__pyx_k_price_precision_2), 0, 1, 0, 0},
  {&__pyx_n_s_put_nowait, __pyx_k_put_nowait, sizeof(__pyx_k_put_nowait), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_InFlightOrder, __pyx_k_pyx_unpickle_InFlightOrder, sizeof(__pyx_k_pyx_unpickle_InFlightOrder), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_TradingRule, __pyx_k_pyx_unpickle_TradingRule, sizeof(__pyx_k_pyx_unpickle_TradingRule), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_u_quantity, __pyx_k_quantity, sizeof(__pyx_k_quantity), 0, 1, 0, 1},
  {&__pyx_n_u_quoteIncrement, __pyx_k_quoteIncrement, sizeof(__pyx_k_quoteIncrement), 0, 1, 0, 1},
  {&__pyx_n_u_quoteTokenDecimals, __pyx_k_quoteTokenDecimals, sizeof(__pyx_k_quoteTokenDecimals), 0, 1, 0, 1},
  {&__pyx_n_s_quote_asset, __pyx_k_quote_asset, sizeof(__pyx_k_quote_asset), 0, 0, 1, 1},
  {&__pyx_kp_u_quote_asset_amount, __pyx_k_quote_asset_amount, sizeof(__pyx_k_quote_asset_amount), 0, 1, 0, 0},
  {&__pyx_n_s_quote_asset_amount_2, __pyx_k_quote_asset_amount_2, sizeof(__pyx_k_quote_asset_amount_2), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_u_remainingBaseTokenAmount, __pyx_k_remainingBaseTokenAmount, sizeof(__pyx_k_remainingBaseTokenAmount), 0, 1, 0, 1},
  {&__pyx_n_u_remainingQuoteTokenAmount, __pyx_k_remainingQuoteTokenAmount, sizeof(__pyx_k_remainingQuoteTokenAmount), 0, 1, 0, 1},
  {&__pyx_n_s_remove, __pyx_k_remove, sizeof(__pyx_k_remove), 0, 0, 1, 1},
  {&__pyx_n_s_request, __pyx_k_request, sizeof(__pyx_k_request), 0, 0, 1, 1},
  {&__pyx_n_s_request_signed_market_orders, __pyx_k_request_signed_market_orders, sizeof(__pyx_k_request_signed_market_orders), 0, 0, 1, 1},
  {&__pyx_n_s_request_unsigned_limit_order, __pyx_k_request_unsigned_limit_order, sizeof(__pyx_k_request_unsigned_limit_order), 0, 0, 1, 1},
  {&__pyx_n_s_return_exceptions, __pyx_k_return_exceptions, sizeof(__pyx_k_return_exceptions), 0, 0, 1, 1},
  {&__pyx_n_s_rrm_logger, __pyx_k_rrm_logger, sizeof(__pyx_k_rrm_logger), 0, 0, 1, 1},
  {&__pyx_n_s_s_decimal_0, __pyx_k_s_decimal_0, sizeof(__pyx_k_s_decimal_0), 0, 0, 1, 1},
  {&__pyx_n_u_salt, __pyx_k_salt, sizeof(__pyx_k_salt), 0, 1, 0, 1},
  {&__pyx_n_s_schedule_async_call, __pyx_k_schedule_async_call, sizeof(__pyx_k_schedule_async_call), 0, 0, 1, 1},
  {&__pyx_kp_s_self__events_cannot_be_converted, __pyx_k_self__events_cannot_be_converted, sizeof(__pyx_k_self__events_cannot_be_converted), 0, 0, 1, 0},
  {&__pyx_kp_u_sell, __pyx_k_sell, sizeof(__pyx_k_sell), 0, 1, 0, 0},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_set, __pyx_k_set, sizeof(__pyx_k_set), 0, 0, 1, 1},
  {&__pyx_n_s_set_exception, __pyx_k_set_exception, sizeof(__pyx_k_set_exception), 0, 0, 1, 1},
  {&__pyx_n_s_set_result, __pyx_k_set_result, sizeof(__pyx_k_set_result), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_side, __pyx_k_side, sizeof(__pyx_k_side), 0, 0, 1, 1},
  {&__pyx_n_s_sign_hash, __pyx_k_sign_hash, sizeof(__pyx_k_sign_hash), 0, 0, 1, 1},
  {&__pyx_n_u_signature, __pyx_k_signature, sizeof(__pyx_k_signature), 0, 1, 0, 1},
  {&__pyx_n_s_sleep, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},
  {&__pyx_n_s_spender, __pyx_k_spender, sizeof(__pyx_k_spender), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
  {&__pyx_n_u_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 1, 0, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 0, 1, 1},
  {&__pyx_n_u_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 1, 0, 1},
  {&__pyx_n_s_status_polling_loop, __pyx_k_status_polling_loop, sizeof(__pyx_k_status_polling_loop), 0, 0, 1, 1},
  {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
  {&__pyx_n_s_submit_limit_order, __pyx_k_submit_limit_order, sizeof(__pyx_k_submit_limit_order), 0, 0, 1, 1},
  {&__pyx_n_s_submit_market_order, __pyx_k_submit_market_order, sizeof(__pyx_k_submit_market_order), 0, 0, 1, 1},
  {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {&__pyx_n_s_symbol, __pyx_k_symbol, sizeof(__pyx_k_symbol), 0, 0, 1, 1},
  {&__pyx_kp_u_symbol_2, __pyx_k_symbol_2, sizeof(__pyx_k_symbol_2), 0, 1, 0, 0},
  {&__pyx_n_s_symbols, __pyx_k_symbols, sizeof(__pyx_k_symbols), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {&__pyx_n_s_timeout, __pyx_k_timeout, sizeof(__pyx_k_timeout), 0, 0, 1, 1},
  {&__pyx_n_s_toHex, __pyx_k_toHex, sizeof(__pyx_k_toHex), 0, 0, 1, 1},
  {&__pyx_n_s_trading_rules, __pyx_k_trading_rules, sizeof(__pyx_k_trading_rules), 0, 0, 1, 1},
  {&__pyx_n_s_tx_hash, __pyx_k_tx_hash, sizeof(__pyx_k_tx_hash), 0, 0, 1, 1},
  {&__pyx_kp_u_tx_hash_2, __pyx_k_tx_hash_2, sizeof(__pyx_k_tx_hash_2), 0, 1, 0, 0},
  {&__pyx_n_u_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 1, 0, 1},
  {&__pyx_n_s_typing, __pyx_k_typing, sizeof(__pyx_k_typing), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_unwrap_eth, __pyx_k_unwrap_eth, sizeof(__pyx_k_unwrap_eth), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_update_balances, __pyx_k_update_balances, sizeof(__pyx_k_update_balances), 0, 0, 1, 1},
  {&__pyx_n_s_update_limit_order_status, __pyx_k_update_limit_order_status, sizeof(__pyx_k_update_limit_order_status), 0, 0, 1, 1},
  {&__pyx_n_s_update_market_order_status, __pyx_k_update_market_order_status, sizeof(__pyx_k_update_market_order_status), 0, 0, 1, 1},
  {&__pyx_n_s_update_trading_rules, __pyx_k_update_trading_rules, sizeof(__pyx_k_update_trading_rules), 0, 0, 1, 1},
  {&__pyx_n_s_url, __pyx_k_url, sizeof(__pyx_k_url), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_wait, __pyx_k_wait, sizeof(__pyx_k_wait), 0, 0, 1, 1},
  {&__pyx_n_s_wallet, __pyx_k_wallet, sizeof(__pyx_k_wallet), 0, 0, 1, 1},
  {&__pyx_n_s_wallet_spender_address, __pyx_k_wallet_spender_address, sizeof(__pyx_k_wallet_spender_address), 0, 0, 1, 1},
  {&__pyx_n_s_web3, __pyx_k_web3, sizeof(__pyx_k_web3), 0, 0, 1, 1},
  {&__pyx_n_s_web3_url, __pyx_k_web3_url, sizeof(__pyx_k_web3_url), 0, 0, 1, 1},
  {&__pyx_n_s_wings_cancellation_result, __pyx_k_wings_cancellation_result, sizeof(__pyx_k_wings_cancellation_result), 0, 0, 1, 1},
  {&__pyx_n_s_wings_events, __pyx_k_wings_events, sizeof(__pyx_k_wings_events), 0, 0, 1, 1},
  {&__pyx_n_s_wings_limit_order, __pyx_k_wings_limit_order, sizeof(__pyx_k_wings_limit_order), 0, 0, 1, 1},
  {&__pyx_n_s_wings_market_market_base, __pyx_k_wings_market_market_base, sizeof(__pyx_k_wings_market_market_base), 0, 0, 1, 1},
  {&__pyx_n_s_wings_market_radar_relay_market, __pyx_k_wings_market_radar_relay_market, sizeof(__pyx_k_wings_market_radar_relay_market), 0, 0, 1, 1},
  {&__pyx_kp_s_wings_market_radar_relay_market_2, __pyx_k_wings_market_radar_relay_market_2, sizeof(__pyx_k_wings_market_radar_relay_market_2), 0, 0, 1, 0},
  {&__pyx_n_s_wings_order_book_tracker, __pyx_k_wings_order_book_tracker, sizeof(__pyx_k_wings_order_book_tracker), 0, 0, 1, 1},
  {&__pyx_n_s_wings_tracker_radar_relay_order, __pyx_k_wings_tracker_radar_relay_order, sizeof(__pyx_k_wings_tracker_radar_relay_order), 0, 0, 1, 1},
  {&__pyx_n_s_wings_wallet_web3_wallet, __pyx_k_wings_wallet_web3_wallet, sizeof(__pyx_k_wings_wallet_web3_wallet), 0, 0, 1, 1},
  {&__pyx_n_s_wings_zero_ex_custom_utils, __pyx_k_wings_zero_ex_custom_utils, sizeof(__pyx_k_wings_zero_ex_custom_utils), 0, 0, 1, 1},
  {&__pyx_n_s_wings_zero_ex_exchange, __pyx_k_wings_zero_ex_exchange, sizeof(__pyx_k_wings_zero_ex_exchange), 0, 0, 1, 1},
  {&__pyx_n_s_wrap_eth, __pyx_k_wrap_eth, sizeof(__pyx_k_wrap_eth), 0, 0, 1, 1},
  {&__pyx_n_s_zero_ex_order, __pyx_k_zero_ex_order, sizeof(__pyx_k_zero_ex_order), 0, 0, 1, 1},
  {&__pyx_kp_u_zero_ex_order_2, __pyx_k_zero_ex_order_2, sizeof(__pyx_k_zero_ex_order_2), 0, 1, 0, 0},
  {&__pyx_n_s_zero_ex_order_utils, __pyx_k_zero_ex_order_utils, sizeof(__pyx_k_zero_ex_order_utils), 0, 0, 1, 1},
  {&__pyx_n_s_zip, __pyx_k_zip, sizeof(__pyx_k_zip), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_any = __Pyx_GetBuiltinName(__pyx_n_s_any); if (!__pyx_builtin_any) __PYX_ERR(0, 81, __pyx_L1_error)
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 529, __pyx_L1_error)
  __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) __PYX_ERR(0, 63, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_zip = __Pyx_GetBuiltinName(__pyx_n_s_zip); if (!__pyx_builtin_zip) __PYX_ERR(0, 355, __pyx_L1_error)
  __pyx_builtin_IOError = __Pyx_GetBuiltinName(__pyx_n_s_IOError); if (!__pyx_builtin_IOError) __PYX_ERR(0, 563, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 579, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(2, 285, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(2, 856, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 1038, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_self__events_cannot_be_converted); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "(tree fragment)":4
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_self__events_cannot_be_converted); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "wings/market/radar_relay_market.pyx":320
 *                 raise
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching account updates.", exc_info=True)             # <<<<<<<<<<<<<<
 *                 await asyncio.sleep(0.5)
 * 
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_Unexpected_error_while_fetching); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "wings/market/radar_relay_market.pyx":525
 *                             self._pending_approval_tx_hashes.remove(tx_hash)
 *             except Exception:
 *                 self.logger().error("Unexpected error while fetching approval transactions.", exc_info=True)             # <<<<<<<<<<<<<<
 *             finally:
 *                 await asyncio.sleep(1.0)
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_u_Unexpected_error_while_fetching_2); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "wings/market/radar_relay_market.pyx":551
 *                            headers: Optional[Dict[str, str]] = None) -> Dict[str, any]:
 *         async with aiohttp.ClientSession() as client:
 *             async with client.request(http_method,             # <<<<<<<<<<<<<<
 *                                       url=url,
 *                                       timeout=self.API_CALL_TIMEOUT,
 */
  __pyx_tuple__13 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "wings/market/radar_relay_market.pyx":579
 *             order_type = "SELL"
 *         else:
 *             raise ValueError("Invalid side. Aborting.")             # <<<<<<<<<<<<<<
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/markets/{symbol}/order/market"
 *         data = {
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_u_Invalid_side_Aborting); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "wings/market/radar_relay_market.pyx":688
 *                         return [CancellationResult(oid, True) for oid in incomplete_order_ids]
 *         except Exception:
 *             self.logger().error(f"Unexpected error cancelling orders.", exc_info=True)             # <<<<<<<<<<<<<<
 *         return [CancellationResult(oid, False) for oid in incomplete_order_ids]
 * 
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_u_Unexpected_error_cancelling_orde); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "wings/market/radar_relay_market.pyx":714
 *             if order_type is OrderType.LIMIT:
 *                 if price == NaN:
 *                     raise ValueError(f"Limit orders require a price. Aborting.")             # <<<<<<<<<<<<<<
 *                 elif expires is None:
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_u_Limit_orders_require_a_price_Abo); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "wings/market/radar_relay_market.pyx":716
 *                     raise ValueError(f"Limit orders require a price. Aborting.")
 *                 elif expires is None:
 *                     raise ValueError(f"Limit orders require an expiration timestamp 'expiration_ts'. Aborting.")             # <<<<<<<<<<<<<<
 *                 elif expires < time.time():
 *                     raise ValueError(f"expiration time {expires} must be greater than current time {time.time()}")
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_u_Limit_orders_require_an_expirati); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 716, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "wings/market/radar_relay_market.pyx":839
 *     async def get_order(self, order_hash: str) -> Dict[str, any]:
 *         url = f"{RADAR_RELAY_REST_ENDPOINT}/orders/{order_hash}"
 *         response_data = await self._api_request("get", url=url)             # <<<<<<<<<<<<<<
 *         return response_data
 * 
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_n_u_get); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_self__events_cannot_be_converted); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "(tree fragment)":4
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self._events cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_self__events_cannot_be_converted); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(2, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(2, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":306
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(2, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":856
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(2, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":880
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(2, 880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1038
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(2, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1044
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(2, 1044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "wings/market/radar_relay_market.pyx":51
 * 
 * rrm_logger = None
 * s_decimal_0 = Decimal(0)             # <<<<<<<<<<<<<<
 * 
 * ZERO_EX_MAINNET_ERC20_PROXY = "0x2240Dab907db71e64d3E0dbA4800c83B5C502d4E"
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "wings/market/radar_relay_market.pyx":530
 * 
 *     @staticmethod
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):             # <<<<<<<<<<<<<<
 *         while True:
 *             fut, coro = await coro_queue.get()
 */
  __pyx_tuple__38 = PyTuple_Pack(5, __pyx_n_s_coro_queue, __pyx_n_s_interval, __pyx_n_s_fut, __pyx_n_s_coro, __pyx_n_s_e); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__11 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_wings_market_radar_relay_market_2, __pyx_n_s_coro_scheduler, 530, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__11)) __PYX_ERR(0, 530, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle_TradingRule(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__39 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_TradingRule, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__41 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_InFlightOrder, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_values.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1e6 = PyFloat_FromDouble(1e6); if (unlikely(!__pyx_float_1e6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_10_0 = PyFloat_FromDouble(10.0); if (unlikely(!__pyx_float_10_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_60_0 = PyFloat_FromDouble(60.0); if (unlikely(!__pyx_float_60_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_200 = PyInt_FromLong(200); if (unlikely(!__pyx_int_200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_201 = PyInt_FromLong(201); if (unlikely(!__pyx_int_201)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_502 = PyInt_FromLong(502); if (unlikely(!__pyx_int_502)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_19757352 = PyInt_FromLong(19757352L); if (unlikely(!__pyx_int_19757352)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_73811978 = PyInt_FromLong(73811978L); if (unlikely(!__pyx_int_73811978)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_t_1 = PyImport_ImportModule("wings.market.market_base"); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_6market_11market_base_MarketBase = __Pyx_ImportType(__pyx_t_1, "wings.market.market_base", "MarketBase", sizeof(struct __pyx_obj_5wings_6market_11market_base_MarketBase), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_6market_11market_base_MarketBase) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_5wings_6market_11market_base_MarketBase = (struct __pyx_vtabstruct_5wings_6market_11market_base_MarketBase*)__Pyx_GetVtable(__pyx_ptype_5wings_6market_11market_base_MarketBase->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_6market_11market_base_MarketBase)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayMarket = &__pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base = *__pyx_vtabptr_5wings_6market_11market_base_MarketBase;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.__pyx_base.c_start = (PyObject *(*)(struct __pyx_obj_5wings_13time_iterator_TimeIterator *, struct __pyx_obj_5wings_5clock_Clock *, double))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.__pyx_base.c_tick = (PyObject *(*)(struct __pyx_obj_5wings_13time_iterator_TimeIterator *, double))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_tick;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_buy = (PyObject *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double, struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_buy *__pyx_optional_args))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_buy;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_sell = (PyObject *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double, struct __pyx_opt_args_5wings_6market_11market_base_10MarketBase_c_sell *__pyx_optional_args))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_sell;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_cancel = (PyObject *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_cancel;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_get_balance = (double (*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_balance;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_get_order_book = (struct __pyx_obj_5wings_10order_book_OrderBook *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_book;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_get_price = (double (*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, int))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_price;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_get_order_price_quantum = (PyObject *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_price_quantum;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_get_order_size_quantum = (PyObject *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_get_order_size_quantum;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.__pyx_base.c_quantize_order_amount = (PyObject *(*)(struct __pyx_obj_5wings_6market_11market_base_MarketBase *, PyObject *, double))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_quantize_order_amount;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.c_start_tracking_limit_order = (PyObject *(*)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *, PyObject *, PyObject *, int, PyObject *, PyObject *, PyObject *, int, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start_tracking_limit_order;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.c_start_tracking_market_order = (PyObject *(*)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *, PyObject *, PyObject *, int, PyObject *, PyObject *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_start_tracking_market_order;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.c_expire_order = (PyObject *(*)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_expire_order;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.c_check_and_remove_expired_orders = (PyObject *(*)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_check_and_remove_expired_orders;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayMarket.c_stop_tracking_order = (PyObject *(*)(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_16RadarRelayMarket_c_stop_tracking_order;
  __pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_base = __pyx_ptype_5wings_6market_11market_base_MarketBase;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_dict, __pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayMarket) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_RadarRelayMarket, (PyObject *)&__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  if (__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_weaklistoffset == 0) __pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket.tp_weaklistoffset = offsetof(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayMarket, __pyx_base.__pyx_base.__pyx_base.__weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  __pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket = &__pyx_type_5wings_6market_18radar_relay_market_RadarRelayMarket;
  __pyx_t_2 = PyImport_ImportModule("wings.transaction_tracker"); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_5wings_19transaction_tracker_TransactionTracker = __Pyx_ImportType(__pyx_t_2, "wings.transaction_tracker", "TransactionTracker", sizeof(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_19transaction_tracker_TransactionTracker) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_5wings_19transaction_tracker_TransactionTracker = (struct __pyx_vtabstruct_5wings_19transaction_tracker_TransactionTracker*)__Pyx_GetVtable(__pyx_ptype_5wings_19transaction_tracker_TransactionTracker->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_19transaction_tracker_TransactionTracker)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker = &__pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.__pyx_base = *__pyx_vtabptr_5wings_19transaction_tracker_TransactionTracker;
  __pyx_vtable_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.__pyx_base.c_did_timeout_tx = (PyObject *(*)(struct __pyx_obj_5wings_19transaction_tracker_TransactionTracker *, PyObject *))__pyx_f_5wings_6market_18radar_relay_market_28RadarRelayTransactionTracker_c_did_timeout_tx;
  __pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_base = __pyx_ptype_5wings_19transaction_tracker_TransactionTracker;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_dict, __pyx_vtabptr_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_RadarRelayTransactionTracker, (PyObject *)&__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  if (__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_weaklistoffset == 0) __pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker.tp_weaklistoffset = offsetof(struct __pyx_obj_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker, __pyx_base.__pyx_base.__pyx_base.__weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker = &__pyx_type_5wings_6market_18radar_relay_market_RadarRelayTransactionTracker;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market_TradingRule) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market_TradingRule.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market_TradingRule.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market_TradingRule.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market_TradingRule.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_TradingRule, (PyObject *)&__pyx_type_5wings_6market_18radar_relay_market_TradingRule) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_5wings_6market_18radar_relay_market_TradingRule) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __pyx_ptype_5wings_6market_18radar_relay_market_TradingRule = &__pyx_type_5wings_6market_18radar_relay_market_TradingRule;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market_InFlightOrder) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market_InFlightOrder.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market_InFlightOrder.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market_InFlightOrder.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market_InFlightOrder.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_InFlightOrder, (PyObject *)&__pyx_type_5wings_6market_18radar_relay_market_InFlightOrder) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_5wings_6market_18radar_relay_market_InFlightOrder) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __pyx_ptype_5wings_6market_18radar_relay_market_InFlightOrder = &__pyx_type_5wings_6market_18radar_relay_market_InFlightOrder;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop) < 0) __PYX_ERR(0, 305, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct___status_polling_loop;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market) < 0) __PYX_ERR(0, 326, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_1_list_market;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules) < 0) __PYX_ERR(0, 330, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_2__update_trading_rules;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status) < 0) __PYX_ERR(0, 342, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_3__update_limit_order_status;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status) < 0) __PYX_ERR(0, 443, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_4__update_market_order_status;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_5__approval_tx_polling_loop;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler) < 0) __PYX_ERR(0, 530, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_6_coro_scheduler;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call) < 0) __PYX_ERR(0, 540, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_7_schedule_async_call;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request) < 0) __PYX_ERR(0, 545, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_8__api_request;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_9_request_signed_market_orders;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order) < 0) __PYX_ERR(0, 588, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_10_request_unsigned_limit_order;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order) < 0) __PYX_ERR(0, 616, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_11_submit_market_order;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order) < 0) __PYX_ERR(0, 643, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_12_submit_limit_order;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all) < 0) __PYX_ERR(0, 667, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_13_cancel_all;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade) < 0) __PYX_ERR(0, 691, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_14_execute_trade;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order) < 0) __PYX_ERR(0, 818, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_15_cancel_order;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order) < 0) __PYX_ERR(0, 837, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_16_get_order;
  if (PyType_Ready(&__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders) < 0) __PYX_ERR(0, 845, __pyx_L1_error)
  __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders.tp_dictoffset && __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders = &__pyx_type_5wings_6market_18radar_relay_market___pyx_scope_struct_17_list_account_orders;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule("wings.event_listener"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_14event_listener_EventListener = __Pyx_ImportType(__pyx_t_1, "wings.event_listener", "EventListener", sizeof(struct __pyx_obj_5wings_14event_listener_EventListener), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_14event_listener_EventListener) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_vtabptr_5wings_14event_listener_EventListener = (struct __pyx_vtabstruct_5wings_14event_listener_EventListener*)__Pyx_GetVtable(__pyx_ptype_5wings_14event_listener_EventListener->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_14event_listener_EventListener)) __PYX_ERR(3, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("wings.event_reporter"); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_14event_reporter_EventReporter = __Pyx_ImportType(__pyx_t_1, "wings.event_reporter", "EventReporter", sizeof(struct __pyx_obj_5wings_14event_reporter_EventReporter), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_14event_reporter_EventReporter) __PYX_ERR(4, 4, __pyx_L1_error)
  __pyx_vtabptr_5wings_14event_reporter_EventReporter = (struct __pyx_vtabstruct_5wings_14event_reporter_EventReporter*)__Pyx_GetVtable(__pyx_ptype_5wings_14event_reporter_EventReporter->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_14event_reporter_EventReporter)) __PYX_ERR(4, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(5, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(2, 206, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(2, 229, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(2, 233, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(2, 242, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(2, 918, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("wings.pubsub"); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_6pubsub_PubSub = __Pyx_ImportType(__pyx_t_1, "wings.pubsub", "PubSub", sizeof(struct __pyx_obj_5wings_6pubsub_PubSub), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_6pubsub_PubSub) __PYX_ERR(6, 18, __pyx_L1_error)
  __pyx_vtabptr_5wings_6pubsub_PubSub = (struct __pyx_vtabstruct_5wings_6pubsub_PubSub*)__Pyx_GetVtable(__pyx_ptype_5wings_6pubsub_PubSub->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_6pubsub_PubSub)) __PYX_ERR(6, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("wings.order_book"); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_10order_book_OrderBook = __Pyx_ImportType(__pyx_t_1, "wings.order_book", "OrderBook", sizeof(struct __pyx_obj_5wings_10order_book_OrderBook), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_10order_book_OrderBook) __PYX_ERR(7, 10, __pyx_L1_error)
  __pyx_vtabptr_5wings_10order_book_OrderBook = (struct __pyx_vtabstruct_5wings_10order_book_OrderBook*)__Pyx_GetVtable(__pyx_ptype_5wings_10order_book_OrderBook->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_10order_book_OrderBook)) __PYX_ERR(7, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("wings.clock"); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_5clock_Clock = __Pyx_ImportType(__pyx_t_1, "wings.clock", "Clock", sizeof(struct __pyx_obj_5wings_5clock_Clock), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_5clock_Clock) __PYX_ERR(8, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("wings.time_iterator"); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_13time_iterator_TimeIterator = __Pyx_ImportType(__pyx_t_1, "wings.time_iterator", "TimeIterator", sizeof(struct __pyx_obj_5wings_13time_iterator_TimeIterator), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_13time_iterator_TimeIterator) __PYX_ERR(9, 8, __pyx_L1_error)
  __pyx_vtabptr_5wings_13time_iterator_TimeIterator = (struct __pyx_vtabstruct_5wings_13time_iterator_TimeIterator*)__Pyx_GetVtable(__pyx_ptype_5wings_13time_iterator_TimeIterator->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_13time_iterator_TimeIterator)) __PYX_ERR(9, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("wings.wallet.wallet_base"); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5wings_6wallet_11wallet_base_WalletBase = __Pyx_ImportType(__pyx_t_1, "wings.wallet.wallet_base", "WalletBase", sizeof(struct __pyx_obj_5wings_6wallet_11wallet_base_WalletBase), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5wings_6wallet_11wallet_base_WalletBase) __PYX_ERR(10, 4, __pyx_L1_error)
  __pyx_vtabptr_5wings_6wallet_11wallet_base_WalletBase = (struct __pyx_vtabstruct_5wings_6wallet_11wallet_base_WalletBase*)__Pyx_GetVtable(__pyx_ptype_5wings_6wallet_11wallet_base_WalletBase->tp_dict); if (unlikely(!__pyx_vtabptr_5wings_6wallet_11wallet_base_WalletBase)) __PYX_ERR(10, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initradar_relay_market(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initradar_relay_market(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_radar_relay_market(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_radar_relay_market(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_radar_relay_market(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'radar_relay_market' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_radar_relay_market(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("radar_relay_market", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_wings__market__radar_relay_market) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "wings.market.radar_relay_market")) {
      if (unlikely(PyDict_SetItemString(modules, "wings.market.radar_relay_market", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "wings/market/radar_relay_market.pyx":1
 * import aiohttp             # <<<<<<<<<<<<<<
 * import asyncio
 * from async_timeout import timeout
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_aiohttp, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_aiohttp, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":2
 * import aiohttp
 * import asyncio             # <<<<<<<<<<<<<<
 * from async_timeout import timeout
 * from collections import deque
 */
  __pyx_t_1 = __Pyx_patch_asyncio(__Pyx_Import(__pyx_n_s_asyncio, 0, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_asyncio, __pyx_t_1) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":3
 * import aiohttp
 * import asyncio
 * from async_timeout import timeout             # <<<<<<<<<<<<<<
 * from collections import deque
 * import copy
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_timeout);
  __Pyx_GIVEREF(__pyx_n_s_timeout);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_timeout);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_async_timeout, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_timeout); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_timeout, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":4
 * import asyncio
 * from async_timeout import timeout
 * from collections import deque             # <<<<<<<<<<<<<<
 * import copy
 * import logging
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_deque);
  __Pyx_GIVEREF(__pyx_n_s_deque);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_deque);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_collections, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_deque); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_deque, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":5
 * from async_timeout import timeout
 * from collections import deque
 * import copy             # <<<<<<<<<<<<<<
 * import logging
 * import math
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_copy, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_copy, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":6
 * from collections import deque
 * import copy
 * import logging             # <<<<<<<<<<<<<<
 * import math
 * import time
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_logging, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_logging, __pyx_t_1) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":7
 * import copy
 * import logging
 * import math             # <<<<<<<<<<<<<<
 * import time
 * from typing import (
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_math, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_1) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":8
 * import logging
 * import math
 * import time             # <<<<<<<<<<<<<<
 * from typing import (
 *     Dict,
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_time, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_1) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":10
 * import time
 * from typing import (
 *     Dict,             # <<<<<<<<<<<<<<
 *     List,
 *     Optional,
 */
  __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Dict);
  __Pyx_GIVEREF(__pyx_n_s_Dict);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Dict);
  __Pyx_INCREF(__pyx_n_s_List);
  __Pyx_GIVEREF(__pyx_n_s_List);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_List);
  __Pyx_INCREF(__pyx_n_s_Optional);
  __Pyx_GIVEREF(__pyx_n_s_Optional);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_Optional);
  __Pyx_INCREF(__pyx_n_s_Tuple);
  __Pyx_GIVEREF(__pyx_n_s_Tuple);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_Tuple);

  /* "wings/market/radar_relay_market.pyx":9
 * import math
 * import time
 * from typing import (             # <<<<<<<<<<<<<<
 *     Dict,
 *     List,
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_typing, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Dict); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Dict, __pyx_t_1) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_List); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_List, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Optional); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Optional, __pyx_t_1) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Tuple); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Tuple, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":15
 *     Tuple
 * )
 * from decimal import Decimal             # <<<<<<<<<<<<<<
 * from libc.stdint cimport int64_t
 * from web3 import Web3
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Decimal);
  __Pyx_GIVEREF(__pyx_n_s_Decimal);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Decimal);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_decimal, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Decimal, __pyx_t_2) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":17
 * from decimal import Decimal
 * from libc.stdint cimport int64_t
 * from web3 import Web3             # <<<<<<<<<<<<<<
 * from wings.clock cimport Clock
 * from wings.limit_order import LimitOrder
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Web3);
  __Pyx_GIVEREF(__pyx_n_s_Web3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Web3);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_web3, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Web3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Web3, __pyx_t_1) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":19
 * from web3 import Web3
 * from wings.clock cimport Clock
 * from wings.limit_order import LimitOrder             # <<<<<<<<<<<<<<
 * from wings.market.market_base cimport MarketBase
 * from wings.market.market_base import (
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_LimitOrder);
  __Pyx_GIVEREF(__pyx_n_s_LimitOrder);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_LimitOrder);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_wings_limit_order, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LimitOrder); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LimitOrder, __pyx_t_2) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":22
 * from wings.market.market_base cimport MarketBase
 * from wings.market.market_base import (
 *   OrderType,             # <<<<<<<<<<<<<<
 *   NaN
 * )
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_OrderType);
  __Pyx_GIVEREF(__pyx_n_s_OrderType);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_OrderType);
  __Pyx_INCREF(__pyx_n_s_NaN);
  __Pyx_GIVEREF(__pyx_n_s_NaN);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_NaN);

  /* "wings/market/radar_relay_market.pyx":21
 * from wings.limit_order import LimitOrder
 * from wings.market.market_base cimport MarketBase
 * from wings.market.market_base import (             # <<<<<<<<<<<<<<
 *   OrderType,
 *   NaN
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_wings_market_market_base, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrderType, __pyx_t_1) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_NaN); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NaN, __pyx_t_1) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":25
 *   NaN
 * )
 * from wings.wallet.web3_wallet import Web3Wallet             # <<<<<<<<<<<<<<
 * from wings.order_book cimport OrderBook
 * from wings.cancellation_result import CancellationResult
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Web3Wallet);
  __Pyx_GIVEREF(__pyx_n_s_Web3Wallet);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Web3Wallet);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_wings_wallet_web3_wallet, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_Web3Wallet); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Web3Wallet, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":27
 * from wings.wallet.web3_wallet import Web3Wallet
 * from wings.order_book cimport OrderBook
 * from wings.cancellation_result import CancellationResult             # <<<<<<<<<<<<<<
 * from wings.order_book_tracker import OrderBookTrackerDataSourceType
 * from wings.tracker.radar_relay_order_book_tracker import RadarRelayOrderBookTracker
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_CancellationResult);
  __Pyx_GIVEREF(__pyx_n_s_CancellationResult);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_CancellationResult);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_wings_cancellation_result, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_CancellationResult); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CancellationResult, __pyx_t_1) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":28
 * from wings.order_book cimport OrderBook
 * from wings.cancellation_result import CancellationResult
 * from wings.order_book_tracker import OrderBookTrackerDataSourceType             # <<<<<<<<<<<<<<
 * from wings.tracker.radar_relay_order_book_tracker import RadarRelayOrderBookTracker
 * from wings.events import (
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_OrderBookTrackerDataSourceType);
  __Pyx_GIVEREF(__pyx_n_s_OrderBookTrackerDataSourceType);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_OrderBookTrackerDataSourceType);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_wings_order_book_tracker, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_OrderBookTrackerDataSourceType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrderBookTrackerDataSourceType, __pyx_t_2) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":29
 * from wings.cancellation_result import CancellationResult
 * from wings.order_book_tracker import OrderBookTrackerDataSourceType
 * from wings.tracker.radar_relay_order_book_tracker import RadarRelayOrderBookTracker             # <<<<<<<<<<<<<<
 * from wings.events import (
 *     MarketEvent,
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_RadarRelayOrderBookTracker);
  __Pyx_GIVEREF(__pyx_n_s_RadarRelayOrderBookTracker);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_RadarRelayOrderBookTracker);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_wings_tracker_radar_relay_order, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_RadarRelayOrderBookTracker); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RadarRelayOrderBookTracker, __pyx_t_1) < 0) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":31
 * from wings.tracker.radar_relay_order_book_tracker import RadarRelayOrderBookTracker
 * from wings.events import (
 *     MarketEvent,             # <<<<<<<<<<<<<<
 *     BuyOrderCreatedEvent,
 *     SellOrderCreatedEvent,
 */
  __pyx_t_2 = PyList_New(10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_MarketEvent);
  __Pyx_GIVEREF(__pyx_n_s_MarketEvent);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_MarketEvent);
  __Pyx_INCREF(__pyx_n_s_BuyOrderCreatedEvent);
  __Pyx_GIVEREF(__pyx_n_s_BuyOrderCreatedEvent);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_BuyOrderCreatedEvent);
  __Pyx_INCREF(__pyx_n_s_SellOrderCreatedEvent);
  __Pyx_GIVEREF(__pyx_n_s_SellOrderCreatedEvent);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_SellOrderCreatedEvent);
  __Pyx_INCREF(__pyx_n_s_BuyOrderCompletedEvent);
  __Pyx_GIVEREF(__pyx_n_s_BuyOrderCompletedEvent);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_BuyOrderCompletedEvent);
  __Pyx_INCREF(__pyx_n_s_SellOrderCompletedEvent);
  __Pyx_GIVEREF(__pyx_n_s_SellOrderCompletedEvent);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_SellOrderCompletedEvent);
  __Pyx_INCREF(__pyx_n_s_OrderExpiredEvent);
  __Pyx_GIVEREF(__pyx_n_s_OrderExpiredEvent);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_OrderExpiredEvent);
  __Pyx_INCREF(__pyx_n_s_OrderFilledEvent);
  __Pyx_GIVEREF(__pyx_n_s_OrderFilledEvent);
  PyList_SET_ITEM(__pyx_t_2, 6, __pyx_n_s_OrderFilledEvent);
  __Pyx_INCREF(__pyx_n_s_OrderCancelledEvent);
  __Pyx_GIVEREF(__pyx_n_s_OrderCancelledEvent);
  PyList_SET_ITEM(__pyx_t_2, 7, __pyx_n_s_OrderCancelledEvent);
  __Pyx_INCREF(__pyx_n_s_MarketTransactionFailureEvent);
  __Pyx_GIVEREF(__pyx_n_s_MarketTransactionFailureEvent);
  PyList_SET_ITEM(__pyx_t_2, 8, __pyx_n_s_MarketTransactionFailureEvent);
  __Pyx_INCREF(__pyx_n_s_TradeType);
  __Pyx_GIVEREF(__pyx_n_s_TradeType);
  PyList_SET_ITEM(__pyx_t_2, 9, __pyx_n_s_TradeType);

  /* "wings/market/radar_relay_market.pyx":30
 * from wings.order_book_tracker import OrderBookTrackerDataSourceType
 * from wings.tracker.radar_relay_order_book_tracker import RadarRelayOrderBookTracker
 * from wings.events import (             # <<<<<<<<<<<<<<
 *     MarketEvent,
 *     BuyOrderCreatedEvent,
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_wings_events, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MarketEvent, __pyx_t_2) < 0) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_BuyOrderCreatedEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BuyOrderCreatedEvent, __pyx_t_2) < 0) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_SellOrderCreatedEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SellOrderCreatedEvent, __pyx_t_2) < 0) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_BuyOrderCompletedEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BuyOrderCompletedEvent, __pyx_t_2) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_SellOrderCompletedEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SellOrderCompletedEvent, __pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_OrderExpiredEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrderExpiredEvent, __pyx_t_2) < 0) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_OrderFilledEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrderFilledEvent, __pyx_t_2) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_OrderCancelledEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OrderCancelledEvent, __pyx_t_2) < 0) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_MarketTransactionFailureEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MarketTransactionFailureEvent, __pyx_t_2) < 0) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_TradeType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TradeType, __pyx_t_2) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":43
 * )
 * from zero_ex.order_utils import (
 *     generate_order_hash_hex,             # <<<<<<<<<<<<<<
 *     jsdict_order_to_struct,
 *     Order
 */
  __pyx_t_1 = PyList_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_generate_order_hash_hex);
  __Pyx_GIVEREF(__pyx_n_s_generate_order_hash_hex);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_generate_order_hash_hex);
  __Pyx_INCREF(__pyx_n_s_jsdict_order_to_struct);
  __Pyx_GIVEREF(__pyx_n_s_jsdict_order_to_struct);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_jsdict_order_to_struct);
  __Pyx_INCREF(__pyx_n_s_Order);
  __Pyx_GIVEREF(__pyx_n_s_Order);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_Order);

  /* "wings/market/radar_relay_market.pyx":42
 *     TradeType
 * )
 * from zero_ex.order_utils import (             # <<<<<<<<<<<<<<
 *     generate_order_hash_hex,
 *     jsdict_order_to_struct,
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_zero_ex_order_utils, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_generate_order_hash_hex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_generate_order_hash_hex, __pyx_t_1) < 0) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_jsdict_order_to_struct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_jsdict_order_to_struct, __pyx_t_1) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Order); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Order, __pyx_t_1) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":47
 *     Order
 * )
 * from wings.zero_ex_custom_utils import fix_signature             # <<<<<<<<<<<<<<
 * from wings.zero_ex_exchange import ZeroExExchange
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_fix_signature);
  __Pyx_GIVEREF(__pyx_n_s_fix_signature);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_fix_signature);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_wings_zero_ex_custom_utils, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_fix_signature); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fix_signature, __pyx_t_2) < 0) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":48
 * )
 * from wings.zero_ex_custom_utils import fix_signature
 * from wings.zero_ex_exchange import ZeroExExchange             # <<<<<<<<<<<<<<
 * 
 * rrm_logger = None
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_ZeroExExchange);
  __Pyx_GIVEREF(__pyx_n_s_ZeroExExchange);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_ZeroExExchange);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_wings_zero_ex_exchange, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ZeroExExchange); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ZeroExExchange, __pyx_t_1) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":50
 * from wings.zero_ex_exchange import ZeroExExchange
 * 
 * rrm_logger = None             # <<<<<<<<<<<<<<
 * s_decimal_0 = Decimal(0)
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rrm_logger, Py_None) < 0) __PYX_ERR(0, 50, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":51
 * 
 * rrm_logger = None
 * s_decimal_0 = Decimal(0)             # <<<<<<<<<<<<<<
 * 
 * ZERO_EX_MAINNET_ERC20_PROXY = "0x2240Dab907db71e64d3E0dbA4800c83B5C502d4E"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Decimal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_s_decimal_0, __pyx_t_1) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":53
 * s_decimal_0 = Decimal(0)
 * 
 * ZERO_EX_MAINNET_ERC20_PROXY = "0x2240Dab907db71e64d3E0dbA4800c83B5C502d4E"             # <<<<<<<<<<<<<<
 * ZERO_EX_MAINNET_EXCHANGE_ADDRESS = "0x4F833a24e1f95D70F028921e27040Ca56E09AB0b"
 * RADAR_RELAY_REST_ENDPOINT = "https://api.radarrelay.com/v2"
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ZERO_EX_MAINNET_ERC20_PROXY, __pyx_kp_u_0x2240Dab907db71e64d3E0dbA4800c8) < 0) __PYX_ERR(0, 53, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":54
 * 
 * ZERO_EX_MAINNET_ERC20_PROXY = "0x2240Dab907db71e64d3E0dbA4800c83B5C502d4E"
 * ZERO_EX_MAINNET_EXCHANGE_ADDRESS = "0x4F833a24e1f95D70F028921e27040Ca56E09AB0b"             # <<<<<<<<<<<<<<
 * RADAR_RELAY_REST_ENDPOINT = "https://api.radarrelay.com/v2"
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ZERO_EX_MAINNET_EXCHANGE_ADDRESS, __pyx_kp_u_0x4F833a24e1f95D70F028921e27040C) < 0) __PYX_ERR(0, 54, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":55
 * ZERO_EX_MAINNET_ERC20_PROXY = "0x2240Dab907db71e64d3E0dbA4800c83B5C502d4E"
 * ZERO_EX_MAINNET_EXCHANGE_ADDRESS = "0x4F833a24e1f95D70F028921e27040Ca56E09AB0b"
 * RADAR_RELAY_REST_ENDPOINT = "https://api.radarrelay.com/v2"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RADAR_RELAY_REST_ENDPOINT, __pyx_kp_u_https_api_radarrelay_com_v2) < 0) __PYX_ERR(0, 55, __pyx_L1_error)

  /* "wings/market/radar_relay_market.pyx":81
 * 
 *     @classmethod
 *     def parse_exchange_info(cls, markets: List[Dict[str, any]]) -> List[TradingRule]:             # <<<<<<<<<<<<<<
 *         cdef:
 *             list retval = []
 */
  __Pyx_GetNameInClass(__pyx_t_1, (PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule, __pyx_n_s_parse_exchange_info); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "wings/market/radar_relay_market.pyx":80
 *         public int amount_decimals              # Max amount of decimals in quote token (amount)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse_exchange_info(cls, markets: List[Dict[str, any]]) -> List[TradingRule]:
 *         cdef:
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule->tp_dict, __pyx_n_s_parse_exchange_info, __pyx_t_2) < 0) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_TradingRule);

  /* "wings/market/radar_relay_market.pyx":192
 * 
 * cdef class RadarRelayMarket(MarketBase):
 *     MARKET_RECEIVED_ASSET_EVENT_TAG = MarketEvent.ReceivedAsset.value             # <<<<<<<<<<<<<<
 *     MARKET_BUY_ORDER_COMPLETED_EVENT_TAG = MarketEvent.BuyOrderCompleted.value
 *     MARKET_SELL_ORDER_COMPLETED_EVENT_TAG = MarketEvent.SellOrderCompleted.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ReceivedAsset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_RECEIVED_ASSET_EVENT_TAG, __pyx_t_2) < 0) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":193
 * cdef class RadarRelayMarket(MarketBase):
 *     MARKET_RECEIVED_ASSET_EVENT_TAG = MarketEvent.ReceivedAsset.value
 *     MARKET_BUY_ORDER_COMPLETED_EVENT_TAG = MarketEvent.BuyOrderCompleted.value             # <<<<<<<<<<<<<<
 *     MARKET_SELL_ORDER_COMPLETED_EVENT_TAG = MarketEvent.SellOrderCompleted.value
 *     MARKET_WITHDRAW_ASSET_EVENT_TAG = MarketEvent.WithdrawAsset.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BuyOrderCompleted); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_BUY_ORDER_COMPLETED_EVENT, __pyx_t_2) < 0) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":194
 *     MARKET_RECEIVED_ASSET_EVENT_TAG = MarketEvent.ReceivedAsset.value
 *     MARKET_BUY_ORDER_COMPLETED_EVENT_TAG = MarketEvent.BuyOrderCompleted.value
 *     MARKET_SELL_ORDER_COMPLETED_EVENT_TAG = MarketEvent.SellOrderCompleted.value             # <<<<<<<<<<<<<<
 *     MARKET_WITHDRAW_ASSET_EVENT_TAG = MarketEvent.WithdrawAsset.value
 *     MARKET_ORDER_CANCELLED_EVENT_TAG = MarketEvent.OrderCancelled.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SellOrderCompleted); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_SELL_ORDER_COMPLETED_EVEN, __pyx_t_2) < 0) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":195
 *     MARKET_BUY_ORDER_COMPLETED_EVENT_TAG = MarketEvent.BuyOrderCompleted.value
 *     MARKET_SELL_ORDER_COMPLETED_EVENT_TAG = MarketEvent.SellOrderCompleted.value
 *     MARKET_WITHDRAW_ASSET_EVENT_TAG = MarketEvent.WithdrawAsset.value             # <<<<<<<<<<<<<<
 *     MARKET_ORDER_CANCELLED_EVENT_TAG = MarketEvent.OrderCancelled.value
 *     MARKET_ORDER_FILLED_EVENT_TAG = MarketEvent.OrderFilled.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_WithdrawAsset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_WITHDRAW_ASSET_EVENT_TAG, __pyx_t_2) < 0) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":196
 *     MARKET_SELL_ORDER_COMPLETED_EVENT_TAG = MarketEvent.SellOrderCompleted.value
 *     MARKET_WITHDRAW_ASSET_EVENT_TAG = MarketEvent.WithdrawAsset.value
 *     MARKET_ORDER_CANCELLED_EVENT_TAG = MarketEvent.OrderCancelled.value             # <<<<<<<<<<<<<<
 *     MARKET_ORDER_FILLED_EVENT_TAG = MarketEvent.OrderFilled.value
 *     MARKET_TRANSACTION_FAILURE_EVENT_TAG = MarketEvent.TransactionFailure.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_OrderCancelled); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_ORDER_CANCELLED_EVENT_TAG, __pyx_t_2) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":197
 *     MARKET_WITHDRAW_ASSET_EVENT_TAG = MarketEvent.WithdrawAsset.value
 *     MARKET_ORDER_CANCELLED_EVENT_TAG = MarketEvent.OrderCancelled.value
 *     MARKET_ORDER_FILLED_EVENT_TAG = MarketEvent.OrderFilled.value             # <<<<<<<<<<<<<<
 *     MARKET_TRANSACTION_FAILURE_EVENT_TAG = MarketEvent.TransactionFailure.value
 *     MARKET_BUY_ORDER_CREATED_EVENT_TAG = MarketEvent.BuyOrderCreated.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_OrderFilled); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_ORDER_FILLED_EVENT_TAG, __pyx_t_2) < 0) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":198
 *     MARKET_ORDER_CANCELLED_EVENT_TAG = MarketEvent.OrderCancelled.value
 *     MARKET_ORDER_FILLED_EVENT_TAG = MarketEvent.OrderFilled.value
 *     MARKET_TRANSACTION_FAILURE_EVENT_TAG = MarketEvent.TransactionFailure.value             # <<<<<<<<<<<<<<
 *     MARKET_BUY_ORDER_CREATED_EVENT_TAG = MarketEvent.BuyOrderCreated.value
 *     MARKET_SELL_ORDER_CREATED_EVENT_TAG = MarketEvent.SellOrderCreated.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_TransactionFailure); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_TRANSACTION_FAILURE_EVENT, __pyx_t_2) < 0) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":199
 *     MARKET_ORDER_FILLED_EVENT_TAG = MarketEvent.OrderFilled.value
 *     MARKET_TRANSACTION_FAILURE_EVENT_TAG = MarketEvent.TransactionFailure.value
 *     MARKET_BUY_ORDER_CREATED_EVENT_TAG = MarketEvent.BuyOrderCreated.value             # <<<<<<<<<<<<<<
 *     MARKET_SELL_ORDER_CREATED_EVENT_TAG = MarketEvent.SellOrderCreated.value
 *     MARKET_ORDER_EXPIRED_EVENT_TAG = MarketEvent.OrderExpired.value
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_BuyOrderCreated); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_BUY_ORDER_CREATED_EVENT_T, __pyx_t_2) < 0) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":200
 *     MARKET_TRANSACTION_FAILURE_EVENT_TAG = MarketEvent.TransactionFailure.value
 *     MARKET_BUY_ORDER_CREATED_EVENT_TAG = MarketEvent.BuyOrderCreated.value
 *     MARKET_SELL_ORDER_CREATED_EVENT_TAG = MarketEvent.SellOrderCreated.value             # <<<<<<<<<<<<<<
 *     MARKET_ORDER_EXPIRED_EVENT_TAG = MarketEvent.OrderExpired.value
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_SellOrderCreated); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_SELL_ORDER_CREATED_EVENT, __pyx_t_2) < 0) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":201
 *     MARKET_BUY_ORDER_CREATED_EVENT_TAG = MarketEvent.BuyOrderCreated.value
 *     MARKET_SELL_ORDER_CREATED_EVENT_TAG = MarketEvent.SellOrderCreated.value
 *     MARKET_ORDER_EXPIRED_EVENT_TAG = MarketEvent.OrderExpired.value             # <<<<<<<<<<<<<<
 * 
 *     API_CALL_TIMEOUT = 10.0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MarketEvent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_OrderExpired); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_MARKET_ORDER_EXPIRED_EVENT_TAG, __pyx_t_2) < 0) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":203
 *     MARKET_ORDER_EXPIRED_EVENT_TAG = MarketEvent.OrderExpired.value
 * 
 *     API_CALL_TIMEOUT = 10.0             # <<<<<<<<<<<<<<
 *     ORDER_EXPIRY_TIME = 60.0 * 15
 *     UPDATE_RULES_INTERVAL = 60.0
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_API_CALL_TIMEOUT, __pyx_float_10_0) < 0) __PYX_ERR(0, 203, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":204
 * 
 *     API_CALL_TIMEOUT = 10.0
 *     ORDER_EXPIRY_TIME = 60.0 * 15             # <<<<<<<<<<<<<<
 *     UPDATE_RULES_INTERVAL = 60.0
 *     UPDATE_OPEN_LIMIT_ORDERS_INTERVAL = 10.0
 */
  __pyx_t_2 = PyFloat_FromDouble((60.0 * 15.0)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_ORDER_EXPIRY_TIME, __pyx_t_2) < 0) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":205
 *     API_CALL_TIMEOUT = 10.0
 *     ORDER_EXPIRY_TIME = 60.0 * 15
 *     UPDATE_RULES_INTERVAL = 60.0             # <<<<<<<<<<<<<<
 *     UPDATE_OPEN_LIMIT_ORDERS_INTERVAL = 10.0
 *     UPDATE_MARKET_ORDERS_INTERVAL = 10.0
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_UPDATE_RULES_INTERVAL, __pyx_float_60_0) < 0) __PYX_ERR(0, 205, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":206
 *     ORDER_EXPIRY_TIME = 60.0 * 15
 *     UPDATE_RULES_INTERVAL = 60.0
 *     UPDATE_OPEN_LIMIT_ORDERS_INTERVAL = 10.0             # <<<<<<<<<<<<<<
 *     UPDATE_MARKET_ORDERS_INTERVAL = 10.0
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_UPDATE_OPEN_LIMIT_ORDERS_INTERVA, __pyx_float_10_0) < 0) __PYX_ERR(0, 206, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":207
 *     UPDATE_RULES_INTERVAL = 60.0
 *     UPDATE_OPEN_LIMIT_ORDERS_INTERVAL = 10.0
 *     UPDATE_MARKET_ORDERS_INTERVAL = 10.0             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_UPDATE_MARKET_ORDERS_INTERVAL, __pyx_float_10_0) < 0) __PYX_ERR(0, 207, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":210
 * 
 *     @classmethod
 *     def logger(cls) -> logging.Logger:             # <<<<<<<<<<<<<<
 *         global rrm_logger
 *         if rrm_logger is None:
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket, __pyx_n_s_logger); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "wings/market/radar_relay_market.pyx":209
 *     UPDATE_MARKET_ORDERS_INTERVAL = 10.0
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def logger(cls) -> logging.Logger:
 *         global rrm_logger
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_logger, __pyx_t_1) < 0) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":221
 *                  poll_interval: float = 5.0,
 *                  order_book_tracker_data_source_type: OrderBookTrackerDataSourceType =
 *                     OrderBookTrackerDataSourceType.EXCHANGE_API,             # <<<<<<<<<<<<<<
 *                  wallet_spender_address: str = ZERO_EX_MAINNET_ERC20_PROXY,
 *                  symbols: Optional[List[str]] = None):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_OrderBookTrackerDataSourceType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_EXCHANGE_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_k__5 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":222
 *                  order_book_tracker_data_source_type: OrderBookTrackerDataSourceType =
 *                     OrderBookTrackerDataSourceType.EXCHANGE_API,
 *                  wallet_spender_address: str = ZERO_EX_MAINNET_ERC20_PROXY,             # <<<<<<<<<<<<<<
 *                  symbols: Optional[List[str]] = None):
 *         super().__init__()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ZERO_EX_MAINNET_ERC20_PROXY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 222, __pyx_L1_error)
  __pyx_k__6 = ((PyObject*)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":530
 * 
 *     @staticmethod
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):             # <<<<<<<<<<<<<<
 *         while True:
 *             fut, coro = await coro_queue.get()
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_5wings_6market_18radar_relay_market_16RadarRelayMarket_25coro_scheduler, NULL, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_coro_scheduler, __pyx_t_2) < 0) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":529
 *                 await asyncio.sleep(1.0)
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     async def coro_scheduler(coro_queue: asyncio.Queue, interval: float = 0.5):
 *         while True:
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket, __pyx_n_s_coro_scheduler); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket->tp_dict, __pyx_n_s_coro_scheduler, __pyx_t_1) < 0) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_5wings_6market_18radar_relay_market_RadarRelayMarket);

  /* "wings/market/radar_relay_market.pyx":779
 *                    str symbol,
 *                    double amount,
 *                    object order_type = OrderType.MARKET,             # <<<<<<<<<<<<<<
 *                    double price = NaN,
 *                    dict kargs = {}):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_MARKET); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_k__20 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":780
 *                    double amount,
 *                    object order_type = OrderType.MARKET,
 *                    double price = NaN,             # <<<<<<<<<<<<<<
 *                    dict kargs = {}):
 *         cdef:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_NaN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 780, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__21 = __pyx_t_3;

  /* "wings/market/radar_relay_market.pyx":781
 *                    object order_type = OrderType.MARKET,
 *                    double price = NaN,
 *                    dict kargs = {}):             # <<<<<<<<<<<<<<
 *         cdef:
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k__22 = ((PyObject*)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "wings/market/radar_relay_market.pyx":800
 *                     str symbol,
 *                     double amount,
 *                     object order_type = OrderType.MARKET,             # <<<<<<<<<<<<<<
 *                     double price = NaN,
 *                     dict kargs = {}):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_OrderType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_MARKET); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__23 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":801
 *                     double amount,
 *                     object order_type = OrderType.MARKET,
 *                     double price = NaN,             # <<<<<<<<<<<<<<
 *                     dict kargs = {}):
 *         cdef:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_NaN); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 801, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_k__24 = __pyx_t_3;

  /* "wings/market/radar_relay_market.pyx":802
 *                     object order_type = OrderType.MARKET,
 *                     double price = NaN,
 *                     dict kargs = {}):             # <<<<<<<<<<<<<<
 *         cdef:
 *             int64_t tracking_nonce = <int64_t>(time.time() * 1e6)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__25 = ((PyObject*)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_TradingRule(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5wings_6market_18radar_relay_market_1__pyx_unpickle_TradingRule, NULL, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_TradingRule, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_TradingRule__set_state(<TradingRule> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_TradingRule__set_state(TradingRule __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.amount_decimals = __pyx_state[0]; __pyx_result.max_order_size = __pyx_state[1]; __pyx_result.min_order_size = __pyx_state[2]; __pyx_result.price_decimals = __pyx_state[3]; __pyx_result.price_precision = __pyx_state[4]; __pyx_result.symbol = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5wings_6market_18radar_relay_market_3__pyx_unpickle_InFlightOrder, NULL, __pyx_n_s_wings_market_radar_relay_market); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_InFlightOrder, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "wings/market/radar_relay_market.pyx":1
 * import aiohttp             # <<<<<<<<<<<<<<
 * import asyncio
 * from async_timeout import timeout
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../anaconda3/envs/hummingbot/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1046
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init wings.market.radar_relay_market", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init wings.market.radar_relay_market");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* None */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      CYTHON_UNUSED Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind;
    Py_ssize_t i, char_pos;
    void *result_udata;
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely(char_pos + ulength < 0))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    result_ulength++;
    value_count++;
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* PyUnicode_Unicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj) {
    if (unlikely(obj == Py_None))
        obj = __pyx_kp_u_None;
    return __Pyx_NewRef(obj);
}

/* CIntToDigits */
static const char DIGIT_PAIRS_10[2*10*10+1] = {
    "00010203040506070809"
    "10111213141516171819"
    "20212223242526272829"
    "30313233343536373839"
    "40414243444546474849"
    "50515253545556575859"
    "60616263646566676869"
    "70717273747576777879"
    "80818283848586878889"
    "90919293949596979899"
};
static const char DIGIT_PAIRS_8[2*8*8+1] = {
    "0001020304050607"
    "1011121314151617"
    "2021222324252627"
    "3031323334353637"
    "4041424344454647"
    "5051525354555657"
    "6061626364656667"
    "7071727374757677"
};
static const char DIGITS_HEX[2*16+1] = {
    "0123456789abcdef"
    "0123456789ABCDEF"
};

/* BuildPyUnicode */
static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
                                                int prepend_sign, char padding_char) {
    PyObject *uval;
    Py_ssize_t uoffset = ulength - clength;
#if CYTHON_USE_UNICODE_INTERNALS
    Py_ssize_t i;
#if CYTHON_PEP393_ENABLED
    void *udata;
    uval = PyUnicode_New(ulength, 127);
    if (unlikely(!uval)) return NULL;
    udata = PyUnicode_DATA(uval);
#else
    Py_UNICODE *udata;
    uval = PyUnicode_FromUnicode(NULL, ulength);
    if (unlikely(!uval)) return NULL;
    udata = PyUnicode_AS_UNICODE(uval);
#endif
    if (uoffset > 0) {
        i = 0;
        if (prepend_sign) {
            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, 0, '-');
            i++;
        }
        for (; i < uoffset; i++) {
            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, i, padding_char);
        }
    }
    for (i=0; i < clength; i++) {
        __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, uoffset+i, chars[i]);
    }
#else
    {
        PyObject *sign = NULL, *padding = NULL;
        uval = NULL;
        if (uoffset > 0) {
            prepend_sign = !!prepend_sign;
            if (uoffset > prepend_sign) {
                padding = PyUnicode_FromOrdinal(padding_char);
                if (likely(padding) && uoffset > prepend_sign + 1) {
                    PyObject *tmp;
                    PyObject *repeat = PyInt_FromSize_t(uoffset - prepend_sign);
                    if (unlikely(!repeat)) goto done_or_error;
                    tmp = PyNumber_Multiply(padding, repeat);
                    Py_DECREF(repeat);
                    Py_DECREF(padding);
                    padding = tmp;
                }
                if (unlikely(!padding)) goto done_or_error;
            }
            if (prepend_sign) {
                sign = PyUnicode_FromOrdinal('-');
                if (unlikely(!sign)) goto done_or_error;
            }
        }
        uval = PyUnicode_DecodeASCII(chars, clength, NULL);
        if (likely(uval) && padding) {
            PyObject *tmp = PyNumber_Add(padding, uval);
            Py_DECREF(uval);
            uval = tmp;
        }
        if (likely(uval) && sign) {
            PyObject *tmp = PyNumber_Add(sign, uval);
            Py_DECREF(uval);
            uval = tmp;
        }
done_or_error:
        Py_XDECREF(padding);
        Py_XDECREF(sign);
    }
#endif
    return uval;
}

/* CIntToPyUnicode */
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned short    uint16_t;
        #else
           typedef unsigned __int16  uint16_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_int(int value, Py_ssize_t width, char padding_char, char format_char) {
    char digits[sizeof(int)*3+2];
    char *dpos, *end = digits + sizeof(int)*3+2;
    const char *hex_digits = DIGITS_HEX;
    Py_ssize_t length, ulength;
    int prepend_sign, last_one_off;
    int remaining;
#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (format_char == 'X') {
        hex_digits += 16;
        format_char = 'x';
    }
    remaining = value;
    last_one_off = 0;
    dpos = end;
    do {
        int digit_pos;
        switch (format_char) {
        case 'o':
            digit_pos = abs((int)(remaining % (8*8)));
            remaining = (int) (remaining / (8*8));
            dpos -= 2;
            *(uint16_t*)dpos = ((const uint16_t*)DIGIT_PAIRS_8)[digit_pos];
            last_one_off = (digit_pos < 8);
            break;
        case 'd':
            digit_pos = abs((int)(remaining % (10*10)));
            remaining = (int) (remaining / (10*10));
            dpos -= 2;
            *(uint16_t*)dpos = ((const uint16_t*)DIGIT_PAIRS_10)[digit_pos];
            last_one_off = (digit_pos < 10);
            break;
        case 'x':
            *(--dpos) = hex_digits[abs((int)(remaining % 16))];
            remaining = (int) (remaining / 16);
            break;
        default:
            assert(0);
            break;
        }
    } while (unlikely(remaining != 0));
    if (last_one_off) {
        assert(*dpos == '0');
        dpos++;
    }
    length = end - dpos;
    ulength = length;
    prepend_sign = 0;
    if (!is_unsigned && value <= neg_one) {
        if (padding_char == ' ' || width <= length + 1) {
            *(--dpos) = '-';
            ++length;
        } else {
            prepend_sign = 1;
        }
        ++ulength;
    }
    if (width > ulength) {
        ulength = width;
    }
    if (ulength == 1) {
        return PyUnicode_FromOrdinal(*dpos);
    }
    return __Pyx_PyUnicode_BuildFromAscii(ulength, dpos, (int) length, prepend_sign, padding_char);
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return dict ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
        dictptr = (offset > 0) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (!dict || tp_dict_version != __PYX_GET_DICT_VERSION(dict))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* FetchCommonType */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* CoroutineBase */
#include <structmember.h>
#include <frameobject.h>
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(CYTHON_UNUSED __pyx_CoroutineObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(CYTHON_UNUSED PyObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(CYTHON_UNUSED PyObject *gen, PyObject *value, CYTHON_UNUSED int closing) {
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_type) {
        #if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
        #else
        if (exc_state->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_state->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body((PyObject *) self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *exc_tb = exc_state->exc_traceback;
    if (likely(exc_tb)) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
#endif
    }
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(CYTHON_UNUSED PyObject* gen, PyObject *retval) {
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, CYTHON_UNUSED PyObject *arg) {
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = PyObject_CallObject(meth, args);
            } else {
                ret = PyObject_CallFunctionObjArgs(meth, typ, val, tb, NULL);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_name;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_qualname;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    PyObject_GC_Track(gen);
    return gen;
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Coroutine */
static void __Pyx_CoroutineAwait_dealloc(PyObject *self) {
    PyObject_GC_UnTrack(self);
    Py_CLEAR(((__pyx_CoroutineAwaitObject*)self)->coroutine);
    PyObject_GC_Del(self);
}
static int __Pyx_CoroutineAwait_traverse(__pyx_CoroutineAwaitObject *self, visitproc visit, void *arg) {
    Py_VISIT(self->coroutine);
    return 0;
}
static int __Pyx_CoroutineAwait_clear(__pyx_CoroutineAwaitObject *self) {
    Py_CLEAR(self->coroutine);
    return 0;
}
static PyObject *__Pyx_CoroutineAwait_Next(__pyx_CoroutineAwaitObject *self) {
    return __Pyx_Generator_Next(self->coroutine);
}
static PyObject *__Pyx_CoroutineAwait_Send(__pyx_CoroutineAwaitObject *self, PyObject *value) {
    return __Pyx_Coroutine_Send(self->coroutine, value);
}
static PyObject *__Pyx_CoroutineAwait_Throw(__pyx_CoroutineAwaitObject *self, PyObject *args) {
    return __Pyx_Coroutine_Throw(self->coroutine, args);
}
static PyObject *__Pyx_CoroutineAwait_Close(__pyx_CoroutineAwaitObject *self, CYTHON_UNUSED PyObject *arg) {
    return __Pyx_Coroutine_Close(self->coroutine);
}
static PyObject *__Pyx_CoroutineAwait_self(PyObject *self) {
    Py_INCREF(self);
    return self;
}
#if !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_CoroutineAwait_no_new(CYTHON_UNUSED PyTypeObject *type, CYTHON_UNUSED PyObject *args, CYTHON_UNUSED PyObject *kwargs) {
    PyErr_SetString(PyExc_TypeError, "cannot instantiate type, use 'await coroutine' instead");
    return NULL;
}
#endif
static PyMethodDef __pyx_CoroutineAwait_methods[] = {
    {"send", (PyCFunction) __Pyx_CoroutineAwait_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into coroutine,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_CoroutineAwait_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in coroutine,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_CoroutineAwait_Close, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside coroutine.")},
    {0, 0, 0, 0}
};
static PyTypeObject __pyx_CoroutineAwaitType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "coroutine_wrapper",
    sizeof(__pyx_CoroutineAwaitObject),
    0,
    (destructor) __Pyx_CoroutineAwait_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    PyDoc_STR("A wrapper object implementing __await__ for coroutines."),
    (traverseproc) __Pyx_CoroutineAwait_traverse,
    (inquiry) __Pyx_CoroutineAwait_clear,
    0,
    0,
    __Pyx_CoroutineAwait_self,
    (iternextfunc) __Pyx_CoroutineAwait_Next,
    __pyx_CoroutineAwait_methods,
    0                         ,
    0                      ,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if !CYTHON_COMPILING_IN_PYPY
    __Pyx_CoroutineAwait_no_new,
#else
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
#if PY_VERSION_HEX < 0x030500B1 || defined(__Pyx_IterableCoroutine_USED) || CYTHON_USE_ASYNC_SLOTS
static CYTHON_INLINE PyObject *__Pyx__Coroutine_await(PyObject *coroutine) {
    __pyx_CoroutineAwaitObject *await = PyObject_GC_New(__pyx_CoroutineAwaitObject, __pyx_CoroutineAwaitType);
    if (unlikely(!await)) return NULL;
    Py_INCREF(coroutine);
    await->coroutine = coroutine;
    PyObject_GC_Track(await);
    return (PyObject*)await;
}
#endif
#if PY_VERSION_HEX < 0x030500B1
static PyObject *__Pyx_Coroutine_await_method(PyObject *coroutine, CYTHON_UNUSED PyObject *arg) {
    return __Pyx__Coroutine_await(coroutine);
}
#endif
#if defined(__Pyx_IterableCoroutine_USED) || CYTHON_USE_ASYNC_SLOTS
static PyObject *__Pyx_Coroutine_await(PyObject *coroutine) {
    if (unlikely(!coroutine || !__Pyx_Coroutine_Check(coroutine))) {
        PyErr_SetString(PyExc_TypeError, "invalid input, expected coroutine");
        return NULL;
    }
    return __Pyx__Coroutine_await(coroutine);
}
#endif
static PyObject *
__Pyx_Coroutine_get_frame(CYTHON_UNUSED __pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    Py_RETURN_NONE;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3 && PY_VERSION_HEX < 0x030500B1
static PyObject *__Pyx_Coroutine_compare(PyObject *obj, PyObject *other, int op) {
    PyObject* result;
    switch (op) {
        case Py_EQ: result = (other == obj) ? Py_True : Py_False; break;
        case Py_NE: result = (other != obj) ? Py_True : Py_False; break;
        default:
            result = Py_NotImplemented;
    }
    Py_INCREF(result);
    return result;
}
#endif
static PyMethodDef __pyx_Coroutine_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into coroutine,\nreturn next iterated value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in coroutine,\nreturn next iterated value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside coroutine.")},
#if PY_VERSION_HEX < 0x030500B1
    {"__await__", (PyCFunction) __Pyx_Coroutine_await_method, METH_NOARGS,
     (char*) PyDoc_STR("__await__() -> return an iterator to be used in await expression.")},
#endif
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Coroutine_memberlist[] = {
    {(char *) "cr_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "cr_await", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being awaited, or None")},
    {(char*) "cr_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_modulename), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Coroutine_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the coroutine"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the coroutine"), 0},
    {(char *) "cr_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
     (char*) PyDoc_STR("Frame of the coroutine"), 0},
    {0, 0, 0, 0, 0}
};
#if CYTHON_USE_ASYNC_SLOTS
static __Pyx_PyAsyncMethodsStruct __pyx_Coroutine_as_async = {
    __Pyx_Coroutine_await,
    0,
    0,
};
#endif
static PyTypeObject __pyx_CoroutineType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "coroutine",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
#if CYTHON_USE_ASYNC_SLOTS
    &__pyx_Coroutine_as_async,
#else
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
#if CYTHON_USE_ASYNC_SLOTS && CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3 && PY_VERSION_HEX < 0x030500B1
    __Pyx_Coroutine_compare,
#else
    0,
#endif
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    0,
    __pyx_Coroutine_methods,
    __pyx_Coroutine_memberlist,
    __pyx_Coroutine_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_Coroutine_init(void) {
    __pyx_CoroutineType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_CoroutineType = __Pyx_FetchCommonType(&__pyx_CoroutineType_type);
    if (unlikely(!__pyx_CoroutineType))
        return -1;
#ifdef __Pyx_IterableCoroutine_USED
    if (unlikely(__pyx_IterableCoroutine_init() == -1))
        return -1;
#endif
    __pyx_CoroutineAwaitType = __Pyx_FetchCommonType(&__pyx_CoroutineAwaitType_type);
    if (unlikely(!__pyx_CoroutineAwaitType))
        return -1;
    return 0;
}

/* GetAwaitIter */
static CYTHON_INLINE PyObject *__Pyx_Coroutine_GetAwaitableIter(PyObject *o) {
#ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(o)) {
        return __Pyx_NewRef(o);
    }
#endif
    return __Pyx__Coroutine_GetAwaitableIter(o);
}
static void __Pyx_Coroutine_AwaitableIterError(PyObject *source) {
#if PY_VERSION_HEX >= 0x030600B3 || defined(_PyErr_FormatFromCause)
    _PyErr_FormatFromCause(
        PyExc_TypeError,
        "'async for' received an invalid object "
        "from __anext__: %.100s",
        Py_TYPE(source)->tp_name);
#elif PY_MAJOR_VERSION >= 3
    PyObject *exc, *val, *val2, *tb;
    assert(PyErr_Occurred());
    PyErr_Fetch(&exc, &val, &tb);
    PyErr_NormalizeException(&exc, &val, &tb);
    if (tb != NULL) {
        PyException_SetTraceback(val, tb);
        Py_DECREF(tb);
    }
    Py_DECREF(exc);
    assert(!PyErr_Occurred());
    PyErr_Format(
        PyExc_TypeError,
        "'async for' received an invalid object "
        "from __anext__: %.100s",
        Py_TYPE(source)->tp_name);
    PyErr_Fetch(&exc, &val2, &tb);
    PyErr_NormalizeException(&exc, &val2, &tb);
    Py_INCREF(val);
    PyException_SetCause(val2, val);
    PyException_SetContext(val2, val);
    PyErr_Restore(exc, val2, tb);
#else
    source++;
#endif
}
static PyObject *__Pyx__Coroutine_GetAwaitableIter(PyObject *obj) {
    PyObject *res;
#if CYTHON_USE_ASYNC_SLOTS
    __Pyx_PyAsyncMethodsStruct* am = __Pyx_PyType_AsAsync(obj);
    if (likely(am && am->am_await)) {
        res = (*am->am_await)(obj);
    } else
#endif
#if PY_VERSION_HEX >= 0x030500B2 || defined(PyCoro_CheckExact)
    if (PyCoro_CheckExact(obj)) {
        return __Pyx_NewRef(obj);
    } else
#endif
#if CYTHON_COMPILING_IN_CPYTHON && defined(CO_ITERABLE_COROUTINE)
    if (PyGen_CheckExact(obj) && ((PyGenObject*)obj)->gi_code && ((PyCodeObject *)((PyGenObject*)obj)->gi_code)->co_flags & CO_ITERABLE_COROUTINE) {
        return __Pyx_NewRef(obj);
    } else
#endif
    {
        PyObject *method = NULL;
        int is_method = __Pyx_PyObject_GetMethod(obj, __pyx_n_s_await, &method);
        if (likely(is_method)) {
            res = __Pyx_PyObject_CallOneArg(method, obj);
        } else if (likely(method)) {
            res = __Pyx_PyObject_CallNoArg(method);
        } else
            goto slot_error;
        Py_DECREF(method);
    }
    if (unlikely(!res)) {
        __Pyx_Coroutine_AwaitableIterError(obj);
        goto bad;
    }
    if (unlikely(!PyIter_Check(res))) {
        PyErr_Format(PyExc_TypeError,
                     "__await__() returned non-iterator of type '%.100s'",
                     Py_TYPE(res)->tp_name);
        Py_CLEAR(res);
    } else {
        int is_coroutine = 0;
        #ifdef __Pyx_Coroutine_USED
        is_coroutine |= __Pyx_Coroutine_Check(res);
        #endif
        #if PY_VERSION_HEX >= 0x030500B2 || defined(PyCoro_CheckExact)
        is_coroutine |= PyCoro_CheckExact(res);
        #endif
        if (unlikely(is_coroutine)) {
            /* __await__ must return an *iterator*, not
               a coroutine or another awaitable (see PEP 492) */
            PyErr_SetString(PyExc_TypeError,
                            "__await__() returned a coroutine");
            Py_CLEAR(res);
        }
    }
    return res;
slot_error:
    PyErr_Format(PyExc_TypeError,
                 "object %.100s can't be used in 'await' expression",
                 Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* CoroutineYieldFrom */
static PyObject* __Pyx__Coroutine_Yield_From_Generic(__pyx_CoroutineObject *gen, PyObject *source) {
    PyObject *retval;
    PyObject *source_gen = __Pyx__Coroutine_GetAwaitableIter(source);
    if (unlikely(!source_gen)) {
        return NULL;
    }
    if (__Pyx_Coroutine_Check(source_gen)) {
        retval = __Pyx_Generator_Next(source_gen);
    } else {
#if CYTHON_USE_TYPE_SLOTS
        retval = Py_TYPE(source_gen)->tp_iternext(source_gen);
#else
        retval = PyIter_Next(source_gen);
#endif
    }
    if (retval) {
        gen->yieldfrom = source_gen;
        return retval;
    }
    Py_DECREF(source_gen);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_Coroutine_Yield_From(__pyx_CoroutineObject *gen, PyObject *source) {
    PyObject *retval;
    if (__Pyx_Coroutine_Check(source)) {
        if (unlikely(((__pyx_CoroutineObject*)source)->yieldfrom)) {
            PyErr_SetString(
                PyExc_RuntimeError,
                "coroutine is being awaited already");
            return NULL;
        }
        retval = __Pyx_Generator_Next(source);
#ifdef __Pyx_AsyncGen_USED
    } else if (__pyx_PyAsyncGenASend_CheckExact(source)) {
        retval = __Pyx_async_gen_asend_iternext(source);
#endif
    } else {
        return __Pyx__Coroutine_Yield_From_Generic(gen, source);
    }
    if (retval) {
        Py_INCREF(source);
        gen->yieldfrom = source;
    }
    return retval;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* ReturnWithStopIteration */
static void __Pyx__ReturnWithStopIteration(PyObject* value) {
    PyObject *exc, *args;
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_PYSTON
    __Pyx_PyThreadState_declare
    if ((PY_VERSION_HEX >= 0x03030000 && PY_VERSION_HEX < 0x030500B1)
            || unlikely(PyTuple_Check(value) || PyExceptionInstance_Check(value))) {
        args = PyTuple_New(1);
        if (unlikely(!args)) return;
        Py_INCREF(value);
        PyTuple_SET_ITEM(args, 0, value);
        exc = PyType_Type.tp_call(PyExc_StopIteration, args, NULL);
        Py_DECREF(args);
        if (!exc) return;
    } else {
        Py_INCREF(value);
        exc = value;
    }
    #if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    #if CYTHON_USE_EXC_INFO_STACK
    if (!__pyx_tstate->exc_info->exc_type)
    #else
    if (!__pyx_tstate->exc_type)
    #endif
    {
        Py_INCREF(PyExc_StopIteration);
        __Pyx_ErrRestore(PyExc_StopIteration, exc, NULL);
        return;
    }
    #endif
#else
    args = PyTuple_Pack(1, value);
    if (unlikely(!args)) return;
    exc = PyObject_Call(PyExc_StopIteration, args, NULL);
    Py_DECREF(args);
    if (unlikely(!exc)) return;
#endif
    PyErr_SetObject(PyExc_StopIteration, exc);
    Py_DECREF(exc);
}

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod0 */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self) {
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_ASSUME_SAFE_MACROS
    args = PyTuple_New(1);
    if (unlikely(!args)) goto bad;
    Py_INCREF(self);
    PyTuple_SET_ITEM(args, 0, self);
#else
    args = PyTuple_Pack(1, self);
    if (unlikely(!args)) goto bad;
#endif
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    Py_DECREF(args);
bad:
    return result;
}

/* py_dict_values */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Values(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_CallUnboundCMethod0(&__pyx_umethod_PyDict_Type_values, d);
    else
        return PyDict_Values(d);
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_FALSE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* pyobject_as_double */
static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
#if !CYTHON_USE_TYPE_SLOTS
    float_value = PyNumber_Float(obj);  if ((0)) goto bad;
#else
    PyNumberMethods *nb = Py_TYPE(obj)->tp_as_number;
    if (likely(nb) && likely(nb->nb_float)) {
        float_value = nb->nb_float(obj);
        if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {
            PyErr_Format(PyExc_TypeError,
                "__float__ returned non-float (type %.200s)",
                Py_TYPE(float_value)->tp_name);
            Py_DECREF(float_value);
            goto bad;
        }
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
#endif
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* CallNextTpDealloc */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

/* CallNextTpTraverse */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* GetVTable */
static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* SetupReduce */
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* PatchInspect */
static PyObject* __Pyx_patch_inspect(PyObject* module) {
#if defined(__Pyx_Generator_USED) && (!defined(CYTHON_PATCH_INSPECT) || CYTHON_PATCH_INSPECT)
    static int inspect_patched = 0;
    if (unlikely((!inspect_patched) && module)) {
        module = __Pyx_Coroutine_patch_module(
            module, ""
"old_types = getattr(_module.isgenerator, '_cython_generator_types', None)\n"
"if old_types is None or not isinstance(old_types, set):\n"
"    old_types = set()\n"
"    def cy_wrap(orig_func, type=type, cython_generator_types=old_types):\n"
"        def cy_isgenerator(obj): return type(obj) in cython_generator_types or orig_func(obj)\n"
"        cy_isgenerator._cython_generator_types = cython_generator_types\n"
"        return cy_isgenerator\n"
"    _module.isgenerator = cy_wrap(_module.isgenerator)\n"
"old_types.add(_cython_generator_type)\n"
        );
        inspect_patched = 1;
    }
#else
    if ((0)) return __Pyx_Coroutine_patch_module(module, NULL);
#endif
    return module;
}

/* PatchAsyncIO */
static PyObject* __Pyx_patch_asyncio(PyObject* module) {
#if PY_VERSION_HEX < 0x030500B2 &&\
        (defined(__Pyx_Coroutine_USED) || defined(__Pyx_Generator_USED)) &&\
        (!defined(CYTHON_PATCH_ASYNCIO) || CYTHON_PATCH_ASYNCIO)
    PyObject *patch_module = NULL;
    static int asyncio_patched = 0;
    if (unlikely((!asyncio_patched) && module)) {
        PyObject *package;
        package = __Pyx_Import(__pyx_n_s_asyncio_coroutines, NULL, 0);
        if (package) {
            patch_module = __Pyx_Coroutine_patch_module(
                PyObject_GetAttrString(package, "coroutines"), ""
"try:\n"
"    coro_types = _module._COROUTINE_TYPES\n"
"except AttributeError: pass\n"
"else:\n"
"    if _cython_coroutine_type is not None and _cython_coroutine_type not in coro_types:\n"
"        coro_types = tuple(coro_types) + (_cython_coroutine_type,)\n"
"    if _cython_generator_type is not None and _cython_generator_type not in coro_types:\n"
"        coro_types = tuple(coro_types) + (_cython_generator_type,)\n"
"_module._COROUTINE_TYPES = coro_types\n"
            );
        } else {
            PyErr_Clear();
            package = __Pyx_Import(__pyx_n_s_asyncio_tasks, NULL, 0);
            if (unlikely(!package)) goto asyncio_done;
            patch_module = __Pyx_Coroutine_patch_module(
                PyObject_GetAttrString(package, "tasks"), ""
"if hasattr(_module, 'iscoroutine'):\n"
"    old_types = getattr(_module.iscoroutine, '_cython_coroutine_types', None)\n"
"    if old_types is None or not isinstance(old_types, set):\n"
"        old_types = set()\n"
"        def cy_wrap(orig_func, type=type, cython_coroutine_types=old_types):\n"
"            def cy_iscoroutine(obj): return type(obj) in cython_coroutine_types or orig_func(obj)\n"
"            cy_iscoroutine._cython_coroutine_types = cython_coroutine_types\n"
"            return cy_iscoroutine\n"
"        _module.iscoroutine = cy_wrap(_module.iscoroutine)\n"
"    if _cython_coroutine_type is not None:\n"
"        old_types.add(_cython_coroutine_type)\n"
"    if _cython_generator_type is not None:\n"
"        old_types.add(_cython_generator_type)\n"
            );
        }
        Py_DECREF(package);
        if (unlikely(!patch_module)) goto ignore;
asyncio_done:
        PyErr_Clear();
        asyncio_patched = 1;
#ifdef __Pyx_Generator_USED
        {
            PyObject *inspect_module;
            if (patch_module) {
                inspect_module = PyObject_GetAttr(patch_module, __pyx_n_s_inspect);
                Py_DECREF(patch_module);
            } else {
                inspect_module = __Pyx_Import(__pyx_n_s_inspect, NULL, 0);
            }
            if (unlikely(!inspect_module)) goto ignore;
            inspect_module = __Pyx_patch_inspect(inspect_module);
            if (unlikely(!inspect_module)) {
                Py_DECREF(module);
                module = NULL;
            }
            Py_XDECREF(inspect_module);
        }
#else
        if ((0)) return __Pyx_patch_inspect(module);
#endif
    }
    return module;
ignore:
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch asyncio package with custom generator type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    if ((0)) return __Pyx_patch_inspect(__Pyx_Coroutine_patch_module(module, NULL));
#endif
    return module;
}

/* ClassMethod */
static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYSTON || CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method))
#else
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (__Pyx_TypeCheck(method, methoddescr_type))
#endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __Pyx_CyFunction_USED
    else if (__Pyx_CyFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#endif
    PyErr_SetString(PyExc_TypeError,
                   "Class-level classmethod() can only be called on "
                   "a method_descriptor or instance method.");
    return NULL;
}

/* GetNameInClass */
static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    PyObject *result;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int64_t(int64_t value) {
    const int64_t neg_one = (int64_t) ((int64_t) 0 - (int64_t) 1), const_zero = (int64_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int64_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int64_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int64_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int64_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int64_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int64_t),
                                     little, !is_unsigned);
    }
}

/* Declarations */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) ((enum NPY_TYPES) 0 - (enum NPY_TYPES) 1), const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int64_t __Pyx_PyInt_As_int64_t(PyObject *x) {
    const int64_t neg_one = (int64_t) ((int64_t) 0 - (int64_t) 1), const_zero = (int64_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int64_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int64_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int64_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int64_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int64_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(int64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) >= 2 * PyLong_SHIFT) {
                            return (int64_t) (((((int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) >= 3 * PyLong_SHIFT) {
                            return (int64_t) (((((((int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) >= 4 * PyLong_SHIFT) {
                            return (int64_t) (((((((((int64_t)digits[3]) << PyLong_SHIFT) | (int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int64_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int64_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int64_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int64_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int64_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int64_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int64_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (int64_t) (((int64_t)-1)*(((((int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (int64_t) ((((((int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int64_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (int64_t) (((int64_t)-1)*(((((((int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (int64_t) ((((((((int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int64_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (int64_t) (((int64_t)-1)*(((((((((int64_t)digits[3]) << PyLong_SHIFT) | (int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (int64_t) ((((((((((int64_t)digits[3]) << PyLong_SHIFT) | (int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int64_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int64_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int64_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int64_t) -1;
        }
    } else {
        int64_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int64_t) -1;
        val = __Pyx_PyInt_As_int64_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int64_t");
    return (int64_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int64_t");
    return (int64_t) -1;
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
