# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/hummingbot-circleci
    docker:
      # Specify base image: using Anaconda
      - image: coinalpha/condatest:0.1.0
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum ".circleci/requirements-linux.txt" }}
            # fallback to using the latest cache if no exact match is found
            # - v1-dependencies-

      - run:
          name: Install Linux Dependencies
          command: |
            # install basic dependencies for Linux
            apt update
            apt-get update
            apt-get -y install $(grep -vE "^\s*#" .circleci/requirements-linux.txt  | tr "\n" " ")

      - run:
          name: Install Hummingbot and Create Environment
          command: |
            conda env create -f setup/environment-linux.yml

      - run:
          name: Compile Hummingbot
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            ./compile

      - save_cache:
          paths:
            - ./hummingbot-circleci
          key: v1-dependencies-{{ checksum ".circleci/requirements-linux.txt" }}

      # 
      # Run Tests
      #

      - run:
          name: Run Strategy Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            nosetests -d -v test/test_cross_exchange_market_making.py
            nosetests -d -v test/test_arbitrage.py
            nosetests -d -v test/test_discovery_strategy.py
            nosetests -d -v test/test_pure_market_making.py
            
      - run:
          name: Run Exchange Rate Converter Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            nosetests -d -v test/test_exchange_rate_conversion.py

      - run:
          name: Run Wallet Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_wallet_sim.py
            # nosetests -d -v test/test_web3_wallet.py

      - run:
          name: Run Binance Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_binance_order_book_loader.py
            # nosetests -d -v test/test_binance_order_book_tracker.py
            # nosetests -d -v test/test_binance_market.py

      - run:
          name: Run DDEX Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_ddex_order_book_loader.py
            # nosetests -d -v test/test_ddex_order_book_tracker.py
            # nosetests -d -v test/test_ddex_market.py

      - run:
          name: Run Radar Relay Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_radar_relay_order_book_loader.py
            # nosetests -d -v test/test_radar_relay_order_book_tracker.py

      - run:
          name: Run Bamboo Relay Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_bamboo_relay_order_book_loader.py
            # nosetests -d -v test/test_bamboo_relay_order_book_tracker.py

      - run:
          name: Run Bittrex Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_bittrex_order_book_loader.py
            # nosetests -d -v test/test_bittrex_order_book_tracker.py

      - run:
          name: Run Huobi Tests
          command: |
            source activate $(head -1 setup/environment-linux.yml | cut -d ' ' -f2)
            # nosetests -d -v test/test_huobi_order_book_loader.py
            # nosetests -d -v test/test_huobi_order_book_tracker.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
